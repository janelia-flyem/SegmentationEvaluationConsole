{"version":3,"sources":["webpack:///webpack/bootstrap c01bae982b30524f4e2b","webpack:///./src/neuroglancer/datasource/brainmaps/frontend.ts","webpack:///./src/neuroglancer/datasource/brainmaps/api_frontend.ts","webpack:///./src/neuroglancer/datasource/brainmaps/api_implementation.ts","webpack:///./src/neuroglancer/status.ts","webpack:///./src/neuroglancer/status.css","webpack:///./src/neuroglancer/util/promise.ts","webpack:///./src/neuroglancer/worker_rpc.ts","webpack:///./src/neuroglancer/util/disposable.ts","webpack:///./src/neuroglancer/util/google_oauth2.ts","webpack:///./src/neuroglancer/util/dom.ts","webpack:///./src/neuroglancer/util/json.ts","webpack:///./src/neuroglancer/util/random.ts","webpack:///./src/neuroglancer/datasource/brainmaps/api.ts","webpack:///./src/neuroglancer/util/http_request.ts","webpack:///./src/neuroglancer/util/hash.ts","webpack:///./src/neuroglancer/datasource/brainmaps/base.ts","webpack:///./src/neuroglancer/datasource/factory.ts","webpack:///./src/neuroglancer/util/completion.ts","webpack:///./src/neuroglancer/sliceview/base.ts","webpack:///./src/neuroglancer/sliceview/chunk_layout.ts","webpack:///./src/neuroglancer/util/geom.ts","webpack:///./~/gl-matrix/src/gl-matrix.js","webpack:///./~/gl-matrix/src/gl-matrix/common.js","webpack:///./~/gl-matrix/src/gl-matrix/mat2.js","webpack:///./~/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./~/gl-matrix/src/gl-matrix/mat3.js","webpack:///./~/gl-matrix/src/gl-matrix/mat4.js","webpack:///./~/gl-matrix/src/gl-matrix/quat.js","webpack:///./~/gl-matrix/src/gl-matrix/vec3.js","webpack:///./~/gl-matrix/src/gl-matrix/vec4.js","webpack:///./~/gl-matrix/src/gl-matrix/vec2.js","webpack:///./src/neuroglancer/util/compare.ts","webpack:///./src/neuroglancer/util/array.ts","webpack:///./src/neuroglancer/sliceview/frontend.ts","webpack:///./src/neuroglancer/chunk_manager/base.ts","webpack:///./src/neuroglancer/chunk_manager/frontend.ts","webpack:///./~/signals/dist/signals.js","webpack:///./src/neuroglancer/util/memoize.ts","webpack:///./src/neuroglancer/sliceview/renderlayer.ts","webpack:///./src/neuroglancer/webgl/buffer.ts","webpack:///./src/neuroglancer/webgl/shader.ts","webpack:///./src/neuroglancer/layer.ts","webpack:///./src/neuroglancer/util/uint64.ts","webpack:///./src/neuroglancer/util/signal_binding_updater.ts","webpack:///./~/lodash/throttle.js","webpack:///./~/lodash/debounce.js","webpack:///./~/lodash/isObject.js","webpack:///./~/lodash/now.js","webpack:///./~/lodash/toNumber.js","webpack:///./~/lodash/isFunction.js","webpack:///./~/lodash/isSymbol.js","webpack:///./~/lodash/isObjectLike.js","webpack:///./src/neuroglancer/webgl/offscreen.ts","webpack:///./src/neuroglancer/webgl/texture.ts","webpack:///./src/neuroglancer/webgl/trivial_shaders.ts","webpack:///./src/neuroglancer/mesh/frontend.ts","webpack:///./src/neuroglancer/perspective_panel.ts","webpack:///./src/neuroglancer/axes_lines.ts","webpack:///./src/neuroglancer/object_picking.ts","webpack:///./src/neuroglancer/rendered_data_panel.ts","webpack:///./src/neuroglancer/display_context.ts","webpack:///./src/neuroglancer/webgl/context.ts","webpack:///./src/neuroglancer/util/wheel_zoom.ts","webpack:///./src/neuroglancer/rendered_data_panel.css","webpack:///./src/neuroglancer/trackable_boolean.ts","webpack:///./src/neuroglancer/util/mouse_drag.ts","webpack:///./src/neuroglancer/webgl/shader_lib.ts","webpack:///./src/neuroglancer/noselect.css","webpack:///./src/neuroglancer/perspective_panel.css","webpack:///./src/neuroglancer/datasource/ndstore/frontend.ts","webpack:///./src/neuroglancer/datasource/dvid/frontend.ts","webpack:///./src/neuroglancer/datasource/dvid/base.ts","webpack:///./src/neuroglancer/datasource/openconnectome/frontend.ts","webpack:///./src/neuroglancer/datasource/precomputed/frontend.ts","webpack:///./src/neuroglancer/datasource/precomputed/base.ts","webpack:///./src/main.ts","webpack:///./src/neuroglancer/default_viewer.ts","webpack:///./src/neuroglancer/default_viewer.css","webpack:///./src/neuroglancer/sliceview/chunk_format_handlers.ts","webpack:///./src/neuroglancer/sliceview/uncompressed_chunk_format.ts","webpack:///./src/neuroglancer/sliceview/single_texture_chunk_format.ts","webpack:///./src/neuroglancer/sliceview/compressed_segmentation/chunk_format.ts","webpack:///./src/neuroglancer/sliceview/compressed_segmentation/decode_uint64.ts","webpack:///./src/neuroglancer/sliceview/compressed_segmentation/decode_common.ts","webpack:///./src/neuroglancer/sliceview/compressed_segmentation/decode_uint32.ts","webpack:///./src/neuroglancer/viewer.ts","webpack:///./src/neuroglancer/help/key_bindings.ts","webpack:///./src/neuroglancer/overlay.ts","webpack:///./src/neuroglancer/util/keyboard_shortcut_handler.ts","webpack:///./src/neuroglancer/overlay.css","webpack:///./src/neuroglancer/help/key_bindings.css","webpack:///./src/neuroglancer/layer_dialog.ts","webpack:///./src/neuroglancer/layer_specification.ts","webpack:///./src/neuroglancer/segmentation_user_layer.ts","webpack:///./src/neuroglancer/segment_color.ts","webpack:///./src/neuroglancer/gpu_hash/hash_function.ts","webpack:///./src/neuroglancer/gpu_hash/shader.ts","webpack:///./src/neuroglancer/gpu_hash/hash_table.ts","webpack:///./src/neuroglancer/util/colorspace.ts","webpack:///./src/neuroglancer/widget/segment_set_widget.ts","webpack:///./src/neuroglancer/widget/segment_set_widget.css","webpack:///./src/neuroglancer/segmentation_display_state.ts","webpack:///./src/neuroglancer/uint64_set.ts","webpack:///./src/neuroglancer/sliceview/segmentation_renderlayer.ts","webpack:///./src/neuroglancer/trackable_value.ts","webpack:///./src/neuroglancer/skeleton/frontend.ts","webpack:///./src/neuroglancer/sliceview/panel.ts","webpack:///./src/neuroglancer/widget/scale_bar.ts","webpack:///./src/neuroglancer/widget/scale_bar.css","webpack:///./src/neuroglancer/widget/uint64_entry_widget.ts","webpack:///./src/neuroglancer/widget/uint64_entry_widget.css","webpack:///./src/neuroglancer/widget/range.ts","webpack:///./src/neuroglancer/widget/range.css","webpack:///./src/neuroglancer/segmentation_user_layer.css","webpack:///./src/neuroglancer/image_user_layer.ts","webpack:///./src/neuroglancer/sliceview/image_renderlayer.ts","webpack:///./src/neuroglancer/widget/autocomplete.ts","webpack:///./src/neuroglancer/util/dropdown.ts","webpack:///./src/neuroglancer/util/longest_common_prefix.ts","webpack:///./src/neuroglancer/util/scroll_into_view.ts","webpack:///./src/neuroglancer/widget/associate_label.ts","webpack:///./src/neuroglancer/widget/autocomplete.css","webpack:///./src/neuroglancer/widget/hidden_submit_button.ts","webpack:///./src/neuroglancer/layer_dialog.css","webpack:///./src/neuroglancer/layer_panel.ts","webpack:///./src/neuroglancer/util/sortablejs_es6.js","webpack:///./~/sortablejs/Sortable.js","webpack:///./src/neuroglancer/layer_panel.css","webpack:///./src/neuroglancer/layout.ts","webpack:///./src/neuroglancer/navigation_state.ts","webpack:///./src/neuroglancer/position_status_panel.ts","webpack:///./src/neuroglancer/position_status_panel.css","webpack:///./src/neuroglancer/url_hash_state.ts","webpack:///./src/neuroglancer/viewer.css","webpack:///./src/neuroglancer/default_key_bindings.ts"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;ACrEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;;AAEA,kC;AACA,qB;AACA,gB;AACA,gB;AACA,8B;AACA,qB;AACA,E;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnbA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA,2B;AACA;AACA,E;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpdA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,e;AACA,oB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,e;AACA,oB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;AACV;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,WAAW,WAAW;AACpC;AACA;AACA;AACA;;AAEA,cAAc,WAAW,YAAY;AACrC;AACA;AACA;AACA;;AAEA,eAAe,YAAY,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,YAAY,YAAY;AAC3C,mBAAmB,YAAY,YAAY;AAC3C,mBAAmB,YAAY,aAAa;;AAE5C,qBAAqB,cAAc,cAAc;AACjD,qBAAqB,cAAc,cAAc;AACjD,qBAAqB,cAAc,eAAe;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,eAAe,eAAe;AACpD,sBAAsB,eAAe,eAAe;AACpD,sBAAsB,eAAe,iBAAiB;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,aAAa;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,YAAY,YAAY;AACvC,eAAe,YAAY,YAAY;AACvC,eAAe,YAAY,aAAa;;AAExC;AACA,wBAAwB,yBAAyB;AACjD,4BAA4B,qBAAqB;AACjD,4BAA4B,yBAAyB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,aAAa;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA,kB;AACA;AACA;AACA;AACA,mC;AACA,mC;AACA,GAAG,iD;AACH;AACA;AACA;AACA,mC;AACA,mC;AACA,GAAG,6B;AACH;AACA;AACA,mC;AACA;AACA,mC;AACA,GAAG,O;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;ACvlEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA,e;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA,e;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA,e;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,O;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;;AAEA;;;;;;;ACvlBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA,uBAAuB,OAAO;AAC9B,0BAA0B,iBAAiB;AAC3C;AACA,0BAA0B,iBAAiB;AAC3C;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,K;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxwBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA,uBAAuB,OAAO;AAC9B,0BAA0B,iBAAiB,iBAAiB;AAC5D;AACA,0BAA0B,iBAAiB,iBAAiB;AAC5D;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA,uBAAuB,OAAO;AAC9B,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AC1jBA,qBAAqC,GAAW;AAC3C,QAAE,MAAO,GAAE;AACN,eACR;AAAC;AACM,WAAK,KAAI,IAAE,IAAK,KAAO,KAAI,IAAK,KAAI,IAAG,IAAM,KAAI,IAAI,MAC9D;AAAC;AALe,QAAW,cAK1B,Y;;;;;;;;;;;;;;;;;;;;;ACSE;;;;;;;;;;;;AACH,wBACc,OAAe,OAAa,KAA8B;AACjE,WAAO,QAAM,MAAI;AACpB,YAAK,IAAQ,MAAQ;AAClB,YAAU,UAAI,IAAE;AACjB,cAAQ;AAEV;AAAC;AACD,UAAM;AACD,cAAO,SAAQ,MAAM;AACrB,cAAK,OACZ;AAAC;AACK,WACR;AAAC;AAbe,QAAc,iBA2B3B;;;;;;AACH,uBAA4D,OAAiB;AACxE,QAAM,MAAO,WAAa,SAAE;AACvB,eACR;AAAC;AACD,QAAY,WAAG,IAAe,MAAa,YAAU;AAC7C,aAAI,IAAQ;AACd,WACR;AAAC;AAPe,QAAa,gBAO5B;AAED,gCAA8D;QAAY,mEAAI;;AAC5E,QAAU,SAAO,KAAQ;AACzB,QAAW,UAAG,IAAS,MAAiB;AACxC,QAAU,SAAU,QAAG,KAAc;AACjC,SAAC,IAAK,IAAI,GAAG,IAAS,QAAE,EAAG,GAAG;AAC1B,kBAAQ,KAAE,IAAM;AACf,gBAAG,KACZ;AAAC;AACK,WACR;AAAC;AATe,QAAsB,yBASrC,uB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DD,iCAA2D;AAC3D,qCAAqF;AAIrF,iCAA2J;AAE3J,wCAA+D;AAC/D,uCAAwD;AAExD,iCAA6E;AAC7E,mCAAiD;AAEjD,sCAAkE;AAClE,mCAAqF;AAErF,oCAA+B;AAI/B,IAAa,UAAG,OAAI,KAEpB;;;;;AA6BE,uBACiB,IAAmC,cAAmC,cAC5C;AACjC;;;;AAFC,cAAE,KAAI;AAAS,cAAY,eAAc;AAAS,cAAY,eAAc;AAC5E,cAAe,kBAAiB;AA9B3C,cAAc,iBAAG,OAAI,KAGyB;;;AAC9C,cAAgB,mBAAG,OAAI,KAEqB;;AAC5C,cAAY,eAAG,OAAI,KAAU;AAE7B,cAAa,gBAAG,IAAyC;AAEzD,cAAW,cAAG,IAAI,UAAS;AAE3B,cAAc,iBAAQ;AAEtB,cAAkB,qBAAQ;AAE1B,cAAkB,qBAAS;AAE3B,cAAgB,mBAAG,IAAyB;AAI5C,cAAgB,mBAAG,IAAuB;AAE1C,cAAoB,uBAAG,IAAI,YAAoB,qBACvC,MAAG,IAAE,EAAe,gBAAG,GAAa,aAAO,OAAe,eAAS;AAMzE,eAAI,KAAS,SAAK,MAAiB;AAC/B,cAAsB,sBAClB,MAAa,aAAI,KAAE,EAAO,QAAa,aAAgB,gBAAc,aAAS;AAClF,cAAuB;AAEvB,cAAsB,sCACC,QAAI,IAAC;AAAY,kBAAsC;AAAI,SAAnE;AACf,cAAqC;AAErC,cAAsB,mCAA2B,cAAI,IAAC;AACrD,gBAAC,CAAK,MAAoB,oBAAE;AAC1B,oBAAK,MAAkB,kBAAE;AACtB,0BAAmB,qBAAQ;AACrB,+BAAK,MAAoB,oBAAW,aAChD;AACF;AACF;AAAI,SAPmC;AASnC,cAAY,YAAI,IAAC;AAAY,kBAAe,iBAAS;AAAG;AACxD,cAAsB,sBAAa,aAAkB,kBAAqB,qBAAI,IAC1E,MAAY,YAAS,UAAM,MACrC;;AAEyC;;;;;AACnC,gBAAiB,kBAAQ;;AAC1B,gBAAC,CAAgB,gBAAO,OAAE;AAE7B;AAAC;AACc,4BAAO,OAAU;AAC5B,iBAAwB,wBAC9B;AAEmB;;;;AACd,gBAAC,CAAK,KAAkB,kBAAE;AACrB,uBACR;AAAC;AACG,iBAAmB,qBAAS;AAChC,gBAAiB,gBAAO,KAAe;AACvC,gBAAO,MAAO,KAAK;AACnB,gBAAc,aAAQ,EAAK,MAAM,KACN;;AAC3B,gBAAoB,mBAAO,KAAkB;AAC7C,gBAAW,UAAS;AACpB,gBAAoB,mBAAO,KAAkB;AAC7B,6BAAO,SAAK;AACxB,iBAAC,IAAe,eAAQ,KAAa,aAAqB,qBAAE;AAC3D,oBAAY,uBAAY,cAAY,aAAE;AACvB,qCAAI,IAAc;AAClB,qCAAK,KAAc;AAChC,wBAAC,CAAc,cAAI,IAAc,cAAE;AACvB,sCAAI,IAAY,aAAM;AACxB,oCAAa,aAAI,IAAK,KAAY,YAAS,UAAM,KAAc;AAChE,mCAAW,aAAc,YAAO;AACvC,4BAAO,OAA4B,6BAAc;AAC7C,kCACT;AACF;AACF;AAAC;AACG,iBAAC,IAAe,gBAAiB,cAAQ,QAAE;AAC1C,oBAAC,CAAiB,iBAAI,IAAc,eAAE;AAC1B,kCAAO,OAAc;AACvB,iCAAa,aAAO,OAAK,KAAY,YAAS,UAAM,KAAc;AACnE,+BAAW,aAAc,aAAO;AACvC,wBAAO,OAA+B,gCAAc;AAChD,8BACT;AACF;AAAC;AACe,6BAAS;AACtB,gBAAS,SAAE;AACR,qBAAoB,sBAC1B;AAEuB;;;AACnB,iBAAY,YAAY;AACtB,mBACR;AAEiB;;;;AACX,gBAAM,QAAiE;gBAAzD;gBAAkB;gBAAgB;gBAAe;;AACnE,mBAAI,KAAM,MAAiB,kBAAE,CAAM,QAAI,GAAO,QAAI,GAAQ,SAAI,GAAE,CAAO,SAAI,GAAE,CAAE,GAAK;AACpF,mBAAI,KAAS,SAAa,cAAkB,kBAAkB;AAE1D,iBAAmB,qBAAQ;AAC3B,iBAAY,YAClB;AACe;;;wCAAc,OAAgB;AAClB,qGAAM,OAAU,SAAE;AACrC,qBAAI,IAAO,OAAuB,wBAAE,EAAG,IAAM,KAAM,OAAO,OAAO,OAAQ,QACxB;;AAC/C,uBACR;AAAC;AACK,mBACR;AAE6B;;;;AACvB,gBAAgB,iBAAQ;;AAC5B,mBAAI,KAAO,OAAK,KAAe,gBAAkB;AAC7C,iBAAI,IAAO,OAAuB,wBAAE,EAAG,IAAM,KAAM,OAAgB,gBACzE;AAEkB;;;;AAAS,iBAAwB;AAEpC;;;;AACV,gBAAC,CAAK,KAAe,kBAAI,CAAK,KAAiB,oBAAQ,KAAM,UAAM,KAAQ,KAAO,WAAO,GAAE;AAE9F;AAAC;AACG,iBAAe,iBAAS;AACxB,iBAEA;gBAAG,KAA8C;gBAAxB;gBAAO;gBAAS;;AAEzB,iCAAK,KAAM,OAAU;AACvC,eAAQ,QAAG,GAGuD;;;AAElE,eAAa,aAAI;AACjB,eAAW,WAAE,GAAG,GAAG,GAAK;AACxB,eAAU,UAAK,MAAM,MAAM,MAAQ;AACnC,eAAM,MAAG,GAAmB;AAC5B,eAAO,OAAG,GAAe;AACzB,eAAQ,QAAG,GAAa;AACxB,eACW;qBAAE,GAA2B,0BAAE,GAAkB,iBAAE,GACjD;uBAAE,GAEmB;;AACpC,gBAAkB,iBAAK;AACnB,iBAAC,IAAe,eAAQ,KAAkB,kBAAE;AAC5C,mBAAM,MAAG,GAAqB;AAC9B,mBACW;yBAAE,GACF;yBAAE,GACH;wBACC;yBAAG;AACb,oBAAe,mBAAO,GACmB;;AACxC,uBAAO,OAAG,GAAQ;AAClB,uBAAU,UAAG,GAAU,WAAI,GAC/B;AAAC;AACU,4BAAK,KAAO;AACvB,kBACF;AAAC;AACC,eAAQ,QAAG,GAAQ;AACnB,eAAQ,QAAG,GAAe;AACR,iCACtB;AAEwB;;;;AACnB,gBAAC,CAAK,KAAmB,sBAAI,CAAK,KAAqB,qBACV;;AACxC,uBACR;AACmC;;AAC/B,iBAAmB,qBAAS;AAC5B,iBAAuB;AACrB,mBACR;AACmB;;;;AACjB,gBAAoB,mBAAO,KAAe;AAE1C,qCAAiD;AAC/C,oBAAiB,gBAAmB,iBAAI,IAAc;AACnD,oBAAc,kBAAe,WAAE;AACnB,oCAAM;AACH,qCAAI,IAAY,aAClC;AAAM,uBAAE;AACO,kCAAO,SACtB;AAAC;AACK,uBACR;AAAC;AACD,8BAA0C,aAAyB,eAAwB;AACzF,oBAAO,MAAG,OAAO,QAAmB;AACvB,8BAAc,cAAQ,UACrC;AAAC;AACG,iBAAqB,qBAAgB,iBAC3C;AACD;;;;EAnN8B,OAAa;;AAA/B,QAAS,YAmNrB;AAAC;AAkBF,IAAuB,sBAAG,IAAuC;AAEjE,oCAA6E;AACxD,wBAAK,KAC1B;AAAC;AAFe,QAA0B,6BAEzC;AAED,+BAAqC,IAAgC;AAC/D,SAAC,IAAW,WAAwB,qBAAE;AACxC,YAAU,SAAU,QAAG,IAAQ;AAC5B,YAAO,UAAS,MAAE;AACb,mBACR;AACF;AAAC;AACD,UAAM,IAAS,MACjB;AAEA;;;;;AAKE,+BAAsC,cAAuC;AAC3E;;0GAAoB;;AADyB,eAAI,OAA0B;AAEvE,eAAmB,qBACf,OAAiB,iBAAsB,sBAAa,aAAkB,kBAAG,IACnF;;AAEqB;;;;8CAAS,KAAc;AACtC,iBAAK,KAAS,SAAQ,QAAQ,UAAO;AACd,+GAAI,KACjC;AAEe;;;mCAEU;AACvB,gBAAqB,oBAAG,OAAI,KAAU;AACtC,gBAAQ,OAAO,KAAM;AACrB,gBAAe,cAAO,KAAa;AACnC,gBAAU,SAAc,YAAQ;AAChC,gBAAa,YAAc,YAAM;AAC7B,iBAAC,IAAK,IAAI,GAAG,IAAI,GAAE,EAAG,GAAG;AACV,kCAAG,KAAO,KAAM,MAAC,CAAS,SAAG,KAAS,OAAI,MAAY,UACzE;AAAC;AACD,gBAAO,MAAG,OAAO,QAAoB;AACrC,gBAAS,QAAoB,KAAO,OAAI,IAAM;AAC3C,gBAAC,CAAO,OAAE;AACL,uBACR;AAC4B;;AAC5B,gBAAgB,eAAqB;AACrC,gBAAa,YAAO,KAAW;AAC3B,iBAAC,IAAK,KAAI,GAAG,KAAI,GAAE,EAAG,IAAG;AACf,6BAAG,MAAO,KAAM,MACxB,CAAS,SAAG,MAAS,OAAG,MAAoB,kBAAG,MAAY,UAAI,OAAY,UACjF;AAAC;AACD,gBAAiB,gBAAQ,MAAe;AACpC,iBAAC,IAAK,MAAI,GAAG,MAAI,GAAE,EAAG,KAAG;AACxB,oBAAa,aAAG,QAAiB,cAAI,MAAE;AAClC,2BACR;AACF;AAAC;AACK,mBAAM,MAAW,WACzB;AAEQ;;;iCAAO;AAAU,mBAAK,KAAmB,mBAAS,SAAK,MAAM;AACtE;;;;AAjC2B,mBAAK,KAAmB,mBAAc;AAEtD;;;;EAlBoC,WAAW;;AAArC,QAAiB,oBAiDtC;AAED;;;;;AAOE,yBAAqC,QAAQ;AAC3C;;oGAAc;;AACV,eAAkB,oBAAI,EAAsB;AAC5C,eAAc,gBAAI,EAAiB,oBAAU,OAAK,KAAe;AACjE,eAAM,QAAG,OAAU,WACzB;;AAAC;;;;;AAPyB,mBAAK,KAAO,OAAc;AASrD;;;;EAdyC,WAAK;;AAAzB,QAAW,cAchC;AAwBD;;;;;;;;AAqBE,mCAAyB,IAAuB;AACtC;;;;AADS,eAAE,KAAI;AApBjB,eAAyB,4BAAO,OAAiB,iBAAC,SAAM,OAAS,SACjE,OAAG,IAAE,IAAgB,aAAC,CACxB,CAAE,GAAE,CAAE,GAAG,GAAG,GACZ,CAAE,GAAE,CAAE,GAAG,GAAG,GACZ,CAAE,GAAE,CAAE,GAAG,GAAG,GACZ,CAAE,GAAE,CAAE,GAAG,GACT,KACE,OAAG,GAAa,cAAM,OAAG,GAAe;AACxC,eAAmB,sBAAO,OAAiB,iBAAC,SAAM,OAAS,SAC3D,OAAG,IAAE,IAAgB,aAAC,CACvB,GAAG,GACH,GAAG,GACH,GAAG,GACH,GACD,KACE,OAAG,GAAa,cAAM,OAAG,GAAe;AAGxC,eAA2B,8BAAG,IAAgB,aAAI;AAIxD,YAAW,UAAG,IAAI,SAAa,cAAK;AAC7B,gBAAW,WAAO,QAAe;AACjC,gBAAW,WAAY,aAAc;AACrC,gBAAe,eAAO;AAAQ,eAAU,UAAO,OAAQ,QAAY,aAAM;AAAG;AAC5E,gBAAW,WAAO,QAAkB;AACpC,gBAAW,WAAO,QAAsB;AACxC,gBAAW,WAAO,QAAuB;AACzC,gBAAW,WAAO,QAAkC;AACpD,gBAAQ,QAAU;AAClB,gBAAiB,gBAMzB;;;;;;;AACQ,gBAAa,aAAO,QAAqB;AACzC,gBAAa,aAAO,QAAe;AACnC,gBAAe,cAGvB;;;;AACK,eAAO,SAAO,OAAiB,iBAAQ,QAC7C;;AAEI;;;;6BACqB,SAAwB,kBAAmB,aAAuB,iBACzE,QAAgB,QAAc,MAAc;AACxD,gBAAG,KAA8C;gBAAtC;gBAA8B;;AAClB,wCAAG,KAAU;AACb,wCAAG,KAAU;AACb,wCAAG,KAAO,OAAU;AACpB,wCAAG,KAAO,OAAU;AACzC,mBAAQ;AACZ,eAAc,cAAG,GAAW;AAC5B,eAAY,YAAG,GAAW,YAAW;AACrC,eAAiB,iBAAO,OAAQ,QAAqB,sBAAO,OAAoB;AAChF,eAAW,WAAO,OAAQ,QAAgB,iBAAe;AACzD,eAAW,WAAO,OAAQ,QAAoB,qBAAmB;AACjE,eAAW,WAAO,OAAQ,QAAgC,iCAA+B;AAE3F,gBAAmB,kBAAS,OAAU,UAAoB;AACtD,iBAA0B,0BAAmB,mBAAgB,iBAAK;AAEtE,gBAAa,YAAS,OAAU,UAAc;AAC1C,iBAAoB,oBAAmB,mBAAU,WAAK;AAExD,eAAW,WAAG,GAAa,cAAG,GAAK;AAEnC,eAAyB,yBAAkB;AAC3C,eAAyB,yBAAY;AACrC,eAAY,YAAG,GAAW,YAC9B;AAEU;;;4BAAO,IAAa,KAAuB;AAC7C,sBAAW,QAAI,IAAI,KAAE;AAAc,uBAAC,IAAyB,sBAAG,IAAY;AACpF,aADW;AAEZ;;;;EAhF0C,aAAU;;AAAxC,QAAqB,wBAgFjC;AAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnbF,WAAsB,YAC0C;;AAC9D,+CAC+D;;AAC/D,kDAE8C;;AAC9C,yDAEwB;;AACxB,gDACgC;;AAChC,2CAE6B;;AAC7B,wCAEmB;;AACnB,2CAAU;AAEV,4CACF;AAAC,GArBW,QAAU,eAAV,QAAU,aAqBrB;AArBD,IAAsB,aAAV,QAqBX;AAAC;AAEF,WAA6B;AAC3B,6DAAc;AACd,qEAAsB;AACtB,0DAAW;AACX,2DAAY;AACZ,oEAAqB;AACrB,yDAAU;AACV,4DACF;AAAC,GARW,QAAiB,sBAAjB,QAAiB,oBAQ5B;AARD,IAA6B,oBAAjB,QAQX;AAED;;;AAME,+BAA4B,UAAiB;AAGxC;;;;;AACC,aAAe,iBAIhB;;;;AACC,aAAa,eAId;;;;AACC,aAAc,gBAIf;;;;AACC,aAAa,eACnB;AAKM;;;;;;;;+BAAc,OAAc;AAC5B,iBAAe,kBAAU;AACzB,iBAAc,iBACpB;AAEQ;;;;AAAY,uBAAO,KAAe,oBAAQ,KAAa,yBAAe,KAAc,mBAAQ,KAAa,YAAS;AAElH;;;;AACA,mBAAC,EAAe,gBAAM,KAAa,cAAgB,gBAAM,KACjE;AAEiB;;;mCAAO;AAChB,mBAAC,IAAqB,kBAAE,EAAgB,iBAAG,EACnD;AAGD;;;;;;AADQ,kBAAQ,WAAG,IAAqB,kBAAO,OAAkB,mBAAQ,OAAoB;AA9CjF,QAAiB,oBA+C7B;AAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFF,iCAA8E;AAC9E,uCAAuE;AACvE,oCAA+B;AAE/B,oCAAkD;AAElD,IAAyB,sBAEzB;;;AAEE,mBAAsC;;;AAAnB,aAAM,SAAa;AADtC,aAAK,QAAG,OAAU,WACuB;AAEnC;;;;kCAEU;AAAQ,iBAAM,QAAG,OAAU,WAAa;AAE3C;;;sCAAO;AAAQ,iBAAM,QAAG,OAAU,WAAgB;AAChE;;;;AALkB,mBAAK,KAAO,OAAK;AAEzB;;;;;;AANW,QAAK,QAS1B;AAMD;;;;;AAaE,+BAAoB,KAAe,IAIlC;AACS;;;;AALmB,cAAE,KAAI;AAZnC,cAAoB,uBAAG,IAAI,UAAS;AACpC,cAAmB,sBAAa;AAChC,cAAuB,0BAKpB;;;;;AACH,cAAmB,sBAAgB;AAEnC,cAAgB,mBAAc;AAQxB,cAAsB,sBAAI;AACtB,oBAAqB;AACR,iCAAY,WAAU,UAAW;AAC9B,oCAAY,WAAa,aAAW;AACxC,gCAAY,WAAS,SAE3C;AANkC;;AAQf;;;;;AACjB,gBAAY,WAAO,KAAqB;AACxC,gBAAkB;AACf,gBAAS,aAAS,QAAQ,KAAM,QAAY,UAAE;AAC1C,wBACP;AAAM,mBAAE;AACD,wBAAO,KACd;AAAC;AACS,uBAAK,KAA2B,2BAAK,KAAM,OACvD;AAC0B;;;;AACxB,gBAAY,WAAO,KAAqB;AACrC,gBAAS,aAAS,QAAQ,KAAM,QAAY,UACkB;;AACrD,2BACF,KAA2B,2BAAK,KAAM,OAAM,KAAmB;AAEzE;AAAC;AACD,gBAAU,SAAO,KACb;gBAAK,MAAQ;;AACjB,gBAAU,SAAM,IAAI,IAAO,OAAY;AACpC,gBAAqB,qBAAE;AACjB,wBACH,QAAO,KAAM,mCAAkC,OAAM,WAAU,OAAM,WAAU,OAAS,QAC9F;AAAC;AACD,gBAAY,WAAiB,OAAU;AACpC,gBAAS,aAAK,OAAU,WAAS,SACU;;AACtC,uBAAY,YAAO,OAC3B;AAAM,mBAAE;AACN,oBAAiB;AACjB,oBAAO,MAAS,OAAO;AACpB,oBAAO,OAAQ,QAAE;AACb,4BAAS,OAAS,SAAS;AAC1B,2BAAS,SAAI,KACrB;AAAM,uBAAE;AACD,4BAAS,OAAO,OAAI,IAC3B;AAAC;AACD,oBAAY,WAAQ,MAAO;AACxB,oBAAS,aAAc,UAAE;AACnB,4BAAY;AACjB,6BAAK,OAAU,WAC2B;;AACnC,kCAAU,UAAK,KAAK;AACrB,iCAAqB,qBAAY;AAC/B;AACR,6BAAK,OAAU,WAAc;AACtB,kCAAc,cAAK,KAAK;AACvB;AACR;AACE,kCAAM,IACF,+CAAwC,OAAU,WAAU,SAEtE;;AACF;AAAC;AACD,gBAAc,aAAO,KAAoB,sBAAS,OAAY;AAC3D,gBAAW,cAAS,MAAE;AACnB,qBACN;AAAM,mBAAE;AACF,qBAAwB,0BAC9B;AACF;AACD;;;;EAzFsC,aAAY;;AAAtC,QAAiB,oBAyF7B;AAAC;AAEF,aAAW,YAAe,gBAAE,UAAU;AACpC,QAAU,SAAO,KAAI,IAAE,EAAY;AAChC,QAAqB,qBAAE;AACjB,gBACH,QAAO,KAAM,kCAAiC,OAAM,WAAK,EAAM,WAAK,EAAS,iCAAwB,EAAiB,gBAC5H;AAAC;AACD,QAAgB,eAAS,OAAa,aAAmB;AACzD,QAAe,cAAe,aAAyB;AACpD,QAAY,eAAS,MAAE;AACZ,qBAAoB,sBAAK;AACzB,qBAAwB,0BAAK;AAC7B,qBACd;AAAM,WAAE;AACK,oBAAW,aAAK;AACf,qBAAwB,0BACtC;AACF;AAEA;;;;;AAGE,0BAAuD;AAC7C;;;;AADS,eAAiB,oBAAmB;AAFvD,eAAgB,mBAA2C,IAA6C;AAIlG,eAAiB,iBAAkB,kBAAW;AAC9C,eAAsB,sBACL,kBAAI,KACrB,EAAO,QAAgB,gBAAqB,qBAAmB,kBACrE;;AAEc;;;;uCAAyC,aAAa,KAAiB;AAC/E,gBAAkB,mBAAQ;;AAC9B,gBAAW,UAAmB,iBAAI,IAAc;AAC7C,gBAAQ,YAAe,WAAE;AACnB,0BAAG,IAAI,UAA+B;AAC7B,iCAAI,IAAY,aAClC;AAAC;AACK,mBAAQ,QAAI,IAAI,KACxB;AACD;;;;EApBiC,aAAY;;AAAjC,QAAY,eAoBxB;AAED;;;;;AAGE,yBAA6C;AACnC;;;;AADS,eAAY,eAAc;AAF7C,eAAM,SAAG,IAAyB;AAI5B,eAAiB,iBAAa,aACpC;;AAEqB;;;;8CAAS,KAAc;AACnC,oBAAgB,kBAAO,KAAa,aAAO;AACvB,yGAAI,KACjC;AAEM;;;oCAEiB;AAAQ,iBAAO,OAAO,OAAO;AAE5C;;;iCAAY,KAAc;AAAQ,iBAAO,OAAI,IAAI,KAAU;AAK3D;;;;;;;iCAAO;AAAiB,mBAAO;AACxC;;;;AAVkB,mBAAK,KAAa,aAAkB,kBAAK;AAE/C;;;;EAf6B,aAAY;;AAAhC,QAAW,cAuBhC;AAAC,C;;;;;;ACjMF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA,SAAS;;AAET;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,SAAS;;AAET;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,SAAS;;AAET;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,SAAS;;AAET;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,+DAA+D,GAAG,wCAAwC,GAAG;AAC7G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA,gBAAgB,KAAK,EAAE;AACvB;AACA,SAAS;;AAET;AACA,mBAAmB,SAAS;AAC5B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,OAAO;AAC1B,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,OAAO;AAC1B,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C,yCAAyC;;AAEzC;AACA;AACA,gBAAgB,KAAK,EAAE;AACvB,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,aAAmD;AACnD,uDAA4B,gBAAgB,EAAE;AAC9C,KAAK,2DAA2D;AAChE;AACA,KAAK,OAAO;AACZ;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;;AC1aD;;;;;;;AAAA;;;AACU,aAAG,MAAG,IAahB;AAAC;;;;4BAZ8B,KAAiB;AACxC,gBAAK,MAAQ;;AACjB,gBAAO,MAAS,IAAI,IAAM;AACvB,gB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,gBAAK,IAAG,IAAa;AAClB,gBAAC,CAAE,EAAY,YAAE,GAAQ,OAAE;AAC5B,sBAAM,IAAU,kDAA+C,KAAU,UAAG,EAC9E;AAAC;AACK,mBACR;AAEK;;;;;;AAlDE,OAAI,OAAG,IAAU,OAAE,GAAK;AA9BpB,QAAM,SAoFlB;AAAC,C;;;;;;;;;;;;;;;;;;;;;;;AChIF,6BAAkD,QAAqB,SAAc;AAC7E,WAAO,OAAQ,SACvB;AAAC;AAFe,QAAmB,sBAElC;AAED,0BAA+C,QAAqB,SAAc;AAC1E,WAAI,IAAQ,SACpB;AAAC;AAFe,QAAgB,mBAE/B,iB;;;;;;ACxBD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;ACjEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,8CAA8C,kBAAkB;AAChpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpBA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA,uC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A;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;;;AAIA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA,eAAe;AACf,qCAAqC;;;AAGrC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB,eAAe;AACf;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,UAAU,OAAO;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA,eAAe,kBAAkB;AACjC;AACA;AACA;;AAEA,mHAAmH;AACnH;;;AAGA;AACA;AACA,cAAc,YAAY;AAC1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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c01bae982b30524f4e2b\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'neuroglancer/datasource/brainmaps/api_frontend';\n\nimport {ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {makeRequest, INSTANCE_NAMES, INSTANCE_IDENTIFIERS, PRODUCTION_INSTANCE, BrainmapsInstance} from 'neuroglancer/datasource/brainmaps/api';\nimport {VolumeChunkEncoding, VolumeSourceParameters, volumeSourceToString, MeshSourceParameters, meshSourceToString} from 'neuroglancer/datasource/brainmaps/base';\nimport {registerDataSourceFactory} from 'neuroglancer/datasource/factory';\nimport {DataType, VolumeType, VolumeChunkSpecification} from 'neuroglancer/sliceview/base';\nimport {VolumeChunkSource as GenericVolumeChunkSource, MultiscaleVolumeChunkSource as GenericMultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {getPrefixMatches} from 'neuroglancer/util/completion';\nimport {StatusMessage} from 'neuroglancer/status';\nimport {Vec3, vec3} from 'neuroglancer/util/geom';\nimport {verifyObject, verifyString, verifyPositiveInt, verifyMapKey, verifyFinitePositiveFloat, parseXYZ, parseArray, stableStringify, verifyObjectProperty} from 'neuroglancer/util/json';\nimport {MeshSource as GenericMeshSource} from 'neuroglancer/mesh/frontend';\n\nconst SERVER_DATA_TYPES = new Map<string, DataType>();\nSERVER_DATA_TYPES.set('UINT8', DataType.UINT8);\nSERVER_DATA_TYPES.set('FLOAT', DataType.FLOAT32);\nSERVER_DATA_TYPES.set('UINT64', DataType.UINT64);\n\nexport class VolumeInfo {\n  numChannels: number;\n  dataType: DataType;\n  voxelSize: Vec3;\n  upperVoxelBound: Vec3;\n  constructor(obj: any) {\n    try {\n      verifyObject(obj);\n      this.numChannels = verifyPositiveInt(obj['channelCount']);\n      this.dataType = verifyMapKey(obj['channelType'], SERVER_DATA_TYPES);\n      this.voxelSize = parseXYZ(vec3.create(), obj['pixelSize'], verifyFinitePositiveFloat);\n      this.upperVoxelBound = parseXYZ(vec3.create(), obj['volumeSize'], verifyPositiveInt);\n    } catch (parseError) {\n      throw new Error(`Failed to parse BrainMaps volume geometry: ${parseError.message}`);\n    }\n  }\n};\n\nexport class VolumeChunkSource extends GenericVolumeChunkSource {\n  constructor(\n      chunkManager: ChunkManager, spec: VolumeChunkSpecification,\n      public parameters: VolumeSourceParameters) {\n    super(chunkManager, spec);\n    this.initializeCounterpart(\n        chunkManager.rpc, {'type': 'brainmaps/VolumeChunkSource', 'parameters': parameters});\n  }\n\n  toString() { return volumeSourceToString(this.parameters); }\n};\n\nexport class MeshInfo {\n  name: string;\n  type: string;\n  constructor(obj: any) {\n    verifyObject(obj);\n    this.name = verifyObjectProperty(obj, 'name', verifyString);\n    this.type = verifyObjectProperty(obj, 'type', verifyString);\n  }\n};\n\nexport class MultiscaleVolumeChunkSource implements GenericMultiscaleVolumeChunkSource {\n  volumeType: VolumeType;\n  scales: VolumeInfo[];\n  dataType: DataType;\n  numChannels: number;\n  meshes: MeshInfo[];\n  constructor(\n      public instance: BrainmapsInstance, public volume_id: string, volumeInfoResponse: any,\n      meshesResponse: any) {\n    try {\n      verifyObject(volumeInfoResponse);\n      let scales = this.scales = verifyObjectProperty(\n          volumeInfoResponse, 'geometry', y => parseArray(y, x => new VolumeInfo(x)));\n      if (scales.length === 0) {\n        throw new Error('Expected at least one scale.');\n      }\n      let baseScale = scales[0];\n      let numChannels = this.numChannels = baseScale.numChannels;\n      let dataType = this.dataType = baseScale.dataType;\n      for (let scaleIndex = 1, numScales = scales.length; scaleIndex < numScales; ++scaleIndex) {\n        let scale = scales[scaleIndex];\n        if (scale.dataType !== dataType) {\n          throw new Error(\n              `Scale ${scaleIndex} has data type ${DataType[scale.dataType]} but scale 0 has data type ${DataType[dataType]}.`);\n        }\n        if (scale.numChannels !== numChannels) {\n          throw new Error(\n              `Scale ${scaleIndex} has ${scale.numChannels} channel(s) but scale 0 has ${numChannels} channels.`);\n        }\n      }\n\n      // Infer the VolumeType from the data type and number of channels.\n      let volumeType = VolumeType.UNKNOWN;\n      if (numChannels === 1) {\n        switch (dataType) {\n          case DataType.UINT64:\n            volumeType = VolumeType.SEGMENTATION;\n            break;\n          case DataType.UINT8:\n          case DataType.FLOAT32:\n            volumeType = VolumeType.IMAGE;\n            break;\n        }\n      }\n      this.volumeType = volumeType;\n    } catch (parseError) {\n      throw new Error(`Failed to parse BrainMaps multiscale volume specification: ${parseError.message}`);\n    }\n    try {\n      verifyObject(meshesResponse);\n      this.meshes = verifyObjectProperty(meshesResponse, 'meshes', y => {\n        if (y === undefined) {\n          return [];\n        }\n        return parseArray(y, x => new MeshInfo(x));\n      });\n    } catch (parseError) {\n      throw new Error(`Failed to parse BrainMaps meshes specification: ${parseError.message}`);\n    }\n  }\n\n  getSources(chunkManager: ChunkManager) {\n    let encoding = VolumeChunkEncoding.RAW;\n    if (this.volumeType === VolumeType.SEGMENTATION) {\n      encoding = VolumeChunkEncoding.COMPRESSED_SEGMENTATION;\n    } else if (this.volumeType === VolumeType.IMAGE && this.dataType === DataType.UINT8) {\n      encoding = VolumeChunkEncoding.JPEG;\n    }\n\n    return this.scales.map(\n        (volumeInfo, scaleIndex) =>\n            Array\n                .from(VolumeChunkSpecification.getDefaults({\n                  voxelSize: volumeInfo.voxelSize,\n                  dataType: volumeInfo.dataType,\n                  numChannels: volumeInfo.numChannels,\n                  lowerVoxelBound: vec3.fromValues(0, 0, 0),\n                  upperVoxelBound: volumeInfo.upperVoxelBound,\n                  volumeType: this.volumeType,\n                }))\n                .map(spec => {\n\n                  let parameters: VolumeSourceParameters = {\n                    'instance': this.instance,\n                    'volume_id': this.volume_id,\n                    'scaleIndex': scaleIndex,\n                    'encoding': encoding\n                  };\n                  return chunkManager.getChunkSource(\n                      VolumeChunkSource, stableStringify(parameters),\n                      () => new VolumeChunkSource(chunkManager, spec, parameters));\n                }));\n  }\n\n  getMeshSource(chunkManager: ChunkManager): MeshSource|null {\n    let validMesh = this.meshes.find(x => x.type === 'TRIANGLES');\n    if (validMesh === undefined) {\n      return null;\n    }\n    return getMeshSource(chunkManager, {'instance': this.instance, 'volume_id': this.volume_id, 'mesh_name': validMesh.name});\n  }\n};\n\nexport class MeshSource extends GenericMeshSource {\n  constructor(chunkManager: ChunkManager, public parameters: MeshSourceParameters) {\n    super(chunkManager);\n    this.initializeCounterpart(\n        this.chunkManager.rpc, {'type': 'brainmaps/MeshSource', 'parameters': parameters});\n  }\n  toString() { return meshSourceToString(this.parameters); }\n};\n\nexport function getMeshSource(chunkManager: ChunkManager, parameters: MeshSourceParameters) {\n  return chunkManager.getChunkSource(\n      MeshSource, stableStringify(parameters), () => new MeshSource(chunkManager, parameters));\n}\n\nlet existingVolumes = new Map<string, Promise<MultiscaleVolumeChunkSource>>();\n\nexport function getVolume(instance: BrainmapsInstance, key: string) {\n  let cacheKey = stableStringify({'instance': instance, 'key': key});\n  let existingResult = existingVolumes.get(cacheKey);\n  if (existingResult !== undefined) {\n    return existingResult;\n  }\n  let promise = Promise\n                    .all([\n                      makeRequest(instance, 'GET', `/v1beta2/volumes/${key}`, 'json'),\n                      makeRequest(instance, 'GET', `/v1beta2/objects/${key}/meshes`, 'json'),\n                    ])\n                    .then(\n                        ([volumeInfoResponse, meshesResponse]) => new MultiscaleVolumeChunkSource(\n                            instance, key, volumeInfoResponse, meshesResponse));\n  existingVolumes.set(cacheKey, promise);\n  return promise;\n}\n\nexport class VolumeList {\n  volumeIds: string[];\n  hierarchicalVolumeIds = new Map<string, string[]>();\n  constructor (response: any) {\n    try {\n      verifyObject(response);\n      let volumeIds = this.volumeIds = parseArray(response['volumeId'], verifyString);\n      volumeIds.sort();\n      let hierarchicalSets = new Map<string, Set<string>>();\n      for (let volumeId of volumeIds) {\n        let componentStart = 0;\n        while (true) {\n          let nextColon = volumeId.indexOf(':', componentStart);\n          if (nextColon === -1) {\n            nextColon = undefined;\n          } else {\n            ++nextColon;\n          }\n          let groupString = volumeId.substring(0, componentStart);\n          let group = hierarchicalSets.get(groupString);\n          if (group === undefined) {\n            group = new Set<string>();\n            hierarchicalSets.set(groupString, group);\n          }\n          group.add(volumeId.substring(componentStart, nextColon));\n          if (nextColon === undefined) {\n            break;\n          }\n          componentStart = nextColon;\n        }\n      }\n      let {hierarchicalVolumeIds} = this;\n      for (let [group, valueSet] of hierarchicalSets) {\n        hierarchicalVolumeIds.set(group, Array.from(valueSet));\n      }\n    } catch (parseError) {\n      throw new Error(`Failed to parse Brain Maps volume list reply: ${parseError.message}`);\n    }\n  }\n};\n\nlet volumeListCache = new Map<BrainmapsInstance, Promise<VolumeList>>();\n\nexport function getVolumeList(instance: BrainmapsInstance) {\n  let promise = volumeListCache.get(instance);\n  if (promise === undefined) {\n    promise = makeRequest(instance, 'GET', '/v1beta2/volumes/', 'json')\n                  .then(response => new VolumeList(response));\n    const description = `Google ${INSTANCE_NAMES[instance]} volume list`;\n    StatusMessage.forPromise(promise, {\n      delay: true,\n      initialMessage: `Retrieving ${description}.`,\n      errorPrefix: `Error retrieving ${description}: `,\n    });\n    volumeListCache.set(instance, promise);\n  }\n  return promise;\n}\n\nexport function volumeCompleter(instance: BrainmapsInstance, url: string) {\n  return getVolumeList(instance).then(volumeList => {\n    let lastColon = url.lastIndexOf(':');\n    let splitPoint = lastColon + 1;\n    let prefix = url.substring(0, splitPoint);\n    let matchString = url.substring(splitPoint);\n    let possibleMatches = volumeList.hierarchicalVolumeIds.get(prefix);\n    if (possibleMatches === undefined) {\n      return null;\n    }\n    return {offset: prefix.length, completions: getPrefixMatches(matchString, possibleMatches)};\n  });\n}\n\nexport function registerBrainmapsDataSource(instance: BrainmapsInstance) {\n  let protocol = 'brainmaps';\n  if (instance !== PRODUCTION_INSTANCE) {\n    protocol += `-${INSTANCE_IDENTIFIERS[instance].toLowerCase()}`;\n  }\n  registerDataSourceFactory(protocol, {\n    description: `Google ${INSTANCE_NAMES[instance]} API`,\n    getVolume: getVolume.bind(undefined, instance),\n    volumeCompleter: volumeCompleter.bind(undefined, instance),\n  });\n}\n\nregisterBrainmapsDataSource(PRODUCTION_INSTANCE);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/brainmaps/frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * This implements the authentication API based on neuroglancer/util/google_auth2.\n */\n\nimport {getToken, Token, implementation} from 'neuroglancer/datasource/brainmaps/api_implementation';\nimport {StatusMessage} from 'neuroglancer/status';\nimport {cancelPromise, callFinally} from 'neuroglancer/util/promise';\nimport {RPC, registerRPC} from 'neuroglancer/worker_rpc';\nimport {authenticateGoogleOAuth2} from 'neuroglancer/util/google_oauth2';\n\ndeclare var BRAINMAPS_CLIENT_ID: string;\nconst BRAINMAPS_SCOPE = 'https://www.googleapis.com/auth/brainmaps';\n\nlet nextGenerationId = 0;\n\nimplementation.getNewTokenPromise = function() {\n  let status = new StatusMessage(/*delay=*/true);\n  let authPromise: Promise<Token>|undefined|null;\n  let tokenPromise = new Promise(function(resolve) {\n    function writeLoginStatus(msg = 'Brain Maps authorization required.', linkMessage = 'Request authorization.') {\n      status.setText(msg + '  ');\n      let button = document.createElement('button');\n      button.textContent = linkMessage;\n      status.element.appendChild(button);\n      button.addEventListener('click', () => { login(/*immediate=*/false); });\n      status.setVisible(true);\n    }\n    function login(immediate: boolean) {\n      if (authPromise !== undefined) {\n        cancelPromise(authPromise);\n      }\n      writeLoginStatus('Waiting for Brain Maps authorization...', 'Retry');\n      authPromise = authenticateGoogleOAuth2(\n          {clientId: BRAINMAPS_CLIENT_ID, scopes: [BRAINMAPS_SCOPE], immediate: immediate});\n      authPromise.then(token => {\n        token['generationId'] = nextGenerationId++;\n        resolve(token);\n      }, reason => {\n        if (immediate) {\n          writeLoginStatus();\n        } else {\n          writeLoginStatus(`Brain Maps authorization failed: ${reason}.`, 'Retry');\n        }\n      });\n      callFinally(authPromise, () => { authPromise = undefined; });\n    }\n    login(/*immediate=*/true);\n  });\n  callFinally(tokenPromise, () => { status.dispose(); });\n  return tokenPromise;\n};\n\nregisterRPC('brainmaps.requestToken', function(x) {\n  let rpc: RPC = this;\n  getToken(x['invalidToken']).then(function(authResult: any) {\n    rpc.invoke('brainmaps.receiveToken', {'authResult': authResult});\n  });\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/brainmaps/api_frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * This file defines a global variable that specifies authentication API to use.\n *\n * The actual API is defined in api_{frontend,backend}.ts.\n *\n * This allows other code to be agnostic to whether it is running in the frontend (UI thread) or\n * backend (WebWorker thread)\n */\n\nexport type Token = any;\n\nexport class Implementation {\n  getNewTokenPromise: (invalidToken: Token) => Promise<Token>;\n}\nexport var implementation = new Implementation();\n\nlet promise: Promise<Token> = null;\nlet token: Token = null;\n\nexport function getToken(invalidToken?: Token) {\n  if (promise !== null && (token === null || invalidToken == null ||\n                           invalidToken['generationId'] !== token['generationId'])) {\n    // Either we already have a valid token, or we are already obtaining one.\n    return promise;\n  }\n  token = null;\n  promise = implementation.getNewTokenPromise(invalidToken);\n  promise.then((t: Token) => { token = t; });\n  return promise;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/brainmaps/api_implementation.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('./status.css');\n\nlet statusContainer: HTMLElement = null;\n\nexport var DEFAULT_STATUS_DELAY = 200;\n\nexport type Delay = boolean | number;\n\nexport class StatusMessage {\n  element: HTMLElement;\n  private timer: number;\n  constructor(delay: Delay = false) {\n    if (statusContainer === null) {\n      statusContainer = document.createElement('ul');\n      statusContainer.id = 'statusContainer';\n      document.getElementsByClassName('neurog-body')[0].appendChild(statusContainer);\n    }\n    let element = document.createElement('li');\n    this.element = element;\n    if (delay === true) {\n      delay = DEFAULT_STATUS_DELAY;\n    }\n    if (delay !== false) {\n      this.setVisible(false);\n      this.timer = setTimeout(this.setVisible.bind(this, true), delay);\n    } else {\n      this.timer = null;\n    }\n    statusContainer.appendChild(element);\n  }\n  dispose() {\n    statusContainer.removeChild(this.element);\n    this.element = null;\n    if (this.timer !== null) {\n      clearTimeout(this.timer);\n    }\n  }\n  setText(text: string, makeVisible?: boolean) {\n    this.element.textContent = text;\n    if (makeVisible) {\n      this.setVisible(true);\n    }\n  }\n  setHTML(text: string, makeVisible?: boolean) {\n    this.element.innerHTML = text;\n    if (makeVisible) {\n      this.setVisible(true);\n    }\n  }\n  setVisible(value: boolean) {\n    this.timer = null;\n    this.element.style.display = value ? 'block' : 'none';\n  }\n\n  static forPromise<T>(\n      promise: Promise<T>,\n      options: {initialMessage: string, delay?: Delay, errorPrefix: string}): Promise<T> {\n    let status = new StatusMessage(options.delay);\n    status.setText(options.initialMessage);\n    let dispose = status.dispose.bind(status);\n    promise.then(dispose, reason => {\n      let msg: string;\n      if (reason instanceof Error) {\n        msg = reason.message;\n      } else {\n        msg = '' + reason;\n      }\n      let {errorPrefix = ''} = options;\n      status.element.textContent = errorPrefix + msg + '  ';\n      let button = document.createElement('button');\n      button.textContent = 'Dismiss';\n      button.addEventListener('click', () => {\n        status.dispose();\n      });\n      status.element.appendChild(button);\n      status.setVisible(true);\n    });\n    return promise;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/status.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/status.css\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface CancellablePromise<T> extends Promise<T> {\n  // Prevents any chained actions from being called.\n  // Any finally handlers are scheduled to be run.\n  cancel?: () => void;\n\n  finally?: <TResult>(handler: () => TResult | PromiseLike<TResult>) => Promise<T>;\n}\n\nexport class CancellationError {\n  toString() { return 'CancellationError'; }\n};\n\n/**\n * Value thrown to indicate cancellation.\n */\nexport const CANCELLED = new CancellationError();\n\nexport function makeCancellablePromise<T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason: any) => void, onCancel: (callback: () => void) => void) => void) {\n  let finished = false;\n  let cancelHandler: () => void;\n  let cancelFunction: () => void;\n  let promise: CancellablePromise<T> = new Promise<T>((resolve, reject) => {\n    function resolver(value: T) {\n      if (!finished) {\n        finished = true;\n        // This can't throw.\n        resolve(value);\n      }\n    }\n\n    function rejecter(value: any) {\n      if (!finished) {\n        finished = true;\n        // This can't throw.\n        reject(value);\n      }\n    }\n\n    function setCancelHandler(newCancelHandler: () => void) {\n      if (finished) {\n        try {\n          newCancelHandler();\n        } catch (ignoredError) {\n        }\n      }\n    }\n    try {\n      executor(resolver, rejecter, setCancelHandler);\n    } catch (executorError) {\n      rejecter(executorError);\n    }\n    cancelFunction = () => {\n      if (!finished) {\n        finished = true;\n        if (cancelHandler !== undefined) {\n          try {\n            cancelHandler();\n          } catch (ignoredError) {\n          }\n          cancelHandler = undefined;\n        }\n        reject(CANCELLED);\n      }\n    };\n  });\n  promise.cancel = cancelFunction;\n  return promise;\n}\n\nexport function cancelPromise<T>(promise: CancellablePromise<T>|null|undefined) {\n  if (promise != null) {\n    let {cancel} = promise;\n    if (cancel !== undefined) {\n      cancel.call(promise);\n    }\n  }\n}\n\n/**\n * Schedules a call to handler when promise is either fulfilled or rejected.  If the handler throws\n * an error, the returned promise is rejected with it.  Otherwise, the returned promise has the same\n * state as the original promise.\n *\n * If the returned promise is cancelled before the inputPromise is finished, the inputPromise is\n * cancelled.\n */\nexport function callFinally<T>(inputPromise: CancellablePromise<T>, handler: (onCancel: (newCancelHandler: () => void) => void) => void|PromiseLike<void>) {\n  return makeCancellablePromise<T>((resolve, reject, onCancel) => {\n    onCancel(() => { cancelPromise(inputPromise); });\n    inputPromise.then(value => {\n      onCancel(undefined);\n      Promise.resolve(handler(onCancel)).then(() => { resolve(value); });\n    }, reason => {\n      onCancel(undefined);\n      try {\n        Promise.resolve(handler(onCancel)).then(() => { reject(reason); }, reject);\n      } catch (otherError) {\n        reject(otherError);\n      }\n    });\n  });\n}\n\n/**\n * Schedules a call to onFulfilled as soon as the promise is fulfilled.\n *\n * A cancellation handler may be set, which is called if the returned promise is cancelled afer\n * inputPromise is fulfilled.  If the returned promise is cancelled before inputPromise is\n * fulfilled, inputPromise is cancelled if it supports it.\n */\nexport function cancellableThen<T, TResult>(inputPromise: CancellablePromise<T>, onFulfilled: (value: T, onCancel: (newCancelHandler: () => void) => void) => TResult | PromiseLike<TResult>): CancellablePromise<TResult> {\n  return makeCancellablePromise<TResult>((resolve, reject, onCancel) => {\n    let cancelled = false;\n    onCancel(() => {\n      cancelled = true;\n      cancelPromise(inputPromise);\n    });\n    inputPromise.then(value => {\n      if (cancelled) {\n        reject(CANCELLED);\n      } else {\n        onCancel(undefined);\n        resolve(onFulfilled(value, onCancel));\n      }\n    });\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/promise.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\n\nexport type RPCHandler = (this: RPC, x: any) => void;\n\nexport type RpcId = number;\n\nconst IS_WORKER = WORKER;\n\nconst DEBUG = false;\n\nconst DEBUG_MESSAGES = false;\n\nvar handlers = new Map<string, RPCHandler>();\n\nexport function registerRPC (key: string, handler: RPCHandler) {\n  handlers.set(key, handler);\n};\n\ninterface RPCTarget {\n  postMessage(message?: any, ports?: any): void;\n  onmessage: (ev: MessageEvent) => any;\n}\n\nexport class RPC {\n  private objects = new Map<RpcId, any>();\n  private nextId: RpcId = IS_WORKER ? -1 : 0;\n  constructor (public target: RPCTarget) {\n    target.onmessage = (e) => {\n      let data = e.data;\n      if (DEBUG_MESSAGES) {\n        console.log('Received message', data);\n      }\n      handlers.get(data.functionName).call(this, data);\n    };\n  }\n\n  get numObjects() { return this.objects.size; }\n\n  set(id: RpcId, value: any) {\n    this.objects.set(id, value);\n  }\n\n  delete(id: RpcId) {\n    this.objects.delete(id);\n  }\n  get (id: RpcId) {\n    return this.objects.get(id);\n  }\n  getRef<T extends SharedObject> (x: {'id': RpcId, 'gen': number}) {\n    let rpcId = x['id'];\n    let obj = <T>this.get(rpcId);\n    obj.referencedGeneration = x['gen'];\n    obj.addRef();\n    return obj;\n  }\n  invoke (name: string, x: any, transfers?: any[]) {\n    x.functionName = name;\n    if (DEBUG_MESSAGES) {\n      console.trace('Sending message', x);\n    }\n    this.target.postMessage(x, transfers);\n  }\n  newId () {\n    return IS_WORKER ? this.nextId-- : this.nextId++;\n  }\n};\n\nexport class SharedObject extends RefCounted {\n  rpc: RPC = null;\n  rpcId: RpcId = null;\n  isOwner: boolean|undefined;\n  unreferencedGeneration: number|undefined;\n  referencedGeneration: number|undefined;\n\n  initializeSharedObject (rpc: RPC, rpcId = rpc.newId()) {\n    this.rpc = rpc;\n    this.rpcId = rpcId;\n    this.isOwner = false;\n    rpc.set(rpcId, this);\n  }\n\n  initializeCounterpart (rpc: RPC, options: any = {}) {\n    this.initializeSharedObject(rpc);\n    this.unreferencedGeneration = 0;\n    this.referencedGeneration = 0;\n    this.isOwner = true;\n    options['id'] = this.rpcId;\n    rpc.invoke('SharedObject.new', options);\n  }\n\n  dispose () {\n    super.dispose();\n  }\n\n  /**\n   * Precondition: this.isOwner === true.\n   */\n  addCounterpartRef () {\n    return {'id': this.rpcId, 'gen': ++this.referencedGeneration};\n  }\n\n  protected refCountReachedZero () {\n    if (this.isOwner === true) {\n      if (this.referencedGeneration === this.unreferencedGeneration) {\n        this.ownerDispose();\n      }\n    } else if (this.isOwner === false) {\n      this.rpc.invoke('SharedObject.refCountReachedZero', {'id': this.rpcId, 'gen': this.referencedGeneration});\n    } else {\n      super.refCountReachedZero();\n    }\n  }\n\n  /**\n   * Precondition: this.isOwner === true.\n   */\n  protected ownerDispose () {\n    if (DEBUG) {\n      console.log(`[${IS_WORKER}] #rpc object = ${this.rpc.numObjects}`);\n    }\n    let {rpc, rpcId} = this;\n    super.refCountReachedZero();\n    rpc.delete(rpcId);\n    rpc.invoke('SharedObject.dispose', {'id': rpcId});\n  }\n\n  /**\n   * Precondition: this.isOwner === true.\n   *\n   * This should be called when the counterpart's refCount is decremented and reaches zero.\n   */\n  counterpartRefCountReachedZero (generation: number) {\n    this.unreferencedGeneration = generation;\n    if (this.refCount === 0 && generation === this.referencedGeneration) {\n      this.ownerDispose();\n    }\n  }\n};\n\n/**\n * Base class for defining a SharedObject type that will never be owned.\n */\nexport class SharedObjectCounterpart extends SharedObject {\n  constructor(rpc?: RPC, options: any = {}) {\n    super();\n    if (rpc != null) {\n      this.initializeSharedObject(rpc, options['id']);\n    }\n  }\n};\n\n\nexport interface SharedObjectConstructor {\n  new (rpc: RPC, options: any): SharedObjectCounterpart;\n}\n\nregisterRPC('SharedObject.dispose', function(x) {\n  let obj = <SharedObject>this.get(x['id']);\n  if (obj.refCount !== 0) {\n    throw new Error(`Attempted to dispose object with non-zero reference count.`);\n  }\n  if (DEBUG) {\n    console.log(`[${IS_WORKER}] #rpc objects: ${this.numObjects}`);\n  }\n  obj.disposed();\n  this.delete(obj.rpcId);\n  obj.rpcId = null;\n  obj.rpc = null;\n});\n\nregisterRPC('SharedObject.refCountReachedZero', function(x) {\n  let obj = <SharedObject>this.get(x['id']);\n  let generation = <number>x['gen'];\n  obj.counterpartRefCountReachedZero(generation);\n});\n\nconst sharedObjectConstructors = new Map<string, SharedObjectConstructor>();\n\nexport function registerSharedObject(name: string, constructorFunction: SharedObjectConstructor) {\n  sharedObjectConstructors.set(name, constructorFunction);\n}\n\nregisterRPC('SharedObject.new', function(x) {\n  let rpc = <RPC>this;\n  let typeName = <string>x['type'];\n  let constructorFunction = sharedObjectConstructors.get(typeName);\n  let obj = new constructorFunction(rpc, x);\n  // Counterpart objects start with a reference count of zero.\n  --obj.refCount;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/worker_rpc.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Disposable { dispose: () => void; }\n\nexport type Disposer = Disposable | (() => void);\n\nexport class RefCounted implements Disposable {\n  public refCount = 1;\n  private disposers: Disposer[];\n  addRef() {\n    ++this.refCount;\n    return this;\n  }\n  dispose() {\n    if (--this.refCount !== 0) {\n      return;\n    }\n    this.refCountReachedZero();\n  }\n\n  protected refCountReachedZero () {\n    this.disposed();\n    let {disposers} = this;\n    if (disposers != null) {\n      let numDisposers = disposers.length;\n      for (let i = numDisposers; i > 0; --i) {\n        let disposer = disposers[i - 1];\n        if (typeof disposer === 'object') {\n          (<Disposable>disposer).dispose();\n        } else {\n          (<() => void>disposer).call(this);\n        }\n      }\n      this.disposers = null;\n    }\n  }\n  disposed() {}\n  registerDisposer<T extends Disposer>(f: T): T {\n    let {disposers} = this;\n    if (disposers == null) {\n      this.disposers = [f];\n    } else {\n      disposers.push(f);\n    }\n    return f;\n  }\n  unregisterDisposer<T extends Disposer>(f: T): T {\n    let {disposers} = this;\n    if (disposers != null) {\n      let index = disposers.indexOf(f);\n      if (index !== -1) {\n        disposers.splice(index, 1);\n      }\n    }\n    return f;\n  }\n  registerSignalBinding(binding: SignalBinding) { this.registerDisposer(() => binding.detach()); }\n  registerEventListener(target: EventTarget, eventType: string, listener: any, arg?: any) {\n    target.addEventListener(eventType, listener, arg);\n    this.registerDisposer(() => target.removeEventListener(eventType, listener, arg));\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/disposable.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {removeFromParent} from 'neuroglancer/util/dom';\nimport {verifyObject, verifyString, parseArray} from 'neuroglancer/util/json';\nimport {makeCancellablePromise, callFinally} from 'neuroglancer/util/promise';\nimport {getRandomHexString} from 'neuroglancer/util/random';\n\nexport const AUTH_SERVER = 'https://accounts.google.com/o/oauth2/auth';\n\nconst AUTH_ORIGIN = 'https://accounts.google.com';\n\nexport function embedRelayFrame(proxyName: string, rpcToken: string) {\n  let iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.id = proxyName;\n  iframe.name = proxyName;\n  const origin = location.origin;\n  iframe.src =\n      `https://accounts.google.com/o/oauth2/postmessageRelay?parent=${encodeURIComponent(origin)}#rpctoken=${rpcToken}`;\n  document.getElementsByClassName('neurog-body')[0].appendChild(iframe);\n}\n\ninterface PromiseCallbacks<T> {\n  resolve: (x: T) => void;\n  reject: (x: string) => void;\n}\n;\n\nexport interface Token {\n  accessToken: string;\n  expiresIn: string;\n  tokenType: string;\n  scope: string;\n}\n;\n\nclass AuthHandler {\n  proxyName = `postmessageRelay${getRandomHexString()}`;\n  rpcToken = `${getRandomHexString()}`;\n  relayReadyService = `oauth2relayReady:${this.rpcToken}`;\n  oauth2CallbackService = `oauth2callback:${this.rpcToken}`;\n  relayReadyPromise: Promise<void>;\n  pendingRequests = new Map<string, PromiseCallbacks<any>>();\n\n  constructor() {\n    embedRelayFrame(this.proxyName, this.rpcToken);\n\n    this.relayReadyPromise = new Promise<void>((relayReadyPromiseResolve) => {\n      addEventListener('message', (event: MessageEvent) => {\n        if (event.origin !== AUTH_ORIGIN) {\n          return;\n        }\n        try {\n          let data = verifyObject(JSON.parse(event.data));\n          let service = verifyString(data['s']);\n          if (service === this.relayReadyService) {\n            relayReadyPromiseResolve();\n          }\n\n          if (service === this.oauth2CallbackService) {\n            let args = parseArray(data['a'], x => x);\n            let arg = verifyString(args[0]);\n            let origin = location.origin;\n            if (!arg.startsWith(origin + '#') && !arg.startsWith(origin + '?')) {\n              throw new Error(\n                  `oauth2callback: URL ${JSON.stringify(arg)} does not match current origin ${origin}.`);\n            }\n            let hashPart = arg.substring(origin.length + 1);\n            let parts = hashPart.split('&');\n            let params = new Map<string, string>();\n            for (let part of parts) {\n              let match = part.match('^([a-z_]+)=(.*)$');\n              if (match === null) {\n                throw new Error(\n                    `oauth2callback: URL part ${JSON.stringify(match)} does not match expected pattern.`);\n              }\n              params.set(match[1], match[2]);\n            }\n            let state = params.get('state');\n            if (state === undefined) {\n              throw new Error(`oauth2callback: State argument is missing.`);\n            }\n            let callbacks = this.pendingRequests.get(state);\n            if (callbacks === undefined) {\n              // Request may have been cancelled.\n              return;\n            }\n            let error = params.get('error');\n            if (error !== undefined) {\n              this.pendingRequests.delete(state);\n              let errorSubtype = params.get('error_subtype');\n              let fullMessage = error;\n              if (errorSubtype !== undefined) {\n                fullMessage += ': ' + errorSubtype;\n              }\n              callbacks.reject(fullMessage);\n              return;\n            }\n            let accessToken = params.get('access_token');\n            let tokenType = params.get('token_type');\n            let expiresIn = params.get('expires_in');\n            let scope = params.get('scope');\n            if (accessToken === undefined || tokenType === undefined || expiresIn === undefined ||\n                scope === undefined) {\n              throw new Error(`oauth2callback: URL lacks expected parameters.`);\n            }\n            this.pendingRequests.delete(state);\n            callbacks.resolve({\n              accessToken: accessToken,\n              tokenType: tokenType,\n              expiresIn: expiresIn,\n              scope: scope\n            });\n            return;\n          }\n        } catch (parseError) {\n          throw new Error(\n              `Invalid message received from ${AUTH_ORIGIN}: ${JSON.stringify(event.data)}: ${parseError.message}.`);\n        }\n      });\n    });\n  }\n\n  getAuthPromise(state: string) {\n    let promise = makeCancellablePromise<Token>((resolve, reject) => {\n      this.pendingRequests.set(state, {resolve, reject});\n    });\n    callFinally(promise, () => { this.pendingRequests.delete(state); });\n    return promise;\n  }\n\n  makeAuthRequestUrl(options: {\n    clientId: string,\n    scopes: string[],\n    approvalPrompt?: 'force'|'auto',\n    state?: string,\n    origin?: string,\n    loginHint?: string,\n    immediate?: boolean\n  }) {\n    let url = `${AUTH_SERVER}?client_id=${encodeURIComponent(options.clientId)}`;\n    url += `&redirect_uri=postmessage`;\n    url += `&response_type=token`;\n    let {origin = location.origin} = options;\n    url += `&origin=${encodeURIComponent(origin)}`;\n    url += `&proxy=${this.proxyName}`;\n    url += `&include_granted_scopes=true`;\n    url += `&scope=${encodeURIComponent(options.scopes.join(' '))}`;\n    if (options.state) {\n      url += `&state=${options.state}`;\n    }\n    if (options.approvalPrompt) {\n      url += `&approval_prompt=${encodeURIComponent(options.approvalPrompt)}`;\n    }\n    if (options.loginHint) {\n      url += `&login_hint=${encodeURIComponent(options.loginHint)}`;\n    }\n    if (options.immediate) {\n      url += `&immediate=true`;\n    }\n    return url;\n  }\n};\n\n\nlet authHandlerInstance: AuthHandler;\n\nfunction authHandler() {\n  if (authHandlerInstance === undefined) {\n    authHandlerInstance = new AuthHandler();\n  }\n  return authHandlerInstance;\n}\n\nexport function authenticateGoogleOAuth2(options: {\n  clientId: string,\n  scopes: string[], approvalPrompt?: 'force' | 'auto', loginHint?: string, immediate?: boolean\n}) {\n  const state = getRandomHexString();\n  const handler = authHandler();\n  const url = handler.makeAuthRequestUrl({\n    state,\n    clientId: options.clientId,\n    scopes: options.scopes,\n    approvalPrompt: options.approvalPrompt,\n    loginHint: options.loginHint,\n    immediate: options.immediate,\n  });\n  let promise = handler.getAuthPromise(state);\n\n  if (options.immediate) {\n    // For immediate mode auth, we can wait until the relay is ready, since we aren't opening a new\n    // window.\n    handler.relayReadyPromise.then(() => {\n      let iframe = document.createElement('iframe');\n      iframe.src = url;\n      iframe.style.display = 'none';\n      document.getElementsByClassName('neurog-body')[0].appendChild(iframe);\n      callFinally(promise, () => { removeFromParent(iframe); });\n    });\n  } else {\n    let newWindow = open(url);\n    callFinally(promise, () => { newWindow.close(); });\n  }\n  return promise;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/google_oauth2.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function removeChildren(element: HTMLElement) {\n  while (true) {\n    let child = element.firstElementChild;\n    if (!child) {\n      break;\n    }\n    element.removeChild(child);\n  }\n}\n\nexport function removeFromParent(element: HTMLElement) {\n  let {parentElement} = element;\n  if (parentElement) {\n    parentElement.removeChild(element);\n    return true;\n  }\n  return false;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/dom.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {WritableArrayLike} from 'neuroglancer/util/array';\n\nexport function verifyFloat(obj: any) {\n  let t = typeof obj;\n  if (t === 'number' || t === 'string') {\n    let x = parseFloat('' + obj);\n    if (!Number.isNaN(x)) {\n      return x;\n    }\n  }\n  throw new Error(`Expected floating-point number, but received: ${JSON.stringify(obj)}.`);\n}\n\nexport function verifyFinitePositiveFloat(obj: any) {\n  let x = verifyFloat(obj);\n  if (Number.isFinite(x) && x > 0) {\n    return x;\n  }\n  throw new Error(`Expected positive finite floating-point number, but received: ${x}.`);\n}\n\nexport function parseXYZ<A extends WritableArrayLike<number>>(\n    out: A, obj: any, validator = verifyFloat): A {\n  verifyObject(obj);\n  let keys = Object.keys(obj);\n  keys.sort();\n  if (keys.length !== 3 || keys[0] !== 'x' || keys[1] !== 'y' || keys[2] !== 'z') {\n    throw new Error(\n        `Expected object to have keys ['x', 'y', 'z'], but received: ${JSON.stringify(obj)}.`);\n  }\n  out[0] = validator(obj['x']);\n  out[1] = validator(obj['y']);\n  out[2] = validator(obj['z']);\n  return out;\n}\n\nexport function parseFiniteVec<U extends WritableArrayLike<number>>(out: U, obj: any[]) {\n  let length = out.length;\n  if (!Array.isArray(obj) || obj.length !== length) {\n    throw new Error('Incompatible sizes');\n  }\n\n  for (let i = 0; i < length; ++i) {\n    if (!Number.isFinite(parseFloat(obj[i]))) {\n      throw new Error('Non-finite value.');\n    }\n  }\n  for (let i = 0; i < length; ++i) {\n    out[i] = parseFloat(obj[i]);\n  }\n  return out;\n}\n\nexport function parseIntVec<U extends WritableArrayLike<number>>(out: U, obj: any) {\n  let length = out.length;\n  if (!Array.isArray(obj) || obj.length !== length) {\n    throw new Error('Incompatible sizes.');\n  }\n\n  for (let i = 0; i < length; ++i) {\n    let val = parseInt(obj[i], undefined);\n    if (!Number.isInteger(val)) {\n      throw new Error('Non-integer value.');\n    }\n  }\n\n  for (let i = 0; i < length; ++i) {\n    out[i] = parseInt(obj[i], undefined);\n  }\n  return out;\n}\n\n/**\n * Returns a JSON representation of x, with object keys sorted to ensure a\n * consistent result.\n */\nexport function stableStringify(x: any) {\n  if (typeof x === 'object') {\n    if (x === null) {\n      return 'null';\n    }\n    if (Array.isArray(x)) {\n      let s = '[';\n      let size = x.length;\n      let i = 0;\n      if (i < size) {\n        s += stableStringify(x[i]);\n        while (++i < size) {\n          s += ',';\n          s += stableStringify(x[i]);\n        }\n      }\n      s += ']';\n      return s;\n    }\n    let s = '{';\n    let keys = Object.keys(x).sort();\n    let i = 0;\n    let size = keys.length;\n    if (i < size) {\n      let key = keys[i];\n      s += JSON.stringify(key);\n      s += ':';\n      s += stableStringify(x[key]);\n      while (++i < size) {\n        s += ',';\n        key = keys[i];\n        s += JSON.stringify(key);\n        s += ':';\n        s += stableStringify(x[key]);\n      }\n    }\n    s += '}';\n    return s;\n  }\n  return JSON.stringify(x);\n}\n\nfunction swapQuotes(x: string) {\n  return x.replace(/['\"]/g, s => { return (s === '\"' ? '\\'' : '\"'); });\n}\n\nexport function urlSafeStringifyString(x: string) {\n  return swapQuotes(JSON.stringify(swapQuotes(x)));\n}\n\nconst URL_SAFE_COMMA = '_';\n\nexport function urlSafeStringify(x: any): string {\n  if (typeof x === 'object') {\n    if (x === null) {\n      return 'null';\n    }\n    let toJSON = x['toJSON'];\n    if (typeof toJSON === 'function') {\n      return urlSafeStringify(toJSON.call(x));\n    }\n    if (Array.isArray(x)) {\n      let s = '[';\n      let size = x.length;\n      let i = 0;\n      if (i < size) {\n        s += urlSafeStringify(x[i]);\n        while (++i < size) {\n          s += URL_SAFE_COMMA;\n          s += urlSafeStringify(x[i]);\n        }\n      }\n      s += ']';\n      return s;\n    }\n    let s = '{';\n    let keys = Object.keys(x);\n    let first = true;\n    for (let key of keys) {\n      let value = x[key];\n      if (value === undefined) {\n        continue;\n      }\n      let valueString = urlSafeStringify(value);\n      if (!valueString) {\n        continue;\n      }\n      if (!first) {\n        s += URL_SAFE_COMMA;\n      } else {\n        first = false;\n      }\n      s += urlSafeStringifyString(key);\n      s += ':';\n      s += valueString;\n    }\n    s += '}';\n    return s;\n  }\n  if (typeof x === 'string') {\n    return urlSafeStringifyString(x);\n  }\n  return JSON.stringify(x);\n}\n\nconst SINGLE_QUOTE_STRING_PATTERN = /('(?:[^'\\\\]|(?:\\\\.))*')/;\nconst DOUBLE_QUOTE_STRING_PATTERN = /(\"(?:[^'\\\\]|(?:\\\\.))*\")/;\nconst SINGLE_OR_DOUBLE_QUOTE_STRING_PATTERN =\n    new RegExp(`${SINGLE_QUOTE_STRING_PATTERN.source}|${DOUBLE_QUOTE_STRING_PATTERN.source}`);\nconst DOUBLE_OR_SINGLE_QUOTE_STRING_PATTERN =\n    new RegExp(`${DOUBLE_QUOTE_STRING_PATTERN.source}|${SINGLE_QUOTE_STRING_PATTERN.source}`);\n//const stringLiteralPattern = /('(?:[^'\\\\]|(?:\\\\.))*')|(\"(?:[^\"\\\\]|(?:\\\\.))*\")/;\n\nconst DOUBLE_QUOTE_PATTERN = /^((?:[^\"'\\\\]|(?:\\\\.))*)\"/;\nconst SINGLE_QUOTE_PATTERN = /^((?:[^\"'\\\\]|(?:\\\\.))*)'/;\n\nfunction convertStringLiteral(x: string, quoteInitial: string, quoteReplace: string, quoteSearch: RegExp) {\n  if (x.length >= 2 && x.charAt(0) === quoteInitial && x.charAt(x.length - 1) === quoteInitial) {\n    let inner = x.substr(1, x.length - 2);\n    let s = quoteReplace;\n    while (inner.length > 0) {\n      let m = inner.match(quoteSearch);\n      if (m === null) {\n        s += inner;\n        break;\n      }\n      s += m[1];\n      s += '\\\\';\n      s += quoteReplace;\n      inner = inner.substr(m.index + m[0].length);\n    }\n    s += quoteReplace;\n    return s;\n  }\n  return x;\n}\n\n/**\n * Converts a string literal delimited by either single or double quotes into a string literal\n * delimited by double quotes.\n */\nexport function normalizeStringLiteral(x: string) {\n  return convertStringLiteral(x, '\\'', '\"', DOUBLE_QUOTE_PATTERN);\n}\n\n\n\n\n// quoteChar: des\nfunction convertJsonHelper(x: string, desiredCommaChar: string, desiredQuoteChar: string) {\n  const commaSearch = /[&_,]/g;\n  let quoteInitial: string;\n  let quoteSearch: RegExp;\n  let stringLiteralPattern: RegExp;\n  if (desiredQuoteChar === '\"') {\n    quoteInitial = '\\'';\n    quoteSearch = DOUBLE_QUOTE_PATTERN;\n    stringLiteralPattern = SINGLE_OR_DOUBLE_QUOTE_STRING_PATTERN;\n  } else {\n    quoteInitial = '\"';\n    quoteSearch = SINGLE_QUOTE_PATTERN;\n    stringLiteralPattern = DOUBLE_OR_SINGLE_QUOTE_STRING_PATTERN;\n  }\n  let s = '';\n  while (x.length > 0) {\n    let m = x.match(stringLiteralPattern);\n    let before: string;\n    let replacement: string;\n    if (m === null) {\n      before = x;\n      x = '';\n      replacement = '';\n    } else {\n      before = x.substr(0, m.index);\n      x = x.substr(m.index + m[0].length);\n      let originalString = m[1];\n      if (originalString !== undefined) {\n        replacement = convertStringLiteral(originalString, quoteInitial, desiredQuoteChar, quoteSearch);\n      } else {\n        replacement = m[2];\n      }\n    }\n    s += before.replace(commaSearch, desiredCommaChar);\n    s += replacement;\n  }\n  return s;\n}\n\nexport function urlSafeToJSON(x: string) {\n  return convertJsonHelper(x, ',', '\"');\n}\n\nexport function jsonToUrlSafe(x: string) {\n  return convertJsonHelper(x, '_', '\\'');\n}\n\nexport function urlSafeParse(x: string) {\n  return JSON.parse(urlSafeToJSON(x));\n}\n\n// Converts a string containing a Python literal into a string containing an equivalent JSON\n// literal.\nexport function pythonLiteralToJSON(x: string) {\n  let s = '';\n  while (x.length > 0) {\n    let m = x.match(SINGLE_OR_DOUBLE_QUOTE_STRING_PATTERN);\n    let before: string;\n    let replacement: string;\n    if (m === null) {\n      before = x;\n      x = '';\n      replacement = '';\n    } else {\n      before = x.substr(0, m.index);\n      x = x.substr(m.index + m[0].length);\n      let singleQuoteString = m[1];\n      if (singleQuoteString !== undefined) {\n        replacement = normalizeStringLiteral(singleQuoteString);\n      } else {\n        replacement = m[2];\n      }\n    }\n    s += before.replace(/\\(/g, '[')\n             .replace(/\\)/g, ']')\n             .replace('True', 'true')\n             .replace('False', 'false')\n             .replace(/,\\s*([\\}\\]])/g, '$1');\n    s += replacement;\n  }\n  return s;\n}\n\n// Converts a string containing a Python literal into an equivalent JavaScript value.\nexport function pythonLiteralParse(x: string) {\n  return JSON.parse(pythonLiteralToJSON(x));\n}\n\n// Checks that `x' is an array, maps each element by parseElement.\nexport function parseArray<T>(x: any, parseElement: (x: any, index: number) => T): T[] {\n  if (!Array.isArray(x)) {\n    throw new Error(`Expected array, but received: ${JSON.stringify(x)}.`);\n  }\n  return (<any[]>x).map(parseElement);\n}\n\nexport function parseFixedLengthArray<T, U extends WritableArrayLike<T>>(\n    out: U, obj: any, parseElement: (x: any, index: number) => T): U {\n  const length = out.length;\n  if (!Array.isArray(obj) || obj.length !== length) {\n    throw new Error(`Expected length ${length} array, but received: ${JSON.stringify(obj)}.`);\n  }\n  for (let i = 0; i < length; ++i) {\n    out[i] = parseElement(obj[i], i);\n  }\n  return out;\n}\n\nexport function verifyObject(obj: any) {\n  if (typeof obj !== 'object' || obj == null || Array.isArray(obj)) {\n    throw new Error(`Expected JSON object, but received: ${JSON.stringify(obj)}.`);\n  }\n  return obj;\n}\n\nexport function verifyInt(obj: any) {\n  let result = parseInt(obj, 10);\n  if (!Number.isInteger(result)) {\n    throw new Error(`Expected integer, but received: ${JSON.stringify(obj)}.`);\n  }\n  return result;\n}\n\nexport function verifyPositiveInt(obj: any) {\n  let result = verifyInt(obj);\n  if (result <= 0) {\n    throw new Error(`Expected positive integer, but received: ${result}.`);\n  }\n  return result;\n}\n\nexport function verifyMapKey<U>(obj: any, map: Map<string, U>) {\n  let result = map.get(obj);\n  if (result === undefined) {\n    throw new Error(\n        `Expected one of ${JSON.stringify(Array.from(map.keys()))}, but received: ${JSON.stringify(obj)}.`);\n  }\n  return result;\n}\n\nexport function verifyString(obj: any) {\n  if (typeof obj !== 'string') {\n    throw new Error(`Expected string, but received: ${JSON.stringify(obj)}.`);\n  }\n  return obj;\n}\n\nexport function verifyOptionalString(obj: any): string|undefined {\n  if (obj === undefined) {\n    return undefined;\n  }\n  return verifyString(obj);\n}\n\nexport function verifyObjectProperty<T>(\n    obj: any, propertyName: string, validator: (value: any) => T): T {\n  let value = obj.hasOwnProperty(propertyName) ? obj[propertyName] : undefined;\n  try {\n    return validator(value);\n  } catch (parseError) {\n    throw new Error(\n        `Error parsing ${JSON.stringify(propertyName)} property: ${parseError.message}`);\n  }\n}\n\nexport function verifyObjectAsMap<T>(obj: any, validator: (value: any) => T): Map<string, T> {\n  verifyObject(obj);\n  let map = new Map<string, T>();\n  for (let key of Object.keys(obj)) {\n    try {\n      map.set(key, validator(obj[key]));\n    } catch (parseError) {\n      throw new Error(\n          `Error parsing value associated with key ${JSON.stringify(key)}: ${parseError.message}`);\n    }\n  }\n  return map;\n}\n\nexport function verifyFloat01(obj: any): number {\n  if (typeof obj !== 'number' || !Number.isFinite(obj) || obj < 0 || obj > 1) {\n    throw new Error(`Expected floating point number in [0,1], but received: ${JSON.stringify(obj)}.`);\n  }\n  return obj;\n}\n\n/**\n * The query string parameters may either be specified in the usual\n * 'name=value&otherName=otherValue' form or as (optionally urlSafe) JSON: '{\"name\":\"value\"}`.\n */\nexport function parseQueryStringParameters(queryString: string) {\n  if (queryString === '') {\n    return {};\n  }\n  if (queryString.startsWith('{')) {\n    return urlSafeParse(queryString);\n  } else {\n    let result: any = {};\n    let parts = queryString.split(/[&;]/);\n    for (let part of parts) {\n      let m = part.match(/^([^=&;]+)=([^&;]*)$/);\n      if (m === null) {\n        throw new Error(`Invalid query string part: ${JSON.stringify(part)}.`);\n      }\n      result[m[1]] = m[2];\n    }\n    return result;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/json.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getRandomHexString(numBits = 128) {\n  const numValues = Math.ceil(numBits / 32);\n  const data = new Uint32Array(numValues);\n  crypto.getRandomValues(data);\n  let s = '';\n  for (let i = 0; i < numValues; ++i) {\n    s += ('00000000' + data[i].toString(16)).slice(-8);\n  }\n  return s;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/random.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getToken, Token} from 'neuroglancer/datasource/brainmaps/api_implementation';\nimport {openShardedHttpRequest, HttpError} from 'neuroglancer/util/http_request';\nimport {makeCancellablePromise, CancellablePromise} from 'neuroglancer/util/promise';\nexport var numPendingRequests = 0;\n\nexport type BrainmapsInstance = number;\nexport const PRODUCTION_INSTANCE = 0;\n\nexport const INSTANCE_NAMES: string[] = [];\n\n/**\n * Maps a BrainmapsInstance to the list of base URL shards to use for accessing it.\n */\nexport const INSTANCE_BASE_URLS: string[][] = [];\nconst instanceHostname: string[] = [];\n\nexport const INSTANCE_IDENTIFIERS: string[] = [];\n\nexport function brainmapsInstanceKey(instance: BrainmapsInstance) {\n  return INSTANCE_IDENTIFIERS[instance];\n}\n\nexport function setupBrainmapsInstance(instance: BrainmapsInstance, hostname: string, identifier: string, name: string) {\n  INSTANCE_IDENTIFIERS[instance] = identifier;\n  INSTANCE_NAMES[instance] = name;\n  instanceHostname[instance] = hostname;\n  let baseUrls = [`https://${hostname}`];\n  for (let shard = 0; shard <= 9; ++shard) {\n    baseUrls.push(`https://s${shard}-${hostname}`);\n  }\n  INSTANCE_BASE_URLS[instance] = baseUrls;\n}\n\nsetupBrainmapsInstance(PRODUCTION_INSTANCE, 'brainmaps.googleapis.com', 'prod', 'Brain Maps');\n\nexport function makeRequest(\n    instance: BrainmapsInstance, method: string, path: string,\n    responseType: 'arraybuffer'): CancellablePromise<ArrayBuffer>;\nexport function makeRequest(\n    instance: BrainmapsInstance, method: string, path: string,\n    responseType: 'json'): CancellablePromise<any>;\nexport function makeRequest(\n    instance: BrainmapsInstance, method: string, path: string, responseType: string): any;\n\nexport function makeRequest(\n    instance: BrainmapsInstance, method: string, path: string, responseType: string): any {\n  /**\n   * undefined means request not yet attempted.  null means request\n   * cancelled.\n   */\n  let xhr: XMLHttpRequest = undefined;\n  return makeCancellablePromise<any>((resolve, reject, onCancel) => {\n    function start(token: Token) {\n      if (xhr === null) {\n        --numPendingRequests;\n        return;\n      }\n      xhr = openShardedHttpRequest(INSTANCE_BASE_URLS[instance], path, method);\n      xhr.responseType = responseType;\n      xhr.setRequestHeader('Authorization', `${token['tokenType']} ${token['accessToken']}`);\n      xhr.onloadend = function(this: XMLHttpRequest) {\n        if (xhr === null) {\n          --numPendingRequests;\n          return;\n        }\n        let status = this.status;\n        if (status >= 200 && status < 300) {\n          --numPendingRequests;\n          resolve(this.response);\n        } else if (status === 403 || status === 401) {\n          // Authorization needed.\n          getToken(token).then(start);\n        } else {\n          --numPendingRequests;\n          reject(HttpError.fromXhr(this));\n        }\n      };\n      xhr.send();\n    }\n    onCancel(() => {\n      let origXhr = xhr;\n      xhr = null;\n      if (origXhr != null) {\n        origXhr.abort();\n      }\n    });\n    getToken().then(start);\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/brainmaps/api.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {simpleStringHash} from 'neuroglancer/util/hash';\nimport {makeCancellablePromise, CancellablePromise} from 'neuroglancer/util/promise';\n\nexport type RequestModifier = (request: XMLHttpRequest) => void;\n\nexport const URL_SYMBOL = Symbol('url');\nexport const METHOD_SYMBOL = Symbol('method');\n\nexport class HttpError extends Error {\n  method: string;\n  url: string;\n  code: number;\n  statusMessage: string;\n\n  constructor (method: string, url: string, code: number, statusMessage: string) {\n    let message = `${method} ${JSON.stringify(url)} resulted in HTTP error ${code}`;\n    if (statusMessage) {\n      message += `: ${statusMessage}`;\n    }\n    message += '.';\n    super(message);\n    this.name = 'HttpError';\n    this.message = message;\n    this.method = method;\n    this.url = url;\n    this.code = code;\n    this.statusMessage = statusMessage;\n  }\n\n  static fromXhr(xhr: XMLHttpRequest) {\n    return new HttpError((<any>xhr)[METHOD_SYMBOL], (<any>xhr)[URL_SYMBOL], xhr.status, xhr.statusText);\n  }\n};\n\nexport function openHttpRequest(url: string, method = 'GET') {\n  let xhr = new XMLHttpRequest();\n  (<any>xhr)[METHOD_SYMBOL] = method;\n  (<any>xhr)[URL_SYMBOL] = url;\n  xhr.open(method, url);\n  return xhr;\n}\n\nexport function pickShard(baseUrls: string|string[], path: string) {\n  if (Array.isArray(baseUrls)) {\n    let numShards = baseUrls.length;\n    let shard = numShards === 1 ? 0 : Math.abs(simpleStringHash(path)) % numShards;\n    return baseUrls[shard] + path;\n  }\n  return baseUrls + path;\n}\n\nexport function openShardedHttpRequest(baseUrls: string|string[], path: string, method = 'GET') {\n  let xhr = new XMLHttpRequest();\n  const url = pickShard(baseUrls, path);\n  (<any>xhr)[METHOD_SYMBOL] = method;\n  (<any>xhr)[URL_SYMBOL] = url;\n  xhr.open(method, url);\n  return xhr;\n}\n\nexport function sendHttpRequest(xhr: XMLHttpRequest, responseType: 'arraybuffer'): CancellablePromise<ArrayBuffer>;\nexport function sendHttpRequest(xhr: XMLHttpRequest, responseType: 'json'): CancellablePromise<any>;\nexport function sendHttpRequest(xhr: XMLHttpRequest, responseType: string): any;\n\nexport function sendHttpRequest(xhr: XMLHttpRequest, responseType: string) {\n  xhr.responseType = responseType;\n  return makeCancellablePromise((resolve, reject, onCancel) => {\n    xhr.onloadend = function(this: XMLHttpRequest) {\n      let status = this.status;\n      if (status >= 200 && status < 300) {\n        resolve(this.response);\n      } else {\n        reject(HttpError.fromXhr(xhr));\n      }\n    };\n    onCancel(() => { xhr.abort(); });\n    xhr.send();\n  });\n}\n\n/**\n * Parses a URL that may have a special protocol designation into a list of base URLs and a path.\n *\n * If the protocol is 'http' or 'https', the input string is returned as a single base URL, with an\n * empty path.\n *\n * Additionally, 'gs://bucket/path' is supported for accessing Google Storage buckets.\n */\nexport function parseSpecialUrl(url: string): [string[], string] {\n  const urlProtocolPattern = /^([^:\\/]+):\\/\\/([^\\/]+)(\\/.*)?$/;\n  let match = url.match(urlProtocolPattern);\n  if (match === null) {\n    throw new Error(`Invalid URL: ${JSON.stringify(url)}`);\n  }\n  const protocol = match[1];\n  if (protocol === 'gs') {\n    const bucket = match[2];\n    const baseUrls = [\n      `https://${bucket}.storage.googleapis.com`,\n      `https://storage.googleapis.com/${bucket}`,\n    ];\n    return [baseUrls, match[3]];\n  }\n  return [[url], ''];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/http_request.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a very simple string hash function.  It isn't secure, but\n * is suitable for sharding of requests.\n */\nexport function simpleStringHash(s: string): number {\n  let h = 0;\n  let length = s.length;\n  for (let i = 0; i < length; ++i) {\n    h = (h * 31 + s.charCodeAt(i)) | 0;\n  }\n  return h;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/hash.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BrainmapsInstance, brainmapsInstanceKey} from 'neuroglancer/datasource/brainmaps/api';\n\nexport enum VolumeChunkEncoding {\n  RAW,\n  JPEG,\n  COMPRESSED_SEGMENTATION\n}\n\nexport interface VolumeSourceParameters {\n  instance: BrainmapsInstance;\n  volume_id: string;\n  scaleIndex: number;\n  encoding: VolumeChunkEncoding;\n}\n\nexport function volumeSourceToString(p: VolumeSourceParameters) {\n  return `brainmaps-${brainmapsInstanceKey(p['instance'])}:volume/${p['volume_id']}/${p['scaleIndex']}/${VolumeChunkEncoding[p['encoding']]}`;\n}\n\nexport interface MeshSourceParameters {\n  instance: BrainmapsInstance;\n  volume_id: string;\n  mesh_name: string;\n}\n\nexport function meshSourceToString(p: MeshSourceParameters) {\n  return `brainmaps:${brainmapsInstanceKey(p['instance'])}:mesh/${p['volume_id']}/${p['mesh_name']}`;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/brainmaps/base.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {MeshSource} from 'neuroglancer/mesh/frontend';\nimport {SkeletonSource} from 'neuroglancer/skeleton/frontend';\nimport {ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {cancellableThen, CancellablePromise} from 'neuroglancer/util/promise';\nimport {CompletionWithDescription, applyCompletionOffset} from 'neuroglancer/util/completion';\n\nexport type Completion = CompletionWithDescription;\n\nexport interface CompletionResult {\n  offset: number;\n  completions: Completion[];\n}\n\n/**\n * Returns the length of the prefix of path that corresponds to the \"group\", according to the\n * specified separator.\n *\n * If the separator is not specified, gueses whether it is '/' or ':'.\n */\nexport function findSourceGroupBasedOnSeparator(path: string, separator?: string) {\n  if (separator === undefined) {\n    // Try to guess whether '/' or ':' is the separator.\n    if (path.indexOf('/') === -1) {\n      separator = ':';\n    } else {\n      separator = '/';\n    }\n  }\n  let index = path.lastIndexOf(separator);\n  if (index === -1) {\n    return 0;\n  }\n  return index + 1;\n}\n\n\n/**\n * Returns the last \"component\" of path, according to the specified separator.\n * If the separator is not specified, gueses whether it is '/' or ':'.\n */\nexport function suggestLayerNameBasedOnSeparator(path: string, separator?: string) {\n  let groupIndex = findSourceGroupBasedOnSeparator(path, separator);\n  return path.substring(groupIndex);\n}\n\nexport interface DataSourceFactory {\n  description?: string;\n  getVolume?: (path: string) => Promise<MultiscaleVolumeChunkSource>;\n  getMeshSource?: (chunkManager: ChunkManager, path: string, lod: number) => MeshSource;\n  getSkeletonSource?: (chunkManager: ChunkManager, path: string) => SkeletonSource;\n  volumeCompleter?: (value: string) => CancellablePromise<CompletionResult|null>;\n\n  /**\n   * Returns a suggested layer name for the given volume source.\n   */\n  suggestLayerName?: (path: string) => string;\n\n  /**\n   * Returns the length of the prefix of path that is its 'group'.  This is used for suggesting a\n   * default URL for adding a new layer.\n   */\n  findSourceGroup?: (path: string) => number;\n}\n\nconst dataSourceFactories = new Map<string, DataSourceFactory>();\n\nexport function registerDataSourceFactory(name: string, factory: DataSourceFactory) {\n  dataSourceFactories.set(name, factory);\n}\n\nconst protocolPattern = /^(?:([a-zA-Z-+_]+):\\/\\/)?(.*)$/;\n\nfunction getDataSource(url: string): [DataSourceFactory, string, string] {\n  let m = url.match(protocolPattern);\n  if (m === null || m[1] === undefined) {\n    throw new Error(`Data source URL must have the form \"<protocol>://<path>\".`);\n  }\n  let dataSource = m[1];\n  let factory = dataSourceFactories.get(dataSource);\n  if (factory === undefined) {\n    throw new Error(`Unsupported data source: ${JSON.stringify(dataSource)}.`);\n  }\n  return [factory, m[2], dataSource];\n}\n\nexport function getVolume(url: string) {\n  let [factories, path] = getDataSource(url);\n  return factories.getVolume(path);\n}\n\nexport function getMeshSource(chunkManager: ChunkManager, url: string, lod: number = 0) {\n  let [factories, path] = getDataSource(url);\n  return factories.getMeshSource(chunkManager, path, lod);\n}\n\nexport function getSkeletonSource(chunkManager: ChunkManager, url: string) {\n  let [factories, path] = getDataSource(url);\n  return factories.getSkeletonSource(chunkManager, path);\n}\n\nexport function volumeCompleter(url: string): CancellablePromise<CompletionResult> {\n  // Check if url matches a protocol.\n  let protocolMatch = url.match(protocolPattern);\n  let protocol = protocolMatch[1];\n  if (protocol === undefined) {\n    // Return protocol completions.\n    let completions: Completion[] = [];\n    for (let [name, factory] of dataSourceFactories) {\n      name = name + '://';\n      if (name.startsWith(url)) {\n        completions.push({value: name, description: factory.description});\n      }\n    }\n    return Promise.resolve({offset: 0, completions});\n  }\n  let factory = dataSourceFactories.get(protocol);\n  if (factory !== undefined) {\n    let subCompleter = factory.volumeCompleter;\n    if (subCompleter !== undefined) {\n      return cancellableThen(\n          subCompleter(protocolMatch[2]),\n          completions => applyCompletionOffset(protocol.length + 3, completions));\n    }\n  }\n  return Promise.reject<CompletionResult>(null);\n}\n\nexport function suggestLayerName(url: string) {\n  let [factories, path] = getDataSource(url);\n  let suggestor = factories.suggestLayerName;\n  if (suggestor !== undefined) {\n    return suggestor(path);\n  }\n  return suggestLayerNameBasedOnSeparator(path);\n}\n\nexport function findSourceGroup(url: string) {\n  let [factories, path, dataSourceName] = getDataSource(url);\n  let helper = factories.findSourceGroup || findSourceGroupBasedOnSeparator;\n  return helper(path) + dataSourceName.length + 3;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/factory.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Completion {\n  value: string;\n}\n\nexport interface CompletionWithDescription extends Completion {\n  description?: string;\n}\n\nexport interface BasicCompletionResult {\n  completions: Completion[];\n  offset: number;\n}\n\nexport function applyCompletionOffset<T extends {offset: number}>(offset: number, completionResult: T) {\n  completionResult.offset += offset;\n  return completionResult;\n}\n\nexport function getPrefixMatches(prefix: string, options: Iterable<string>) {\n  let result: Completion[] = [];\n  for (let option of options) {\n    if (option.startsWith(prefix)) {\n      result.push({value: option});\n    }\n  }\n  return result;\n}\n\nexport function getPrefixMatchesWithDescriptions<T>(\n    prefix: string, options: Iterable<T>, getValue: (x: T) => string,\n    getDescription: (x: T) => string | undefined) {\n  let result: CompletionWithDescription[] = [];\n  for (let option of options) {\n    let key = getValue(option);\n    if (key.startsWith(prefix)) {\n      result.push({value: key, description: getDescription(option)});\n    }\n  }\n  return result;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/completion.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChunkLayout} from 'neuroglancer/sliceview/chunk_layout';\nimport {prod3, Vec3, vec3, vec4, mat4, Mat4} from 'neuroglancer/util/geom';\nimport {approxEqual} from 'neuroglancer/util/compare';\nimport {partitionArray} from 'neuroglancer/util/array';\nimport {SharedObject} from 'neuroglancer/worker_rpc';\nimport {kZeroVec, kAxes} from 'neuroglancer/util/geom';\n\nconst DEBUG_CHUNK_INTERSECTIONS = false;\n\n/**\n * Heuristic estimate of the slice area contained within a chunk of the\n * specified size.\n */\nfunction estimateSliceAreaPerChunk(xAxis: Vec3, yAxis: Vec3, chunkSize: Vec3) {\n  let w = 0;\n  let h = w;\n  for (let i = 0; i < 3; ++i) {\n    let chunkSizeValue = chunkSize[i];\n    w = Math.max(w, chunkSizeValue * Math.abs(xAxis[i]));\n    h = Math.max(h, chunkSizeValue * Math.abs(yAxis[i]));\n  }\n  return w * h;\n}\n\n/**\n * All valid chunks are in the range [lowerBound, upperBound).\n *\n * @param lowerBound Output parameter for lowerBound.\n * @param upperBound Output parameter for upperBound.\n * @param sources Sources for which to compute the chunk bounds.\n */\nfunction computeSourcesChunkBounds(\n    lowerBound: Vec3, upperBound: Vec3, sources: Iterable<VolumeChunkSource>) {\n  for (let i = 0; i < 3; ++i) {\n    lowerBound[i] = Number.POSITIVE_INFINITY;\n    upperBound[i] = Number.NEGATIVE_INFINITY;\n  }\n\n  for (let source of sources) {\n    let {spec} = source;\n    let {lowerChunkBound, upperChunkBound} = spec;\n    for (let i = 0; i < 3; ++i) {\n      lowerBound[i] = Math.min(lowerBound[i], lowerChunkBound[i]);\n      upperBound[i] = Math.max(upperBound[i], upperChunkBound[i]);\n    }\n  }\n}\n\nenum BoundsComparisonResult {\n  // Needle is fully outside haystack.\n  FULLY_OUTSIDE,\n  // Needle is fully inside haystack.\n  FULLY_INSIDE,\n  // Needle is partially inside haystack.\n  PARTIALLY_INSIDE\n}\n\nfunction compareBoundsSingleDimension(\n    needleLower: number, needleUpper: number, haystackLower: number,\n    haystackUpper: number) {\n  if (needleLower >= haystackUpper || needleUpper <= haystackLower) {\n    return BoundsComparisonResult.FULLY_OUTSIDE;\n  }\n  if (needleLower >= haystackLower && needleUpper <= haystackUpper) {\n    return BoundsComparisonResult.FULLY_INSIDE;\n  }\n  return BoundsComparisonResult.PARTIALLY_INSIDE;\n}\n\nfunction compareBounds(\n    needleLowerBound: Vec3, needleUpperBound: Vec3, haystackLowerBound: Vec3,\n    haystackUpperBound: Vec3) {\n  let curResult = BoundsComparisonResult.FULLY_INSIDE;\n  for (let i = 0; i < 3; ++i) {\n    let newResult = compareBoundsSingleDimension(\n        needleLowerBound[i], needleUpperBound[i], haystackLowerBound[i],\n        haystackUpperBound[i]);\n    switch (newResult) {\n      case BoundsComparisonResult.FULLY_OUTSIDE:\n        return newResult;\n      case BoundsComparisonResult.PARTIALLY_INSIDE:\n        curResult = newResult;\n        break;\n    }\n  }\n  return curResult;\n}\n\nexport interface RenderLayer {\n  sources: VolumeChunkSource[][];\n};\n\nfunction pickBestAlternativeSource(xAxis: Vec3, yAxis: Vec3, alternatives: VolumeChunkSource[]) {\n  let numAlternatives = alternatives.length;\n  let bestAlternativeIndex = 0;\n  if (numAlternatives > 1) {\n    let bestSliceArea = 0;\n    for (let alternativeIndex = 0; alternativeIndex < numAlternatives; ++alternativeIndex) {\n      let alternative = alternatives[alternativeIndex];\n      let sliceArea = estimateSliceAreaPerChunk(xAxis, yAxis, alternative.spec.chunkLayout.size);\n      // console.log(`scaleIndex = ${scaleIndex}, xAxis = ${xAxis}, yAxis\n      // = ${yAxis}, chunksize = ${alternative.spec.chunkLayout.size},\n      // sliceArea = ${sliceArea}`);\n      if (sliceArea > bestSliceArea) {\n        bestSliceArea = sliceArea;\n        bestAlternativeIndex = alternativeIndex;\n      }\n    }\n  }\n  return alternatives[bestAlternativeIndex];\n}\n\nexport class SliceViewBase extends SharedObject {\n  width: number|null = null;\n  height: number|null = null;\n  hasViewportToData = false;\n  /**\n   * Specifies whether width, height, and viewportToData are valid.\n   */\n  hasValidViewport = false;\n\n  // Transforms (x,y) viewport coordinates in the range:\n  //\n  // x=[left: -width/2, right: width/2] and\n  //\n  // y=[top: -height/2, bottom: height/2],\n  //\n  // to data coordinates.\n  viewportToData = mat4.create();\n\n  // Normalized x, y, and z viewport axes in data coordinate space.\n  viewportAxes = [vec4.create(), vec4.create(), vec4.create()];\n\n  // Viewport axes used for selecting visible sources.\n  previousViewportAxes = [vec3.create(), vec3.create()];\n\n  centerDataPosition = vec3.create();\n\n  viewportPlaneDistanceToOrigin: number = null;\n\n  /**\n   * For each visible ChunkLayout, maps each visible VolumeChunkSource to its priority index.\n   */\n  visibleChunkLayouts = new Map<ChunkLayout, Map<VolumeChunkSource, number>>();\n\n  visibleLayers = new Map<RenderLayer, VolumeChunkSource[]>();\n\n  visibleSourcesStale = true;\n\n  pixelSize: number = null;\n\n  constructor() {\n    super();\n    mat4.identity(this.viewportToData);\n  }\n\n  /**\n   * Called when hasValidViewport == true and the viewport width/height or data transform matrix\n   * changes.\n   */\n  onViewportChanged() {}\n  maybeSetHasValidViewport() {\n    if (!this.hasValidViewport && this.width !== null && this.height !== null &&\n        this.hasViewportToData) {\n      this.hasValidViewport = true;\n      this.onHasValidViewport();\n    }\n    if (this.hasValidViewport) {\n      this.onViewportChanged();\n    }\n  }\n  onHasValidViewport() {}\n  setViewportSize(width: number, height: number) {\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      this.maybeSetHasValidViewport();\n      return true;\n    }\n    return false;\n  }\n  setViewportToDataMatrix(mat: Mat4) {\n    if (this.hasViewportToData && mat4.equals(this.viewportToData, mat)) {\n      return false;\n    }\n\n    this.hasViewportToData = true;\n\n    mat4.copy(this.viewportToData, mat);\n    vec3.transformMat4(this.centerDataPosition, kZeroVec, mat);\n\n    let newPixelSize: number;\n\n    // Swap previousViewportAxes with viewportAxes.\n    let viewportAxes = this.viewportAxes;\n    let previousViewportAxes = this.previousViewportAxes;\n\n    // Compute axes.\n    for (var i = 0; i < 3; ++i) {\n      let a = viewportAxes[i];\n      vec4.transformMat4(a, kAxes[i], mat);\n      // a[3] is guaranteed to be 0.\n      if (i === 0) {\n        newPixelSize = vec3.length(a);\n      }\n      vec4.normalize(a, a);\n    }\n\n    this.viewportAxes = viewportAxes;\n    this.previousViewportAxes = previousViewportAxes;\n\n    if (!approxEqual(newPixelSize, this.pixelSize) ||\n        (vec3.dot(viewportAxes[0], previousViewportAxes[0]) < 0.95) ||\n        (vec3.dot(viewportAxes[1], previousViewportAxes[1]) < 0.95)) {\n      vec3.copy(previousViewportAxes[0], viewportAxes[0]);\n      vec3.copy(previousViewportAxes[1], viewportAxes[1]);\n      this.visibleSourcesStale = true;\n      this.pixelSize = newPixelSize;\n    }\n\n    // Compute viewport plane distance to origin.\n    this.viewportPlaneDistanceToOrigin =\n      vec3.dot(this.centerDataPosition, this.viewportAxes[2]);\n    this.onViewportToDataMatrixChanged();\n    this.maybeSetHasValidViewport();\n    return true;\n  }\n\n  onViewportToDataMatrixChanged() {}\n\n  /**\n   * Computes the list of sources to use for each visible layer, based on the\n   * current pixelSize.\n   */\n  updateVisibleSources() {\n    if (!this.visibleSourcesStale) {\n      return;\n    }\n    this.visibleSourcesStale = false;\n    // Increase pixel size by a small margin.\n    let pixelSize = this.pixelSize * 1.1;\n    // console.log(\"pixelSize\", pixelSize);\n\n    let visibleChunkLayouts = this.visibleChunkLayouts;\n    let [xAxis, yAxis] = this.viewportAxes;\n\n    let visibleLayers = this.visibleLayers;\n    visibleChunkLayouts.clear();\n    for (let [renderLayer, visibleSources] of visibleLayers) {\n      visibleSources.length = 0;\n      let sources = renderLayer.sources;\n      let numSources = sources.length;\n      let scaleIndex: number;\n\n      // At the smallest scale, all alternative sources must have the same voxel size, which is\n      // considered to be the base voxel size.\n      let smallestVoxelSize = sources[0][0].spec.voxelSize;\n\n      /**\n       * Determines whether we should continue to look for a finer-resolution source *after* one\n       * with the specified voxelSize.\n       */\n      const canImproveOnVoxelSize = (voxelSize: Vec3) => {\n        for (let i = 0; i < 3; ++i) {\n          let size = voxelSize[i];\n          // If size <= pixelSize, no need for improvement.\n          // If size === smallestVoxelSize, also no need for improvement.\n          if (size > pixelSize && size > smallestVoxelSize[i]) {\n            return true;\n          }\n        }\n        return false;\n      };\n\n      /**\n       * Registers a source as being visible.  This should be called with consecutively decreasing\n       * values of scaleIndex.\n       */\n      const addVisibleSource = (source: VolumeChunkSource, scaleIndex: number) => {\n        // Add to end of visibleSources list.  We will reverse the list after all sources are added.\n        visibleSources[visibleSources.length++] = source;\n        let chunkLayout = source.spec.chunkLayout;\n        let existingSources = visibleChunkLayouts.get(chunkLayout);\n        if (existingSources === undefined) {\n          existingSources = new Map<VolumeChunkSource, number>();\n          visibleChunkLayouts.set(chunkLayout, existingSources);\n        }\n        existingSources.set(source, numSources - scaleIndex - 1);\n      };\n\n      scaleIndex = numSources - 1;\n      while (true) {\n        let source = pickBestAlternativeSource(xAxis, yAxis, sources[scaleIndex]);\n        addVisibleSource(source, scaleIndex);\n        if (scaleIndex === 0 || !canImproveOnVoxelSize(source.spec.voxelSize)) {\n          break;\n        }\n        --scaleIndex;\n      }\n      // Reverse visibleSources list since we added sources from coarsest to finest resolution, but\n      // we want them ordered from finest to coarsest.\n      visibleSources.reverse();\n    }\n  }\n  computeVisibleChunks<T>(\n      getLayoutObject: (chunkLayout: ChunkLayout) => T,\n      addChunk:\n          (chunkLayout: ChunkLayout, layoutObject: T, lowerBound: Vec3,\n           fullyVisibleSources: VolumeChunkSource[]) => void) {\n    this.updateVisibleSources();\n\n    var center = this.centerDataPosition;\n\n    // Lower and upper bound in global data coordinates.\n    var dataLowerBound = vec3.clone(center);\n    var dataUpperBound = vec3.clone(center);\n    var corner = vec3.create();\n    for (var xScalar of [-this.width / 2, this.width / 2]) {\n      for (var yScalar of [-this.height / 2, this.height / 2]) {\n        vec3.scale(corner, kAxes[0], xScalar);\n        vec3.scaleAndAdd(corner, corner, kAxes[1], yScalar);\n        vec3.transformMat4(corner, corner, this.viewportToData);\n        vec3.min(dataLowerBound, dataLowerBound, corner);\n        vec3.max(dataUpperBound, dataUpperBound, corner);\n      }\n    }\n    // console.log(\"data bounds\", dataLowerBound, dataUpperBound);\n\n    var lowerBound = vec3.create();\n    var upperBound = vec3.create();\n\n    // Vertex with maximal dot product with the positive viewport plane normal.\n    // Implicitly, negativeVertex = 1 - positiveVertex.\n    var positiveVertex = vec3.create();\n\n    var planeNormal = this.viewportAxes[2];\n    for (let i = 0; i < 3; ++i) {\n      if (planeNormal[i] > 0) {\n        positiveVertex[i] = 1;\n      }\n    }\n\n    // Sources whose bounds partially contain the current bounding box.\n    let partiallyVisibleSources = new Array<VolumeChunkSource>();\n\n    // Sources whose bounds fully contain the current bounding box.\n    let fullyVisibleSources = new Array<VolumeChunkSource>();\n\n    this.visibleChunkLayouts.forEach((visibleSources, chunkLayout) => {\n      let layoutObject = getLayoutObject(chunkLayout);\n\n      let chunkSize = chunkLayout.size;\n      let offset = chunkLayout.offset;\n\n      let planeDistanceToOrigin =\n          this.viewportPlaneDistanceToOrigin - vec3.dot(offset, this.viewportAxes[2]);\n\n      computeSourcesChunkBounds(lowerBound, upperBound, visibleSources.keys());\n      if (DEBUG_CHUNK_INTERSECTIONS) {\n        console.log(`Initial sources chunk bounds: ${vec3.str(lowerBound)}, ${vec3.str(upperBound)}, data bounds: ${vec3.str(dataLowerBound)}, ${vec3.str(dataUpperBound)}, offset = ${vec3.str(offset)}, chunkSize = ${vec3.str(chunkSize)}`);\n      }\n\n      for (let i = 0; i < 3; ++i) {\n        lowerBound[i] = Math.max(lowerBound[i], Math.floor((dataLowerBound[i] - offset[i]) / chunkSize[i]));\n        // \n        upperBound[i] = Math.min(upperBound[i], Math.floor((dataUpperBound[i] - offset[i]) / chunkSize[i] + 1));\n      }\n\n      // console.log('chunkBounds', lowerBound, upperBound);\n\n      // Checks whether [lowerBound, upperBound) intersects the viewport plane.\n      //\n      // positiveVertexDistanceToOrigin = dot(planeNormal, lowerBound +\n      // positiveVertex * (upperBound - lowerBound)) - planeDistanceToOrigin;\n      // negativeVertexDistanceToOrigin = dot(planeNormal, lowerBound +\n      // negativeVertex * (upperBound - lowerBound)) - planeDistanceToOrigin;\n      //\n      // positive vertex must have positive distance, and negative vertex must\n      // have negative distance.\n      function intersectsPlane() {\n        var positiveVertexDistanceToOrigin = 0;\n        var negativeVertexDistanceToOrigin = 0;\n        // Check positive vertex.\n        for (let i = 0; i < 3; ++i) {\n          let chunkSizeValue = chunkSize[i];\n          let normalValue = planeNormal[i];\n          let lowerValue = lowerBound[i];\n          let upperValue = upperBound[i];\n          let diff = upperValue - lowerValue;\n          let positiveOffset = positiveVertex[i] * diff;\n          // console.log(\n          //     normalValue, lowerValue, upperValue, diff, positiveOffset,\n          //     positiveVertexDistanceToOrigin, negativeVertexDistanceToOrigin);\n          positiveVertexDistanceToOrigin +=\n              normalValue * chunkSizeValue * (lowerValue + positiveOffset);\n          negativeVertexDistanceToOrigin += normalValue * chunkSizeValue *\n              (lowerValue + diff - positiveOffset);\n        }\n        // console.log(\"{positive,negative}VertexDistanceToOrigin: \",\n        // positiveVertexDistanceToOrigin, negativeVertexDistanceToOrigin,\n        // planeDistanceToOrigin);\n        // console.log(\"intersectsPlane:\", negativeVertexDistanceToOrigin,\n        //             planeDistanceToOrigin, positiveVertexDistanceToOrigin);\n        if (positiveVertexDistanceToOrigin < planeDistanceToOrigin) {\n          return false;\n        }\n\n        return negativeVertexDistanceToOrigin <= planeDistanceToOrigin;\n      }\n\n      fullyVisibleSources.length = 0;\n      partiallyVisibleSources.length = 0;\n      for (let source of visibleSources.keys()) {\n        let spec = source.spec;\n        let result = compareBounds(\n          lowerBound, upperBound, spec.lowerChunkBound, spec.upperChunkBound);\n        if (DEBUG_CHUNK_INTERSECTIONS) {\n          console.log(`Comparing source bounds lowerBound=${vec3.str(lowerBound)}, upperBound=${vec3.str(upperBound)}, lowerChunkBound=${vec3.str(spec.lowerChunkBound)}, upperChunkBound=${vec3.str(spec.upperChunkBound)}, got ${BoundsComparisonResult[result]}`, spec, source);\n        }\n        switch (result) {\n          case BoundsComparisonResult.FULLY_INSIDE:\n            fullyVisibleSources.push(source);\n            break;\n          case BoundsComparisonResult.PARTIALLY_INSIDE:\n            partiallyVisibleSources.push(source);\n            break;\n        }\n      }\n      let partiallyVisibleSourcesLength = partiallyVisibleSources.length;\n\n      // Mutates lowerBound and upperBound while running, but leaves them the\n      // same once finished.\n      function checkBounds (nextSplitDim: number) {\n        if (fullyVisibleSources.length === 0 && partiallyVisibleSourcesLength === 0) {\n          if (DEBUG_CHUNK_INTERSECTIONS) {\n            console.log('  no visible sources');\n          }\n          return;\n        }\n\n        if (DEBUG_CHUNK_INTERSECTIONS) {\n          console.log(`Check bounds: [ ${vec3.str(lowerBound)}, ${vec3.str(upperBound)} ]`);\n        }\n        var volume = 1;\n        for (let i = 0; i < 3; ++i) {\n          volume *= Math.max(0, upperBound[i] - lowerBound[i]);\n        }\n\n        if (volume === 0) {\n          if (DEBUG_CHUNK_INTERSECTIONS) {\n            console.log('  volume == 0');\n          }\n          return;\n        }\n\n        if (!intersectsPlane()) {\n          if (DEBUG_CHUNK_INTERSECTIONS) {\n            console.log('  doesn\\'t intersect plane');\n          }\n          return;\n        }\n\n        if (DEBUG_CHUNK_INTERSECTIONS) {\n          console.log('Within bounds: [' + vec3.str(lowerBound) + \", \" + vec3.str(upperBound) + \"]\");\n        }\n\n        if (volume === 1) {\n          addChunk(chunkLayout, layoutObject, lowerBound, fullyVisibleSources);\n          return;\n        }\n\n        var dimLower: number, dimUpper: number, diff: number;\n        while (true) {\n          dimLower = lowerBound[nextSplitDim];\n          dimUpper = upperBound[nextSplitDim];\n          diff = dimUpper - dimLower;\n          if (diff === 1) {\n            nextSplitDim = (nextSplitDim + 1) % 3;\n          } else {\n            break;\n          }\n        }\n\n        let splitPoint = dimLower + Math.floor(0.5 * diff);\n        let newNextSplitDim = (nextSplitDim + 1) % 3;\n        let fullyVisibleSourcesLength = fullyVisibleSources.length;\n\n        upperBound[nextSplitDim] = splitPoint;\n\n        let oldPartiallyVisibleSourcesLength = partiallyVisibleSourcesLength;\n        function adjustSources() {\n          partiallyVisibleSourcesLength = partitionArray(\n              partiallyVisibleSources, 0, oldPartiallyVisibleSourcesLength,\n              source => {\n                let spec = source.spec;\n                let result = compareBoundsSingleDimension(\n                    lowerBound[nextSplitDim], upperBound[nextSplitDim],\n                    spec.lowerChunkBound[nextSplitDim],\n                    spec.upperChunkBound[nextSplitDim]);\n                switch (result) {\n                  case BoundsComparisonResult.PARTIALLY_INSIDE:\n                    return true;\n                  case BoundsComparisonResult.FULLY_INSIDE:\n                    fullyVisibleSources.push(source);\n                  default:\n                    return false;\n                }\n              });\n        }\n\n        adjustSources();\n        checkBounds(newNextSplitDim);\n\n        upperBound[nextSplitDim] = dimUpper;\n        lowerBound[nextSplitDim] = splitPoint;\n\n        adjustSources();\n        checkBounds(newNextSplitDim);\n\n        lowerBound[nextSplitDim] = dimLower;\n\n        // Truncate list of fully visible sources.\n        fullyVisibleSources.length = fullyVisibleSourcesLength;\n\n        // Restore partiallyVisibleSources.\n        partiallyVisibleSourcesLength = oldPartiallyVisibleSourcesLength;\n      }\n      checkBounds(0);\n    });\n  }\n};\n\n/**\n * If this is updated, DATA_TYPE_BYTES must also be updated.\n */\nexport enum DataType {\n  UINT8 = 0,\n  UINT16 = 1,\n  UINT32 = 2,\n  UINT64 = 3,\n  FLOAT32 = 4,\n}\n\ninterface DataTypeBytes {\n  [index: number]: number;\n}\n\nexport const DATA_TYPE_BYTES: DataTypeBytes = [];\nDATA_TYPE_BYTES[DataType.UINT8] = 1;\nDATA_TYPE_BYTES[DataType.UINT16] = 2;\nDATA_TYPE_BYTES[DataType.UINT32] = 4;\nDATA_TYPE_BYTES[DataType.UINT64] = 8;\nDATA_TYPE_BYTES[DataType.FLOAT32] = 4;\n\n/**\n * Specifies the interpretation of volumetric data.\n */\nexport enum VolumeType {\n  UNKNOWN,\n  IMAGE,\n  SEGMENTATION,\n}\n\n\nexport const DEFAULT_CHUNK_DATA_SIZES  = [\n  vec3.fromValues(64, 64, 64)\n];\n\n/**\n * Specifies a chunk layout and voxel size.\n */\nexport class VolumeChunkSpecification {\n  chunkBytes: number;\n  voxelSize: Vec3;\n\n  // All valid chunks are in the range [lowerChunkBound, upperChunkBound).\n  lowerChunkBound: Vec3;\n  upperChunkBound: Vec3;\n\n  constructor(\n      public chunkLayout: ChunkLayout, public chunkDataSize: Vec3,\n      public numChannels: number, public dataType: DataType,\n      public lowerVoxelBound: Vec3, public upperVoxelBound: Vec3,\n      public compressedSegmentationBlockSize?: Vec3|undefined) {\n    this.chunkBytes =\n        prod3(chunkDataSize) * DATA_TYPE_BYTES[dataType] * numChannels;\n    let voxelSize = this.voxelSize =\n        vec3.divide(vec3.create(), this.chunkLayout.size, this.chunkDataSize);\n    let lowerChunkBound = this.lowerChunkBound = vec3.create();\n    let upperChunkBound = this.upperChunkBound = vec3.create();\n    let chunkSize = chunkLayout.size;\n    let chunkOffset = chunkLayout.offset;\n    for (let i = 0; i < 3; ++i) {\n      lowerChunkBound[i] = Math.floor(\n          (lowerVoxelBound[i] * voxelSize[i] - chunkOffset[i]) / chunkSize[i]);\n      upperChunkBound[i] = Math.floor(\n          ((upperVoxelBound[i] - 1) * voxelSize[i] - chunkOffset[i]) /\n              chunkSize[i] +\n          1);\n    }\n    // console.log(`voxelBound = [${vec3.str(lowerVoxelBound)},${vec3.str(upperVoxelBound)}), chunkBound = [${vec3.str(lowerChunkBound)},${vec3.str(upperChunkBound)}]`);\n    this.compressedSegmentationBlockSize = compressedSegmentationBlockSize;\n  }\n  static fromObject(msg: any) {\n    return new VolumeChunkSpecification(\n        ChunkLayout.fromObject(msg['chunkLayout']), msg['chunkDataSize'],\n        msg['numChannels'], msg['dataType'], msg['lowerVoxelBound'],\n        msg['upperVoxelBound'], msg['compressedSegmentationBlockSize']);\n  }\n  toObject(msg: any) {\n    this.chunkLayout.toObject(msg['chunkLayout'] = {});\n    msg['chunkDataSize'] = this.chunkDataSize;\n    msg['numChannels'] = this.numChannels;\n    msg['dataType'] = this.dataType;\n    msg['lowerVoxelBound'] = this.lowerVoxelBound;\n    msg['upperVoxelBound'] = this.upperVoxelBound;\n    msg['compressedSegmentationBlockSize'] =\n        this.compressedSegmentationBlockSize;\n  }\n\n  static * getDefaults(options: {\n    voxelSize: Vec3,\n    lowerVoxelBound: Vec3,\n    upperVoxelBound: Vec3,\n    volumeType: VolumeType,\n    dataType: DataType, numChannels?: number, chunkDataSizes?: Vec3[],\n    compressedSegmentationBlockSize?: Vec3|null\n  }) {\n    let {voxelSize,       dataType,\n         lowerVoxelBound, chunkDataSizes = DEFAULT_CHUNK_DATA_SIZES,\n         numChannels = 1, compressedSegmentationBlockSize} = options;\n    let chunkOffset = vec3.multiply(vec3.create(), lowerVoxelBound, voxelSize);\n    if (compressedSegmentationBlockSize === undefined &&\n        options.volumeType === VolumeType.SEGMENTATION &&\n        (dataType === DataType.UINT32 || dataType === DataType.UINT64)) {\n      compressedSegmentationBlockSize = vec3.fromValues(8, 8, 8);\n    }\n    for (let chunkDataSize of chunkDataSizes) {\n      let chunkSize = vec3.create();\n      vec3.multiply(chunkSize, voxelSize, chunkDataSize);\n      let chunkLayout = ChunkLayout.get(chunkSize, chunkOffset);\n      yield new VolumeChunkSpecification(\n          chunkLayout, chunkDataSize, numChannels, dataType, lowerVoxelBound,\n          options.upperVoxelBound, compressedSegmentationBlockSize);\n    }\n  }\n};\n\nexport interface VolumeChunkSource { spec: VolumeChunkSpecification; }\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/base.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Vec3, vec3, kZeroVec, vec3Key } from 'neuroglancer/util/geom';\n\n/**\n * @param size Size of each chunk in nanometers.\n * @param offset Offset of chunk boundaries relative to\n *   (0,0,0).  It should be the case that 0 >= offset > size.\n */\nexport class ChunkLayout {\n  size: Vec3;\n  offset: Vec3;\n  constructor(size: Vec3, offset?: Vec3) {\n    this.size = vec3.clone(size);\n    if (offset === undefined) {\n      this.offset = vec3.create();\n    } else {\n      this.offset = vec3.clone(offset);\n    }\n  }\n  static cache = new Map<string, ChunkLayout>();\n  toObject (msg: any) {\n    msg['size'] = this.size;\n    msg['offset'] = this.offset;\n  }\n\n  static get(size: Vec3, offset = kZeroVec) {\n    let cache = ChunkLayout.cache;\n    let key = `${vec3Key(size)}+${vec3Key(offset)}`;\n    let obj = cache.get(key);\n    if (obj === undefined) {\n      obj = new ChunkLayout(size, offset);\n      cache.set(key, obj);\n    }\n    return obj;\n  }\n  static fromObject (msg: any) {\n    return ChunkLayout.get(msg['size'], msg['offset']);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/chunk_layout.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {vec2, vec3, vec4, mat2, mat3, mat4, quat} from 'gl-matrix';\nimport {vec3, vec4, mat4} from 'gl-matrix';\n\nexport type Vec2 = Float32Array;\nexport type Vec3 = Float32Array;\nexport type Vec4 = Float32Array;\nexport type Mat3 = Float32Array;\nexport type Mat4 = Float32Array;\nexport type Quat = Float32Array;\n\nexport const identityMat4 = mat4.create();\n\nexport const AXES_NAMES = ['x', 'y', 'z'];\n\nexport class BoundingBox {\n  constructor(public lower: Vec3, public upper: Vec3) {}\n};\n\nexport const kAxes = [\n  vec4.fromValues(1, 0, 0, 0), vec4.fromValues(0, 1, 0, 0),\n  vec4.fromValues(0, 0, 1, 0)\n];\nexport const kZeroVec = vec3.fromValues(0, 0, 0);\n\nexport function prod3(x: ArrayLike<number>) {\n  return x[0] * x[1] * x[2];\n}\n\nexport function prod4(x: ArrayLike<number>) {\n  return x[0] * x[1] * x[2] * x[3];\n}\n\n/**\n * Implements a one-to-one conversion from Vec3 to string, suitable for use a Map key.\n *\n * Specifically, returns the string representation of the 3 values separated by commas.\n */\nexport function vec3Key(x: ArrayLike<number>) {\n  return `${x[0]},${x[1]},${x[2]}`;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/geom.ts\n **/","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.2\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nexports.glMatrix = require(\"./gl-matrix/common.js\");\nexports.mat2 = require(\"./gl-matrix/mat2.js\");\nexports.mat2d = require(\"./gl-matrix/mat2d.js\");\nexports.mat3 = require(\"./gl-matrix/mat3.js\");\nexports.mat4 = require(\"./gl-matrix/mat4.js\");\nexports.quat = require(\"./gl-matrix/quat.js\");\nexports.vec2 = require(\"./gl-matrix/vec2.js\");\nexports.vec3 = require(\"./gl-matrix/vec3.js\");\nexports.vec4 = require(\"./gl-matrix/vec4.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix.js\n ** module id = 22\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Configuration Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\nglMatrix.ENABLE_SIMD = false;\n\n// Capability detection\nglMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === Float32Array) && ('SIMD' in this);\nglMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    glMatrix.ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less \n * than or equal to 1.0, and a relative tolerance is used for larger values)\n * \n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nglMatrix.equals = function(a, b) {\n\treturn Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nmodule.exports = glMatrix;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/common.js\n ** module id = 23\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nmat2.fromValues = function(m00, m01, m10, m11) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n};\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nmat2.set = function(out, m00, m01, m10, m11) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n};\n\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n    \n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.fromRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nmat2.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2.str = function (a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix \n * @param {mat2} D the diagonal matrix \n * @param {mat2} U the upper triangular matrix \n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) { \n    L[2] = a[2]/a[0]; \n    U[0] = a[0]; \n    U[1] = a[1]; \n    U[3] = a[3] - L[2] * U[1]; \n    return [L, D, U];       \n}; \n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nmat2.sub = mat2.subtract;\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n};\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nmat2.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nmat2.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\nmodule.exports = mat2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat2.js\n ** module id = 24\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n * \n * @description \n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nmat2d.fromValues = function(a, b, c, d, tx, ty) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n};\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nmat2d.set = function(out, a, b, c, d, tx, ty) {\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nmat2d.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nmat2d.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2d.str = function (a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) { \n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}; \n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nmat2d.sub = mat2d.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nmat2d.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    return out;\n};\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nmat2d.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2d.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2d.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n};\n\nmodule.exports = mat2d;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat2d.js\n ** module id = 25\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nmat3.fromValues = function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n};\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nmat3.set = function(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nmat3.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nmat3.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat3.str = function (a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n};\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nmat3.sub = mat3.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nmat3.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n};\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nmat3.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    out[6] = a[6] + (b[6] * scale);\n    out[7] = a[7] + (b[7] * scale);\n    out[8] = a[8] + (b[8] * scale);\n    return out;\n};\n\n/*\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat3.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && \n           a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n           a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat3.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = a[6], b7 = b[7], b8 = b[8];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n};\n\n\nmodule.exports = mat3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat3.js\n ** module id = 26\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {\n  scalar: {},\n  SIMD: {},\n};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nmat4.fromValues = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n};\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nmat4.set = function(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n};\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n};\n\n/**\n * Transpose the values of a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.transpose = function(out, a) {\n    var a0, a1, a2, a3,\n        tmp01, tmp23,\n        out0, out1, out2, out3;\n\n    a0 = SIMD.Float32x4.load(a, 0);\n    a1 = SIMD.Float32x4.load(a, 4);\n    a2 = SIMD.Float32x4.load(a, 8);\n    a3 = SIMD.Float32x4.load(a, 12);\n\n    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n    out0  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);\n    out1  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);\n    SIMD.Float32x4.store(out, 0,  out0);\n    SIMD.Float32x4.store(out, 4,  out1);\n\n    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n    out2  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);\n    out3  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);\n    SIMD.Float32x4.store(out, 8,  out2);\n    SIMD.Float32x4.store(out, 12, out3);\n\n    return out;\n};\n\n/**\n * Transpse a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = glMatrix.USE_SIMD ? mat4.SIMD.transpose : mat4.scalar.transpose;\n\n/**\n * Inverts a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Inverts a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.invert = function(out, a) {\n  var row0, row1, row2, row3,\n      tmp1,\n      minor0, minor1, minor2, minor3,\n      det,\n      a0 = SIMD.Float32x4.load(a, 0),\n      a1 = SIMD.Float32x4.load(a, 4),\n      a2 = SIMD.Float32x4.load(a, 8),\n      a3 = SIMD.Float32x4.load(a, 12);\n\n  // Compute matrix adjugate\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);\n  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);\n  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);\n\n  tmp1   = SIMD.Float32x4.mul(row2, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.mul(row1, tmp1);\n  minor1 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);\n  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);\n  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row1, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);\n  minor3 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);\n  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);\n  minor2 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);\n  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row0, row1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);\n  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);\n\n  // Compute matrix determinant\n  det   = SIMD.Float32x4.mul(row0, minor0);\n  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 2, 3, 0, 1), det);\n  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 1, 0, 3, 2), det);\n  tmp1  = SIMD.Float32x4.reciprocalApproximation(det);\n  det   = SIMD.Float32x4.sub(\n               SIMD.Float32x4.add(tmp1, tmp1),\n               SIMD.Float32x4.mul(det, SIMD.Float32x4.mul(tmp1, tmp1)));\n  det   = SIMD.Float32x4.swizzle(det, 0, 0, 0, 0);\n  if (!det) {\n      return null;\n  }\n\n  // Compute matrix inverse\n  SIMD.Float32x4.store(out, 0,  SIMD.Float32x4.mul(det, minor0));\n  SIMD.Float32x4.store(out, 4,  SIMD.Float32x4.mul(det, minor1));\n  SIMD.Float32x4.store(out, 8,  SIMD.Float32x4.mul(det, minor2));\n  SIMD.Float32x4.store(out, 12, SIMD.Float32x4.mul(det, minor3));\n  return out;\n}\n\n/**\n * Inverts a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = glMatrix.USE_SIMD ? mat4.SIMD.invert : mat4.scalar.invert;\n\n/**\n * Calculates the adjugate of a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.adjoint = function(out, a) {\n  var a0, a1, a2, a3;\n  var row0, row1, row2, row3;\n  var tmp1;\n  var minor0, minor1, minor2, minor3;\n\n  var a0 = SIMD.Float32x4.load(a, 0);\n  var a1 = SIMD.Float32x4.load(a, 4);\n  var a2 = SIMD.Float32x4.load(a, 8);\n  var a3 = SIMD.Float32x4.load(a, 12);\n\n  // Transpose the source matrix.  Sort of.  Not a true transpose operation\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);\n  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);\n\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);\n  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);\n\n  tmp1   = SIMD.Float32x4.mul(row2, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.mul(row1, tmp1);\n  minor1 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);\n  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);\n  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row1, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);\n  minor3 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);\n  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);\n  minor2 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);\n  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row0, row1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);\n  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);\n\n  SIMD.Float32x4.store(out, 0,  minor0);\n  SIMD.Float32x4.store(out, 4,  minor1);\n  SIMD.Float32x4.store(out, 8,  minor2);\n  SIMD.Float32x4.store(out, 12, minor3);\n  return out;\n};\n\n/**\n * Calculates the adjugate of a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\n mat4.adjoint = glMatrix.USE_SIMD ? mat4.SIMD.adjoint : mat4.scalar.adjoint;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's explicitly using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand, must be a Float32Array\n * @param {mat4} b the second operand, must be a Float32Array\n * @returns {mat4} out\n */\nmat4.SIMD.multiply = function (out, a, b) {\n    var a0 = SIMD.Float32x4.load(a, 0);\n    var a1 = SIMD.Float32x4.load(a, 4);\n    var a2 = SIMD.Float32x4.load(a, 8);\n    var a3 = SIMD.Float32x4.load(a, 12);\n\n    var b0 = SIMD.Float32x4.load(b, 0);\n    var out0 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 2, 2, 2, 2), a2),\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 0, out0);\n\n    var b1 = SIMD.Float32x4.load(b, 4);\n    var out1 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 2, 2, 2, 2), a2),\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 4, out1);\n\n    var b2 = SIMD.Float32x4.load(b, 8);\n    var out2 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 2, 2, 2, 2), a2),\n                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 8, out2);\n\n    var b3 = SIMD.Float32x4.load(b, 12);\n    var out3 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                        SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 1, 1, 1, 1), a1),\n                        SIMD.Float32x4.add(\n                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 2, 2, 2, 2), a2),\n                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 12, out3);\n\n    return out;\n};\n\n/**\n * Multiplies two mat4's explicitly not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.scalar.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Multiplies two mat4's using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = glMatrix.USE_SIMD ? mat4.SIMD.multiply : mat4.scalar.multiply;\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.scalar.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Translates a mat4 by the given vector using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.SIMD.translate = function (out, a, v) {\n    var a0 = SIMD.Float32x4.load(a, 0),\n        a1 = SIMD.Float32x4.load(a, 4),\n        a2 = SIMD.Float32x4.load(a, 8),\n        a3 = SIMD.Float32x4.load(a, 12),\n        vec = SIMD.Float32x4(v[0], v[1], v[2] , 0);\n\n    if (a !== out) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        out[4] = a[4]; out[5] = a[5]; out[6] = a[6]; out[7] = a[7];\n        out[8] = a[8]; out[9] = a[9]; out[10] = a[10]; out[11] = a[11];\n    }\n\n    a0 = SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0));\n    a1 = SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1));\n    a2 = SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2));\n\n    var t0 = SIMD.Float32x4.add(a0, SIMD.Float32x4.add(a1, SIMD.Float32x4.add(a2, a3)));\n    SIMD.Float32x4.store(out, 12, t0);\n\n    return out;\n};\n\n/**\n * Translates a mat4 by the given vector using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = glMatrix.USE_SIMD ? mat4.SIMD.translate : mat4.scalar.translate;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scalar.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.SIMD.scale = function(out, a, v) {\n    var a0, a1, a2;\n    var vec = SIMD.Float32x4(v[0], v[1], v[2], 0);\n\n    a0 = SIMD.Float32x4.load(a, 0);\n    SIMD.Float32x4.store(\n        out, 0, SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0)));\n\n    a1 = SIMD.Float32x4.load(a, 4);\n    SIMD.Float32x4.store(\n        out, 4, SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1)));\n\n    a2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(\n        out, 8, SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2)));\n\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n */\nmat4.scale = glMatrix.USE_SIMD ? mat4.SIMD.scale : mat4.scalar.scale;\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateX = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n      out[0]  = a[0];\n      out[1]  = a[1];\n      out[2]  = a[2];\n      out[3]  = a[3];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_1 = SIMD.Float32x4.load(a, 4);\n    var a_2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(out, 4,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_2, s)));\n    SIMD.Float32x4.store(out, 8,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_2, c), SIMD.Float32x4.mul(a_1, s)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis using SIMD if availabe and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = glMatrix.USE_SIMD ? mat4.SIMD.rotateX : mat4.scalar.rotateX;\n\n/**\n * Rotates a matrix by the given angle around the Y axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateY = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_0 = SIMD.Float32x4.load(a, 0);\n    var a_2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(out, 0,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_2, s)));\n    SIMD.Float32x4.store(out, 8,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, s), SIMD.Float32x4.mul(a_2, c)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis if SIMD available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n mat4.rotateY = glMatrix.USE_SIMD ? mat4.SIMD.rotateY : mat4.scalar.rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Z axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateZ = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_0 = SIMD.Float32x4.load(a, 0);\n    var a_1 = SIMD.Float32x4.load(a, 4);\n    SIMD.Float32x4.store(out, 0,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_1, s)));\n    SIMD.Float32x4.store(out, 4,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_0, s)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis if SIMD available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n mat4.rotateZ = glMatrix.USE_SIMD ? mat4.SIMD.rotateZ : mat4.scalar.rotateZ;\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nmat4.getTranslation = function (out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n};\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nmat4.getRotation = function (out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) { \n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S; \n    out[2] = (mat[1] - mat[4]) / S; \n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) { \n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S; \n    out[2] = (mat[8] + mat[2]) / S; \n  } else if (mat[5] > mat[10]) { \n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S; \n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S; \n  } else { \n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n\n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n};\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n};\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nmat4.sub = mat4.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nmat4.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n};\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nmat4.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    out[6] = a[6] + (b[6] * scale);\n    out[7] = a[7] + (b[7] * scale);\n    out[8] = a[8] + (b[8] * scale);\n    out[9] = a[9] + (b[9] * scale);\n    out[10] = a[10] + (b[10] * scale);\n    out[11] = a[11] + (b[11] * scale);\n    out[12] = a[12] + (b[12] * scale);\n    out[13] = a[13] + (b[13] * scale);\n    out[14] = a[14] + (b[14] * scale);\n    out[15] = a[15] + (b[15] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat4.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && \n           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && \n           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat4.equals = function (a, b) {\n    var a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],\n        a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7], \n        a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11], \n        a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n    var b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],\n        b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7], \n        b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11], \n        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n            Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n            Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n            Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n            Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n            Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n            Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n            Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n};\n\n\n\nmodule.exports = mat4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat4.js\n ** module id = 27\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\nvar mat3 = require(\"./mat3.js\");\nvar vec3 = require(\"./vec3.js\");\nvar vec4 = require(\"./vec4.js\");\n\n/**\n * @class Quaternion\n * @name quat\n */\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nquat.getAxisAngle = function(out_axis, q) {\n    var rad = Math.acos(q[3]) * 2.0;\n    var s = Math.sin(rad / 2.0);\n    if (s != 0.0) {\n        out_axis[0] = q[0] / s;\n        out_axis[1] = q[1] / s;\n        out_axis[2] = q[2] / s;\n    } else {\n        // If s is zero, return any axis (no rotation - axis does not matter)\n        out_axis[0] = 1;\n        out_axis[1] = 0;\n        out_axis[2] = 0;\n    }\n    return rad;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {        \n        // \"from\" and \"to\" quaternions are very close \n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    \n    return out;\n};\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nquat.sqlerp = (function () {\n  var temp1 = quat.create();\n  var temp2 = quat.create();\n  \n  return function (out, a, b, c, d, t) {\n    quat.slerp(temp1, a, d, t);\n    quat.slerp(temp2, b, c, t);\n    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n    \n    return out;\n  };\n}());\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n    \n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n        \n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n    \n    return out;\n};\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nquat.str = function (a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.equals = vec4.equals;\n\nmodule.exports = quat;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/quat.js\n ** module id = 28\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nvec3.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nvec3.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nvec3.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.hermite = function (out, a, b, c, d, t) {\n  var factorTimes2 = t * t,\n      factor1 = factorTimes2 * (2 * t - 3) + 1,\n      factor2 = factorTimes2 * (t - 2) + t,\n      factor3 = factorTimes2 * (t - 1),\n      factor4 = factorTimes2 * (3 - 2 * t);\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.bezier = function (out, a, b, c, d, t) {\n  var inverseFactor = 1 - t,\n      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n      factorTimes2 = t * t,\n      factor1 = inverseFactorTimesTwo * inverseFactor,\n      factor2 = 3 * t * inverseFactorTimesTwo,\n      factor3 = 3 * factorTimes2 * inverseFactor,\n      factor4 = factorTimes2 * t;\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  \tr[1] = p[1];\n  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  \tr[2] = p[2];\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n   \n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n \n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n \n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }     \n};\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec3.str = function (a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec3.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec3.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2];\n    var b0 = b[0], b1 = b[1], b2 = b[2];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n};\n\nmodule.exports = vec3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec3.js\n ** module id = 29\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nvec4.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    out[3] = Math.ceil(a[3]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nvec4.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    out[3] = Math.floor(a[3]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nvec4.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    out[3] = Math.round(a[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = glMatrix.RANDOM();\n    out[1] = glMatrix.RANDOM();\n    out[2] = glMatrix.RANDOM();\n    out[3] = glMatrix.RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec4.str = function (a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec4.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec4.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n};\n\nmodule.exports = vec4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec4.js\n ** module id = 30\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nvec2.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nvec2.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nvec2.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1];\n    var b0 = b[0], b1 = b[1];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n};\n\nmodule.exports = vec2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec2.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function approxEqual(a: number, b: number): boolean {\n  if (a === b) {\n    return true;\n  }\n  return (Math.abs(a - b) / Math.min(Math.abs(a), Math.abs(b)) < 1e-6);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/compare.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface WritableArrayLike<T> {\n  length: number;\n  [n: number]: T;\n}\n\n/**\n * Partitions array[start:end] such that all elements for which predicate\n * returns true are before the elements for which predicate returns false.\n *\n * predicate will be called exactly once for each element in array[start:end],\n * in order.\n *\n * @returns {number} The index of the first element for which predicate returns\n * false, or end if there is no such element.\n */\nexport function partitionArray<T>(\n    array: T[], start: number, end: number, predicate: (x: T) => boolean): number {\n  for (; start < end;) {\n    let x = array[start];\n    if (predicate(x)) {\n      ++start;\n      continue;\n    }\n    --end;\n    array[start] = array[end];\n    array[end] = x;\n  }\n  return end;\n}\n\nexport interface TypedArrayConstructor {\n  new (buffer: ArrayBuffer, byteOffset: number, length: number): TypedArray;\n  BYTES_PER_ELEMENT: number;\n}\n\nexport type TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array |\n    Uint32Array | Float32Array | Float64Array;\n\n/**\n * Returns an array of size newSize that starts with the contents of array.\n * Either returns array if it has the correct size, or a new array with zero\n * padding at the end.\n */\nexport function maybePadArray<T extends TypedArray>(array: T, newSize: number): T {\n  if (array.length === newSize) {\n    return array;\n  }\n  let newArray = new (<any>array.constructor)(newSize);\n  newArray.set(array);\n  return newArray;\n}\n\nexport function getFortranOrderStrides(size: ArrayLike<number>, baseStride = 1) {\n  let length = size.length;\n  let strides = new Array<number>(length);\n  let stride = strides[0] = baseStride;\n  for (let i = 1; i < length; ++i) {\n    stride *= size[i - 1];\n    strides[i] = stride;\n  }\n  return strides;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/array.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChunkState} from 'neuroglancer/chunk_manager/base';\nimport {Chunk, ChunkManager, ChunkSource} from 'neuroglancer/chunk_manager/frontend';\nimport {LayerManager} from 'neuroglancer/layer';\nimport {MeshSource} from 'neuroglancer/mesh/frontend';\nimport {NavigationState} from 'neuroglancer/navigation_state';\nimport {DataType, VolumeType, SliceViewBase, VolumeChunkSource as VolumeChunkSourceInterface, VolumeChunkSpecification} from 'neuroglancer/sliceview/base';\nimport {ChunkLayout} from 'neuroglancer/sliceview/chunk_layout';\nimport {RenderLayer} from 'neuroglancer/sliceview/renderlayer';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {Disposable} from 'neuroglancer/util/disposable';\nimport {vec3, mat4, Vec3, Vec4, Mat4, vec3Key} from 'neuroglancer/util/geom';\nimport {Buffer} from 'neuroglancer/webgl/buffer';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {OffscreenFramebuffer} from 'neuroglancer/webgl/offscreen';\nimport {ShaderProgram, ShaderBuilder, ShaderModule} from 'neuroglancer/webgl/shader';\nimport {RPC} from 'neuroglancer/worker_rpc';\nimport {Signal} from 'signals';\n\nexport type VolumeChunkKey = string;\n\nconst tempMat = mat4.create();\n\nexport class SliceView extends SliceViewBase {\n  dataToViewport = mat4.create();\n\n  // Transforms viewport coordinates to OpenGL normalized device coordinates\n  // [left: -1, right: 1], [top: 1, bottom: -1].\n  viewportToDevice = mat4.create();\n\n  // Equals viewportToDevice * dataToViewport.\n  dataToDevice = mat4.create();\n\n  visibleChunks = new Map<ChunkLayout, VolumeChunkKey[]>();\n\n  viewChanged = new Signal();\n\n  renderingStale = true;\n\n  visibleChunksStale = true;\n\n  visibleLayersStale = false;\n\n  visibleLayerList = new Array<RenderLayer>();\n\n  visibleLayers: Map<RenderLayer, VolumeChunkSource[]>;\n\n  newVisibleLayers = new Set<RenderLayer>();\n\n  offscreenFramebuffer = new OffscreenFramebuffer(\n      this.gl, {numDataBuffers: 1, depthBuffer: false, stencilBuffer: true});\n\n  constructor(\n      public gl: GL, public chunkManager: ChunkManager, public layerManager: LayerManager,\n      public navigationState: NavigationState) {\n    super();\n    mat4.identity(this.dataToViewport);\n    this.initializeCounterpart(\n        this.chunkManager.rpc, {'type': 'SliceView', 'chunkManager': chunkManager.rpcId});\n    this.updateVisibleLayers();\n\n    this.registerSignalBinding(\n        navigationState.changed.add(() => { this.updateViewportFromNavigationState(); }));\n    this.updateViewportFromNavigationState();\n\n    this.registerSignalBinding(layerManager.layersChanged.add(() => {\n      if (!this.visibleLayersStale) {\n        if (this.hasValidViewport) {\n          this.visibleLayersStale = true;\n          setTimeout(this.updateVisibleLayers.bind(this), 0);\n        }\n      }\n    }));\n\n    this.viewChanged.add(() => { this.renderingStale = true; });\n    this.registerSignalBinding(chunkManager.chunkQueueManager.visibleChunksChanged.add(\n        this.viewChanged.dispatch, this.viewChanged));\n  }\n\n  private updateViewportFromNavigationState() {\n    let {navigationState} = this;\n    if (!navigationState.valid) {\n      return;\n    }\n    navigationState.toMat4(tempMat);\n    this.setViewportToDataMatrix(tempMat);\n  }\n\n  updateVisibleLayers() {\n    if (!this.hasValidViewport) {\n      return false;\n    }\n    this.visibleLayersStale = false;\n    let visibleLayers = this.visibleLayers;\n    let rpc = this.rpc;\n    let rpcMessage: any = {'id': this.rpcId};\n    // FIXME: avoid allocation?\n    let newVisibleLayers = this.newVisibleLayers;\n    let changed = false;\n    let visibleLayerList = this.visibleLayerList;\n    visibleLayerList.length = 0;\n    for (let renderLayer of this.layerManager.readyRenderLayers()) {\n      if (renderLayer instanceof RenderLayer) {\n        newVisibleLayers.add(renderLayer);\n        visibleLayerList.push(renderLayer);\n        if (!visibleLayers.has(renderLayer)) {\n          visibleLayers.set(renderLayer, []);\n          renderLayer.redrawNeeded.add(this.viewChanged.dispatch, this.viewChanged);\n          rpcMessage['layerId'] = renderLayer.rpcId;\n          rpc.invoke('SliceView.addVisibleLayer', rpcMessage);\n          changed = true;\n        }\n      }\n    }\n    for (let renderLayer of visibleLayers.keys()) {\n      if (!newVisibleLayers.has(renderLayer)) {\n        visibleLayers.delete(renderLayer);\n        renderLayer.redrawNeeded.remove(this.viewChanged.dispatch, this.viewChanged);\n        rpcMessage['layerId'] = renderLayer.rpcId;\n        rpc.invoke('SliceView.removeVisibleLayer', rpcMessage);\n        changed = true;\n      }\n    }\n    newVisibleLayers.clear();\n    if (changed) {\n      this.visibleSourcesStale = true;\n    }\n    // Unconditionally call viewChanged, because layers may have been reordered even if the set of\n    // sources is the same.\n    this.viewChanged.dispatch();\n    return changed;\n  }\n\n  onViewportChanged() {\n    var {width, height, viewportToDevice, dataToViewport, dataToDevice} = this;\n    mat4.ortho(viewportToDevice, -width / 2, width / 2, height / 2, -height / 2, -1, 1);\n    mat4.multiply(dataToDevice, viewportToDevice, dataToViewport);\n\n    this.visibleChunksStale = true;\n    this.viewChanged.dispatch();\n  }\n  setViewportSize(width: number, height: number) {\n    if (super.setViewportSize(width, height)) {\n      this.rpc.invoke('SliceView.updateView', {id: this.rpcId, width: width, height: height});\n      // this.chunkManager.scheduleUpdateChunkPriorities();\n      return true;\n    }\n    return false;\n  }\n\n  onViewportToDataMatrixChanged() {\n    let {viewportToData} = this;\n    mat4.invert(this.dataToViewport, viewportToData);\n    this.rpc.invoke('SliceView.updateView', {id: this.rpcId, viewportToData: viewportToData});\n  }\n\n  onHasValidViewport() { this.updateVisibleLayers(); }\n\n  updateRendering() {\n    if (!this.renderingStale || !this.hasValidViewport || this.width === 0 || this.height === 0) {\n      return;\n    }\n    this.renderingStale = false;\n    this.maybeUpdateVisibleChunks();\n\n    let {gl, offscreenFramebuffer, width, height} = this;\n\n    offscreenFramebuffer.bind(width, height);\n    gl.disable(gl.SCISSOR_TEST);\n\n    // we have viewportToData\n    // we need: matrix that maps input x to the output x axis, scaled by\n\n    gl.clearStencil(0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.colorMask(true, true, true, true);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.STENCIL_TEST);\n    gl.disable(gl.DEPTH_TEST);\n    gl.stencilOpSeparate(\n        /*face=*/gl.FRONT_AND_BACK, /*sfail=*/gl.KEEP, /*dpfail=*/gl.KEEP,\n        /*dppass=*/gl.REPLACE);\n\n    // console.log(\"Drawing sliceview\");\n    let renderLayerNum = 0;\n    for (let renderLayer of this.visibleLayerList) {\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFuncSeparate(\n          /*face=*/gl.FRONT_AND_BACK,\n          /*func=*/gl.GREATER,\n          /*ref=*/1,\n          /*mask=*/1);\n      if (renderLayerNum === 1) {\n        // Turn on blending after the first layer.\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n      }\n      renderLayer.draw(this);\n      ++renderLayerNum;\n    }\n    gl.disable(gl.BLEND);\n    gl.disable(gl.STENCIL_TEST);\n    offscreenFramebuffer.unbind();\n  }\n\n  maybeUpdateVisibleChunks() {\n    if (!this.visibleChunksStale && !this.visibleSourcesStale) {\n      // console.log(\"Not updating visible chunks\");\n      return false;\n    }\n    // console.log(\"Updating visible\");\n    this.visibleChunksStale = false;\n    this.updateVisibleChunks();\n    return true;\n  }\n  updateVisibleChunks() {\n    let allVisibleChunks = this.visibleChunks;\n\n    function getLayoutObject(chunkLayout: ChunkLayout) {\n      let visibleChunks = allVisibleChunks.get(chunkLayout);\n      if (visibleChunks === undefined) {\n        visibleChunks = [];\n        allVisibleChunks.set(chunkLayout, visibleChunks);\n      } else {\n        visibleChunks.length = 0;\n      }\n      return visibleChunks;\n    }\n    function addChunk(chunkLayout: ChunkLayout, visibleChunks: string[], positionInChunks: Vec3) {\n      let key = vec3Key(positionInChunks);\n      visibleChunks[visibleChunks.length] = key;\n    }\n    this.computeVisibleChunks(getLayoutObject, addChunk);\n  }\n};\n\nexport interface ChunkFormat {\n  shaderKey: string;\n  defineShader: (builder: ShaderBuilder) => void;\n  beginDrawing: (gl: GL, shader: ShaderProgram) => void;\n  endDrawing: (gl: GL, shader: ShaderProgram) => void;\n  bindChunk: (gl: GL, shader: ShaderProgram, chunk: VolumeChunk) => void;\n}\n\nexport interface ChunkFormatHandler extends Disposable {\n  chunkFormat: ChunkFormat;\n  getChunk(source: VolumeChunkSource, x: any): VolumeChunk;\n}\n\nexport type ChunkFormatHandlerFactory = (gl: GL, spec: VolumeChunkSpecification) =>\n    ChunkFormatHandler;\n\nvar chunkFormatHandlers = new Array<ChunkFormatHandlerFactory>();\n\nexport function registerChunkFormatHandler(factory: ChunkFormatHandlerFactory) {\n  chunkFormatHandlers.push(factory);\n}\n\nfunction getChunkFormatHandler(gl: GL, spec: VolumeChunkSpecification) {\n  for (let handler of chunkFormatHandlers) {\n    let result = handler(gl, spec);\n    if (result != null) {\n      return result;\n    }\n  }\n  throw new Error('No chunk format handler found.');\n}\n\nexport abstract class VolumeChunkSource extends ChunkSource implements VolumeChunkSourceInterface {\n  chunkFormatHandler: ChunkFormatHandler;\n\n  chunks: Map<string, VolumeChunk>;\n\n  constructor(chunkManager: ChunkManager, public spec: VolumeChunkSpecification) {\n    super(chunkManager);\n    this.chunkFormatHandler =\n        this.registerDisposer(getChunkFormatHandler(chunkManager.chunkQueueManager.gl, spec));\n  }\n\n  initializeCounterpart(rpc: RPC, options: any) {\n    this.spec.toObject(options['spec'] = {});\n    super.initializeCounterpart(rpc, options);\n  }\n\n  get chunkFormat() { return this.chunkFormatHandler.chunkFormat; }\n\n  getValueAt(position: Vec3) {\n    let chunkGridPosition = vec3.create();\n    let spec = this.spec;\n    let chunkLayout = spec.chunkLayout;\n    let offset = chunkLayout.offset;\n    let chunkSize = chunkLayout.size;\n    for (let i = 0; i < 3; ++i) {\n      chunkGridPosition[i] = Math.floor((position[i] - offset[i]) / chunkSize[i]);\n    }\n    let key = vec3Key(chunkGridPosition);\n    let chunk = <VolumeChunk>this.chunks.get(key);\n    if (!chunk) {\n      return null;\n    }\n    // Reuse temporary variable.\n    let dataPosition = chunkGridPosition;\n    let voxelSize = spec.voxelSize;\n    for (let i = 0; i < 3; ++i) {\n      dataPosition[i] = Math.floor(\n          (position[i] - offset[i] - chunkGridPosition[i] * chunkSize[i]) / voxelSize[i]);\n    }\n    let chunkDataSize = chunk.chunkDataSize;\n    for (let i = 0; i < 3; ++i) {\n      if (dataPosition[i] >= chunkDataSize[i]) {\n        return undefined;\n      }\n    }\n    return chunk.getValueAt(dataPosition);\n  }\n\n  getChunk(x: any) { return this.chunkFormatHandler.getChunk(this, x); }\n};\n\nexport abstract class VolumeChunk extends Chunk {\n  chunkDataSize: Vec3;\n  chunkGridPosition: Vec3;\n  source: VolumeChunkSource;\n\n  get chunkFormat() { return this.source.chunkFormat; }\n\n  constructor(source: VolumeChunkSource, x: any) {\n    super(source);\n    this.chunkGridPosition = x['chunkGridPosition'];\n    this.chunkDataSize = x['chunkDataSize'] || source.spec.chunkDataSize;\n    this.state = ChunkState.SYSTEM_MEMORY;\n  }\n  abstract getValueAt(dataPosition: Vec3): any;\n};\n\nexport interface MultiscaleVolumeChunkSource {\n  /**\n   * @return Chunk sources for each scale, ordered by increasing minVoxelSize.  For each scale,\n   * there may be alternative sources with different chunk layouts.\n   */\n  getSources: (chunkManager: ChunkManager) => VolumeChunkSource[][];\n\n  numChannels: number;\n  dataType: DataType;\n  volumeType: VolumeType;\n\n  /**\n   * Returns the associated mesh source, if there is one.\n   *\n   * This only makes sense if volumeType === VolumeType.SEGMENTATION.\n   */\n  getMeshSource: (chunkManager: ChunkManager) => MeshSource | null;\n}\n\n/**\n * Helper for rendering a SliceView that has been pre-rendered to a texture.\n */\nexport class SliceViewRenderHelper extends RefCounted {\n  private copyVertexPositionsBuffer = this.registerDisposer(Buffer.fromData(\n      this.gl, new Float32Array([\n        -1, -1, 0, 1,  //\n        -1, +1, 0, 1,  //\n        +1, +1, 0, 1,  //\n        +1, -1, 0, 1,  //\n      ]),\n      this.gl.ARRAY_BUFFER, this.gl.STATIC_DRAW));\n  private copyTexCoordsBuffer = this.registerDisposer(Buffer.fromData(\n      this.gl, new Float32Array([\n        0, 0,  //\n        0, 1,  //\n        1, 1,  //\n        1, 0,  //\n      ]),\n      this.gl.ARRAY_BUFFER, this.gl.STATIC_DRAW));\n  private shader: ShaderProgram;\n\n  private textureCoordinateAdjustment = new Float32Array(4);\n\n  constructor(public gl: GL, emitter: ShaderModule) {\n    super();\n    let builder = new ShaderBuilder(gl);\n    builder.addVarying('vec2', 'vTexCoord');\n    builder.addUniform('sampler2D', 'uSampler');\n    builder.addInitializer(shader => { gl.uniform1i(shader.uniform('uSampler'), 0); });\n    builder.addUniform('vec4', 'uColorFactor');\n    builder.addUniform('vec4', 'uBackgroundColor');\n    builder.addUniform('mat4', 'uProjectionMatrix');\n    builder.addUniform('vec4', 'uTextureCoordinateAdjustment');\n    builder.require(emitter);\n    builder.setFragmentMain(`\nvec4 sampledColor = texture2D(uSampler, vTexCoord);\nif (sampledColor.a == 0.0) {\n  sampledColor = uBackgroundColor;\n}\nemit(sampledColor * uColorFactor, vec4(0,0,0,0));\n`);\n    builder.addAttribute('vec4', 'aVertexPosition');\n    builder.addAttribute('vec2', 'aTexCoord');\n    builder.setVertexMain(`\nvTexCoord = uTextureCoordinateAdjustment.xy + aTexCoord * uTextureCoordinateAdjustment.zw;\ngl_Position = uProjectionMatrix * aVertexPosition;\n`);\n    this.shader = this.registerDisposer(builder.build());\n  }\n\n  draw(\n      texture: WebGLTexture, projectionMatrix: Mat4, colorFactor: Vec4, backgroundColor: Vec4,\n      xStart: number, yStart: number, xEnd: number, yEnd: number) {\n    let {gl, shader, textureCoordinateAdjustment} = this;\n    textureCoordinateAdjustment[0] = xStart;\n    textureCoordinateAdjustment[1] = yStart;\n    textureCoordinateAdjustment[2] = xEnd - xStart;\n    textureCoordinateAdjustment[3] = yEnd - yStart;\n    shader.bind();\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniformMatrix4fv(shader.uniform('uProjectionMatrix'), false, projectionMatrix);\n    gl.uniform4fv(shader.uniform('uColorFactor'), colorFactor);\n    gl.uniform4fv(shader.uniform('uBackgroundColor'), backgroundColor);\n    gl.uniform4fv(shader.uniform('uTextureCoordinateAdjustment'), textureCoordinateAdjustment);\n\n    let aVertexPosition = shader.attribute('aVertexPosition');\n    this.copyVertexPositionsBuffer.bindToVertexAttrib(aVertexPosition, 4);\n\n    let aTexCoord = shader.attribute('aTexCoord');\n    this.copyTexCoordsBuffer.bindToVertexAttrib(aTexCoord, 2);\n\n    gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n\n    gl.disableVertexAttribArray(aVertexPosition);\n    gl.disableVertexAttribArray(aTexCoord);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  static get(gl: GL, key: string, emitter: ShaderModule) {\n    return gl.memoize.get(key, () => { return new SliceViewRenderHelper(gl, emitter); });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport enum ChunkState {\n  // Chunk is stored in GPU memory in addition to system memory.\n  GPU_MEMORY = 0,\n  // Chunk is stored only in system memory but not in GPU memory.\n  SYSTEM_MEMORY = 1,\n\n  // Chunk is stored in system memory on worker.\n  SYSTEM_MEMORY_WORKER = 2,\n\n  // Chunk is downloading.\n  DOWNLOADING = 3,\n  // Chunk is not yet downloading.\n  QUEUED = 4,\n\n  // Chunk has just been added.\n  NEW = 5,\n\n  // Download failed.\n  FAILED = 6,\n\n  EXPIRED = 7\n};\n\nexport enum ChunkPriorityTier {\n  FIRST_TIER = 0,\n  FIRST_ORDERED_TIER = 0,\n  VISIBLE = 0,\n  PREFETCH = 1,\n  LAST_ORDERED_TIER = 1,\n  RECENT = 2,\n  LAST_TIER = 2\n};\n\nexport class AvailableCapacity {\n  availableItems: number;\n  itemCapacity: number;\n  availableSize: number;\n  sizeCapacity: number;\n\n  constructor(maxItems: number, maxSize: number) {\n    /**\n     * Number of additional items that are available.\n     */\n    this.availableItems = maxItems;\n\n    /**\n     * Total number of items that can be accomodated.\n     */\n    this.itemCapacity = maxItems;\n\n    /**\n     * Aggregate additional size capacity that is available.\n     */\n    this.availableSize = maxSize;\n\n    /**\n     * Total aggregate item size that can be accomodated.\n     */\n    this.sizeCapacity = maxSize;\n  }\n\n  /**\n   * Adjust available capacity by the specified amounts.\n   */\n  adjust(items: number, size: number) {\n    this.availableItems += items;\n    this.availableSize += size;\n  }\n\n  toString() { return `${this.availableItems}/${this.itemCapacity} items, ${this.availableSize}/${this.sizeCapacity} size`; }\n\n  toObject() {\n    return {'itemCapacity': this.itemCapacity, 'sizeCapacity': this.sizeCapacity};\n  }\n\n  static fromObject(x: any) {\n    return new AvailableCapacity(x['itemCapacity'], x['sizeCapacity']);\n  }\n\n  static INFINITE = new AvailableCapacity(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/chunk_manager/base.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChunkState, AvailableCapacity} from 'neuroglancer/chunk_manager/base';\nimport {RPC, registerRPC, SharedObject} from 'neuroglancer/worker_rpc';\nimport {Signal} from 'signals';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {Memoize} from 'neuroglancer/util/memoize';\n\nconst DEBUG_CHUNK_UPDATES = false;\n\nexport abstract class Chunk {\n  state = ChunkState.SYSTEM_MEMORY;\n  constructor(public source: ChunkSource) {}\n\n  get gl() { return this.source.gl; }\n\n  copyToGPU(gl: GL) { this.state = ChunkState.GPU_MEMORY; }\n\n  freeGPUMemory(gl: GL) { this.state = ChunkState.SYSTEM_MEMORY; }\n};\n\ninterface ChunkConstructor {\n  new (source: ChunkSource, update: any): Chunk;\n}\n\nexport class ChunkQueueManager extends SharedObject {\n  visibleChunksChanged = new Signal();\n  pendingChunkUpdates: any = null;\n  pendingChunkUpdatesTail: any = null;\n\n  /**\n   * If non-null, deadline in milliseconds since epoch after which\n   * chunk copies to the GPU may not start (until the next frame).\n   */\n  chunkUpdateDeadline: number = null;\n\n  chunkUpdateDelay: number = 30;\n\n  constructor(rpc: RPC, public gl: GL, capacities: {\n    gpuMemory: AvailableCapacity,\n    systemMemory: AvailableCapacity,\n    download: AvailableCapacity\n  }) {\n    super();\n    this.initializeCounterpart(rpc, {\n      'type': 'ChunkQueueManager',\n      'gpuMemoryCapacity': capacities.gpuMemory.toObject(),\n      'systemMemoryCapacity': capacities.systemMemory.toObject(),\n      'downloadCapacity': capacities.download.toObject()\n    });\n  }\n\n  scheduleChunkUpdate() {\n    let deadline = this.chunkUpdateDeadline;\n    let delay: number;\n    if (deadline === null || Date.now() < deadline) {\n      delay = 0;\n    } else {\n      delay = this.chunkUpdateDelay;\n    }\n    setTimeout(this.processPendingChunkUpdates.bind(this), delay);\n  }\n  processPendingChunkUpdates() {\n    let deadline = this.chunkUpdateDeadline;\n    if (deadline !== null && Date.now() > deadline) {\n      // No time to perform chunk update now, we will wait some more.\n      setTimeout(\n          this.processPendingChunkUpdates.bind(this), this.chunkUpdateDelay);\n      return;\n    }\n    let update = this.pendingChunkUpdates;\n    let {rpc} = this;\n    let source = rpc.get(update['source']);\n    if (DEBUG_CHUNK_UPDATES) {\n      console.log(\n          `${Date.now()} Chunk.update processed: ${source.rpcId} ${update['id']} ${update['state']}`);\n    }\n    let newState: number = update['state'];\n    if (newState === ChunkState.EXPIRED) {\n      // FIXME: maybe use freeList for chunks here\n      source.deleteChunk(update['id']);\n    } else {\n      let chunk: Chunk;\n      let key = update['id'];\n      if (update['new']) {\n        chunk = source.getChunk(update);\n        source.addChunk(key, chunk);\n      } else {\n        chunk = source.chunks.get(key);\n      }\n      let oldState = chunk.state;\n      if (newState !== oldState) {\n        switch (newState) {\n          case ChunkState.GPU_MEMORY:\n            // console.log(\"Copying to GPU\", chunk);\n            chunk.copyToGPU(this.gl);\n            this.visibleChunksChanged.dispatch();\n            break;\n          case ChunkState.SYSTEM_MEMORY:\n            chunk.freeGPUMemory(this.gl);\n            break;\n          default:\n            throw new Error(\n                `INTERNAL ERROR: Invalid chunk state: ${ChunkState[newState]}`);\n        }\n      }\n    }\n    let nextUpdate = this.pendingChunkUpdates = update.nextUpdate;\n    if (nextUpdate != null) {\n      this.scheduleChunkUpdate();\n    } else {\n      this.pendingChunkUpdatesTail = null;\n    }\n  }\n};\n\nregisterRPC('Chunk.update', function(x) {\n  let source = this.get(x['source']);\n  if (DEBUG_CHUNK_UPDATES) {\n    console.log(\n        `${Date.now()} Chunk.update received: ${source.rpcId} ${x['id']} ${x['state']} with chunkDataSize ${x['chunkDataSize']}`);\n  }\n  let queueManager = source.chunkManager.chunkQueueManager;\n  let pendingTail = queueManager.pendingChunkUpdatesTail;\n  if (pendingTail == null) {\n    queueManager.pendingChunkUpdates = x;\n    queueManager.pendingChunkUpdatesTail = x;\n    queueManager.scheduleChunkUpdate();\n  } else {\n    pendingTail.nextUpdate = x;\n    queueManager.pendingChunkUpdatesTail = x;\n  }\n});\n\nexport class ChunkManager extends SharedObject {\n  chunkSourceCache: Map<any, Memoize<string, ChunkSource>> = new Map<any, Memoize<string, ChunkSource>>();\n\n  constructor(public chunkQueueManager: ChunkQueueManager) {\n    super();\n    this.registerDisposer(chunkQueueManager.addRef());\n    this.initializeCounterpart(\n        chunkQueueManager.rpc,\n        {'type': 'ChunkManager', 'chunkQueueManager': chunkQueueManager.rpcId});\n  }\n\n  getChunkSource<T extends ChunkSource> (constructor: any, key: string, getter: () => T) {\n    let {chunkSourceCache} = this;\n    let sources = chunkSourceCache.get(constructor);\n    if (sources === undefined) {\n      sources = new Memoize<string, ChunkSource>();\n      chunkSourceCache.set(constructor, sources);\n    }\n    return sources.get(key, getter);\n  }\n};\n\nexport abstract class ChunkSource extends SharedObject {\n  chunks = new Map<string, Chunk>();\n  backendOnly: boolean;\n  constructor(public chunkManager: ChunkManager) {\n    super();\n    this.registerDisposer(chunkManager.addRef());\n  }\n\n  initializeCounterpart(rpc: RPC, options: any) {\n    options['chunkManager'] = this.chunkManager.rpcId;\n    super.initializeCounterpart(rpc, options);\n  }\n\n  get gl() { return this.chunkManager.chunkQueueManager.gl; }\n\n  deleteChunk(key: string) { this.chunks.delete(key); }\n\n  addChunk(key: string, chunk: Chunk) { this.chunks.set(key, chunk); }\n\n  /**\n   * Default implementation for use with backendOnly chunk sources.\n   */\n  getChunk(x: any): Chunk { return null; }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/chunk_manager/frontend.ts\n **/","/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */\n/*global define:false, require:false, exports:false, module:false, signals:false */\n\n/** @license\n * JS Signals <http://millermedeiros.github.com/js-signals/>\n * Released under the MIT license\n * Author: Miller Medeiros\n * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n */\n\n(function(global){\n\n    // SignalBinding -------------------------------------------------\n    //================================================================\n\n    /**\n     * Object that represents a binding between a Signal and a listener function.\n     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n     * @author Miller Medeiros\n     * @constructor\n     * @internal\n     * @name SignalBinding\n     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n     * @param {Function} listener Handler function bound to the signal.\n     * @param {boolean} isOnce If binding should be executed just once.\n     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n     */\n    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n\n        /**\n         * Handler function bound to the signal.\n         * @type Function\n         * @private\n         */\n        this._listener = listener;\n\n        /**\n         * If binding should be executed just once.\n         * @type boolean\n         * @private\n         */\n        this._isOnce = isOnce;\n\n        /**\n         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @memberOf SignalBinding.prototype\n         * @name context\n         * @type Object|undefined|null\n         */\n        this.context = listenerContext;\n\n        /**\n         * Reference to Signal object that listener is currently bound to.\n         * @type Signal\n         * @private\n         */\n        this._signal = signal;\n\n        /**\n         * Listener priority\n         * @type Number\n         * @private\n         */\n        this._priority = priority || 0;\n    }\n\n    SignalBinding.prototype = {\n\n        /**\n         * If binding is active and should be executed.\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n         * @type Array|null\n         */\n        params : null,\n\n        /**\n         * Call listener passing arbitrary parameters.\n         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n         * @return {*} Value returned by the listener.\n         */\n        execute : function (paramsArr) {\n            var handlerReturn, params;\n            if (this.active && !!this._listener) {\n                params = this.params? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n                if (this._isOnce) {\n                    this.detach();\n                }\n            }\n            return handlerReturn;\n        },\n\n        /**\n         * Detach binding from signal.\n         * - alias to: mySignal.remove(myBinding.getListener());\n         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n         */\n        detach : function () {\n            return this.isBound()? this._signal.remove(this._listener, this.context) : null;\n        },\n\n        /**\n         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n         */\n        isBound : function () {\n            return (!!this._signal && !!this._listener);\n        },\n\n        /**\n         * @return {boolean} If SignalBinding will only be executed once.\n         */\n        isOnce : function () {\n            return this._isOnce;\n        },\n\n        /**\n         * @return {Function} Handler function bound to the signal.\n         */\n        getListener : function () {\n            return this._listener;\n        },\n\n        /**\n         * @return {Signal} Signal that listener is currently bound to.\n         */\n        getSignal : function () {\n            return this._signal;\n        },\n\n        /**\n         * Delete instance properties\n         * @private\n         */\n        _destroy : function () {\n            delete this._signal;\n            delete this._listener;\n            delete this.context;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n        }\n\n    };\n\n\n/*global SignalBinding:false*/\n\n    // Signal --------------------------------------------------------\n    //================================================================\n\n    function validateListener(listener, fnName) {\n        if (typeof listener !== 'function') {\n            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );\n        }\n    }\n\n    /**\n     * Custom event broadcaster\n     * <br />- inspired by Robert Penner's AS3 Signals.\n     * @name Signal\n     * @author Miller Medeiros\n     * @constructor\n     */\n    function Signal() {\n        /**\n         * @type Array.<SignalBinding>\n         * @private\n         */\n        this._bindings = [];\n        this._prevParams = null;\n\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n        this.dispatch = function(){\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n    }\n\n    Signal.prototype = {\n\n        /**\n         * Signals Version Number\n         * @type String\n         * @const\n         */\n        VERSION : '1.0.0',\n\n        /**\n         * If Signal should keep record of previously dispatched parameters and\n         * automatically execute listener during `add()`/`addOnce()` if Signal was\n         * already dispatched before.\n         * @type boolean\n         */\n        memorize : false,\n\n        /**\n         * @type boolean\n         * @private\n         */\n        _shouldPropagate : true,\n\n        /**\n         * If Signal is active and should broadcast events.\n         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * @param {Function} listener\n         * @param {boolean} isOnce\n         * @param {Object} [listenerContext]\n         * @param {Number} [priority]\n         * @return {SignalBinding}\n         * @private\n         */\n        _registerListener : function (listener, isOnce, listenerContext, priority) {\n\n            var prevIndex = this._indexOfListener(listener, listenerContext),\n                binding;\n\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n                if (binding.isOnce() !== isOnce) {\n                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');\n                }\n            } else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n\n            if(this.memorize && this._prevParams){\n                binding.execute(this._prevParams);\n            }\n\n            return binding;\n        },\n\n        /**\n         * @param {SignalBinding} binding\n         * @private\n         */\n        _addBinding : function (binding) {\n            //simplified insertion sort\n            var n = this._bindings.length;\n            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n            this._bindings.splice(n + 1, 0, binding);\n        },\n\n        /**\n         * @param {Function} listener\n         * @return {number}\n         * @private\n         */\n        _indexOfListener : function (listener, context) {\n            var n = this._bindings.length,\n                cur;\n            while (n--) {\n                cur = this._bindings[n];\n                if (cur._listener === listener && cur.context === context) {\n                    return n;\n                }\n            }\n            return -1;\n        },\n\n        /**\n         * Check if listener was attached to Signal.\n         * @param {Function} listener\n         * @param {Object} [context]\n         * @return {boolean} if Signal has the specified listener.\n         */\n        has : function (listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n\n        /**\n         * Add a listener to the signal.\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        add : function (listener, listenerContext, priority) {\n            validateListener(listener, 'add');\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n\n        /**\n         * Add listener to the signal that should be removed after first execution (will be executed only once).\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        addOnce : function (listener, listenerContext, priority) {\n            validateListener(listener, 'addOnce');\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n\n        /**\n         * Remove a single listener from the dispatch queue.\n         * @param {Function} listener Handler function that should be removed.\n         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n         * @return {Function} Listener handler function.\n         */\n        remove : function (listener, context) {\n            validateListener(listener, 'remove');\n\n            var i = this._indexOfListener(listener, context);\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n            return listener;\n        },\n\n        /**\n         * Remove all listeners from the Signal.\n         */\n        removeAll : function () {\n            var n = this._bindings.length;\n            while (n--) {\n                this._bindings[n]._destroy();\n            }\n            this._bindings.length = 0;\n        },\n\n        /**\n         * @return {number} Number of listeners attached to the Signal.\n         */\n        getNumListeners : function () {\n            return this._bindings.length;\n        },\n\n        /**\n         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n         * @see Signal.prototype.disable\n         */\n        halt : function () {\n            this._shouldPropagate = false;\n        },\n\n        /**\n         * Dispatch/Broadcast Signal to all listeners added to the queue.\n         * @param {...*} [params] Parameters that should be passed to each handler.\n         */\n        dispatch : function (params) {\n            if (! this.active) {\n                return;\n            }\n\n            var paramsArr = Array.prototype.slice.call(arguments),\n                n = this._bindings.length,\n                bindings;\n\n            if (this.memorize) {\n                this._prevParams = paramsArr;\n            }\n\n            if (! n) {\n                //should come after memorize\n                return;\n            }\n\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n\n        /**\n         * Forget memorized arguments.\n         * @see Signal.memorize\n         */\n        forget : function(){\n            this._prevParams = null;\n        },\n\n        /**\n         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n         */\n        dispose : function () {\n            this.removeAll();\n            delete this._bindings;\n            delete this._prevParams;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n        }\n\n    };\n\n\n    // Namespace -----------------------------------------------------\n    //================================================================\n\n    /**\n     * Signals namespace\n     * @namespace\n     * @name signals\n     */\n    var signals = Signal;\n\n    /**\n     * Custom event broadcaster\n     * @see Signal\n     */\n    // alias for backwards compatibility (see #gh-44)\n    signals.Signal = Signal;\n\n\n\n    //exports to multiple environments\n    if(typeof define === 'function' && define.amd){ //AMD\n        define(function () { return signals; });\n    } else if (typeof module !== 'undefined' && module.exports){ //node\n        module.exports = signals;\n    } else { //browser\n        //use string because of Google closure compiler ADVANCED_MODE\n        /*jslint sub:true */\n        global['signals'] = signals;\n    }\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/signals/dist/signals.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\n\nexport class Memoize<Key, Value extends RefCounted> {\n  private map = new Map<Key, Value>();\n  get<T extends Value>(key: Key, getter: () => T): T {\n    let {map} = this;\n    let obj = <T>map.get(key);\n    if (obj === undefined) {\n      obj = getter();\n      obj.registerDisposer(() => { map.delete(key); });\n      map.set(key, obj);\n    } else {\n      obj.addRef();\n    }\n    return obj;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/memoize.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// We use the approach described in the following paper to determine the intersection between the\n// viewport plane and a given 3-D chunk inside of a WebGL vertex shader:\n//\n// A Vertex Program for Efficient Box-Plane Intersection\n// Christof Rezk Salama and Adreas Kolb\n// VMV 2005.\n// http://www.cg.informatik.uni-siegen.de/data/Publications/2005/rezksalamaVMV2005.pdf\n\nimport {Buffer} from 'neuroglancer/webgl/buffer';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {ShaderBuilder, ShaderProgram} from 'neuroglancer/webgl/shader';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {vec3, vec4, Vec3, Mat4, BoundingBox} from 'neuroglancer/util/geom';\nimport {RenderLayer as GenericRenderLayer} from 'neuroglancer/layer';\nimport {ChunkState} from 'neuroglancer/chunk_manager/base';\nimport {ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {SliceView, VolumeChunkSource, MultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {Signal} from 'signals';\nimport {RpcId, SharedObject} from 'neuroglancer/worker_rpc';\n\nconst DEBUG_VERTICES = false;\n\nclass SliceViewShaderBuffers extends RefCounted {\n  outputVertexIndices: Buffer;\n  vertexBasePositions: number[];\n  vertexIndices: Int32Array;\n  constructor(gl: GL) {\n    super();\n    this.outputVertexIndices = this.registerDisposer(\n        Buffer.fromData(gl, new Float32Array([0, 1, 2, 3, 4, 5]), gl.ARRAY_BUFFER, gl.STATIC_DRAW));\n\n    // This specifies the original, \"uncorrected\" vertex positions.\n    // var vertexBasePositions = [\n    //   0, 0, 0,\n    //   1, 0, 0,\n    //   0, 1, 0,\n    //   0, 0, 1,\n    //   1, 0, 1,\n    //   1, 1, 0,\n    //   0, 1, 1,\n    //   1, 1, 1,\n    // ];\n\n    // This specifies the \"corrected\" vertex positions.\n    this.vertexBasePositions = [\n      0, 0, 0,  //\n      1, 0, 0,  //\n      0, 1, 0,  //\n      1, 1, 0,  //\n      0, 0, 1,  //\n      1, 0, 1,  //\n      0, 1, 1,  //\n      1, 1, 1,  //\n    ];\n\n    // correct_index, vertex_position, uncorrected_index\n    // 0:  0, 0, 0   0\n    // 1:  1, 0, 0   1\n    // 2:  0, 1, 0   2\n    // 4:  0, 0, 1   3\n    // 5:  1, 0, 1   4\n    // 3:  1, 1, 0   5\n    // 6:  0, 1, 1   6\n    // 7:  1, 1, 1   7\n\n    // This maps uncorrected vertex indices to corrected vertex indices.\n    let vertexUncorrectedToCorrected = [0, 1, 2, 4, 5, 3, 6, 7];\n\n    // This maps corrected vertex indices to uncorrected vertex indices.\n    let vertexCorrectedToUncorrected = [0, 1, 2, 5, 3, 4, 6, 7];\n\n\n    // Page 666\n    let vertexBaseIndices = [\n      0, 1, 1, 4, 4, 7, 4, 7,  //\n      1, 5, 0, 1, 1, 4, 4, 7,  //\n      0, 2, 2, 5, 5, 7, 5, 7,  //\n      2, 6, 0, 2, 2, 5, 5, 7,  //\n      0, 3, 3, 6, 6, 7, 6, 7,  //\n      3, 4, 0, 3, 3, 6, 6, 7,  //\n    ];\n\n    // Determined by looking at the figure and determining the corresponding\n    // vertex order for each possible front vertex.\n    let vertexPermutation = [\n      0, 1, 2, 3, 4, 5, 6, 7,  //\n      1, 4, 5, 0, 3, 7, 2, 6,  //\n      2, 6, 0, 5, 7, 3, 1, 4,  //\n      3, 0, 6, 4, 1, 2, 7, 5,  //\n      4, 3, 7, 1, 0, 6, 5, 2,  //\n      5, 2, 1, 7, 6, 0, 4, 3,  //\n      6, 7, 3, 2, 5, 4, 0, 1,  //\n      7, 5, 4, 6, 2, 1, 3, 0,  //\n    ];\n\n    let vertexIndices: number[] = [];\n    for (var p = 0; p < 8; ++p) {\n      for (var i = 0; i < vertexBaseIndices.length; ++i) {\n        vertexIndices.push(\n            vertexUncorrectedToCorrected\n                [vertexPermutation[vertexCorrectedToUncorrected[p] * 8 + vertexBaseIndices[i]]]);\n      }\n    }\n\n    this.vertexIndices = new Int32Array(vertexIndices);\n  }\n\n  static get(gl: GL) {\n    return gl.memoize.get('SliceViewShaderBuffers', () => new SliceViewShaderBuffers(gl));\n  }\n};\n\nfunction findFrontVertexIndex(planeNormal: Vec3) {\n  // Determine which vertex is front.\n  let frontVertexIndex = 0;\n  for (var axis_i = 0; axis_i < 3; ++axis_i) {\n    // If plane normal is negative in axis direction, then choose the vertex\n    // with the maximum axis_i-coordinate.\n    if (planeNormal[axis_i] < 0) {\n      frontVertexIndex += (1 << axis_i);\n    }\n  }\n  return frontVertexIndex;\n}\n\nclass VolumeSliceVertexComputationManager extends RefCounted {\n  data: SliceViewShaderBuffers;\n  static get(gl: GL) {\n    return gl.memoize.get(\n        'sliceview.VolumeSliceVertexComputationManager',\n        () => new VolumeSliceVertexComputationManager(gl));\n  }\n  constructor(gl: GL) {\n    super();\n    this.data = this.registerDisposer(SliceViewShaderBuffers.get(gl));\n  }\n\n  defineShader(builder: ShaderBuilder) {\n    let data = this.data;\n\n    // A number in [0, 6) specifying which vertex to compute.\n    builder.addAttribute('highp float', 'aVertexIndexFloat');\n\n    // Specifies translation of the current chunk.\n    builder.addUniform('highp vec3', 'uTranslation');\n\n    // Matrix by which computed vertices will be transformed.\n    builder.addUniform('highp mat4', 'uProjectionMatrix');\n\n    // Slice plane normal.\n    builder.addUniform('highp vec3', 'uPlaneNormal');\n\n    // Distance from the origin to the slice plane.\n    builder.addUniform('highp float', 'uPlaneDistance');\n\n    // Two-dimensional array of dimensions [6x4], specifying the first and\n    // second vertex index for each of the 4 candidate edges to test for each\n    // computed vertex.\n    builder.addUniform('highp ivec2', 'uVertexIndex', 24);\n\n    // Base vertex positions.\n    builder.addUniform('highp vec3', 'uVertexBasePosition', 8);\n    builder.addInitializer(shader => {\n      shader.gl.uniform3fv(\n          shader.uniform('uVertexBasePosition'), new Float32Array(data.vertexBasePositions));\n    });\n\n    // Chunk size.\n    builder.addUniform('highp vec3', 'uChunkSize');\n    // Position within chunk of vertex.\n    builder.addVarying('highp vec3', 'vChunkPosition');\n    // varying highp vec2 vTexCoord;\n\n    builder.setVertexMain(`\nint vertexIndex = int(aVertexIndexFloat);\nfor (int e = 0; e < 4; ++e) {\n  highp ivec2 vidx = uVertexIndex[vertexIndex*4 + e];\n  highp vec3 v1 = uChunkSize * uVertexBasePosition[vidx.x];\n  highp vec3 v2 = uChunkSize * uVertexBasePosition[vidx.y];\n  highp vec3 vStart = v1 + uTranslation;\n  highp vec3 vDir = v2 - v1;\n  highp float denom = dot(vDir, uPlaneNormal);\n  if (abs(denom) > 1e-6) {\n    highp float lambda = (uPlaneDistance - dot(vStart, uPlaneNormal)) / denom;\n    if ((lambda >= 0.0) && (lambda <= 1.0)) {\n      highp vec3 position = vStart + lambda * vDir;\n      gl_Position = uProjectionMatrix * vec4(position, 1.0);\n      vChunkPosition = mix(uVertexBasePosition[vidx.x], uVertexBasePosition[vidx.y], lambda);\n      break;\n    }\n  }\n}\n`);\n  }\n\n  computeVerticesDebug(\n      uChunkSize: Vec3, uPlaneDistance: number, uPlaneNormal: Vec3, uTranslation: Vec3,\n      uProjectionMatrix: Mat4) {\n    let frontVertexIndex = findFrontVertexIndex(uPlaneNormal);\n    let uVertexIndex =\n        this.data.vertexIndices.subarray(frontVertexIndex * 48, (frontVertexIndex + 1) * 48);\n    let vidx = [0, 0];\n    let v = [vec3.create(), vec3.create()];\n    let vStart = vec3.create(), vDir = vec3.create(), position = vec3.create(),\n        gl_Position = vec3.create(), vChunkPosition = vec3.create();\n    let vertexBasePositions = new Float32Array(this.data.vertexBasePositions);\n    let uVertexBasePosition = (i: number) => vertexBasePositions.subarray(i * 3, i * 3 + 3);\n    for (let vertexIndex = 0; vertexIndex < 6; ++vertexIndex) {\n      for (let e = 0; e < 4; ++e) {\n        for (let j = 0; j < 2; ++j) {\n          vidx[j] = uVertexIndex[2 * (vertexIndex * 4 + e) + j];\n          vec3.multiply(v[j], uChunkSize, uVertexBasePosition(vidx[j]));\n        }\n        vec3.add(vStart, v[0], uTranslation);\n        vec3.subtract(vDir, v[1], v[0]);\n        let denom = vec3.dot(vDir, uPlaneNormal);\n        if (Math.abs(denom) > 1e-6) {\n          let lambda = (uPlaneDistance - vec3.dot(vStart, uPlaneNormal)) / denom;\n          if ((lambda >= 0.0) && (lambda <= 1.0)) {\n            vec3.scaleAndAdd(position, vStart, vDir, lambda);\n            vec3.transformMat4(\n                gl_Position, vec4.fromValues(position[0], position[1], position[2], 1.0),\n                uProjectionMatrix);\n            vec3.scale(vChunkPosition, uVertexBasePosition(vidx[0]), 1.0 - lambda);\n            vec3.scaleAndAdd(vChunkPosition, vChunkPosition, uVertexBasePosition(vidx[1]), lambda);\n            console.log(\n                `vertex ${vertexIndex} at ${gl_Position}, vChunkPosition = ${vChunkPosition}, edge dir = ${vDir}, denom = ${denom}`);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  beginSlice(gl: GL, shader: ShaderProgram, dataToDeviceMatrix: Mat4, sliceView: SliceView) {\n    let planeNormal = sliceView.viewportAxes[2];\n\n    let frontVertexIndex = findFrontVertexIndex(planeNormal);\n    gl.uniformMatrix4fv(shader.uniform('uProjectionMatrix'), false, dataToDeviceMatrix);\n    gl.uniform3fv(shader.uniform('uPlaneNormal'), planeNormal.subarray(0, 3));\n    gl.uniform1f(shader.uniform('uPlaneDistance'), sliceView.viewportPlaneDistanceToOrigin);\n\n    let aVertexIndexFloat = shader.attribute('aVertexIndexFloat');\n    this.data.outputVertexIndices.bindToVertexAttrib(aVertexIndexFloat, 1);\n\n    gl.uniform2iv(\n        shader.uniform('uVertexIndex'),\n        this.data.vertexIndices.subarray(frontVertexIndex * 48, (frontVertexIndex + 1) * 48));\n\n    if (DEBUG_VERTICES) {\n      (<any>window)['debug_sliceView'] = sliceView;\n      (<any>window)['debug_sliceView_dataToDevice'] = dataToDeviceMatrix;\n    }\n  }\n\n  endSlice(gl: GL, shader: ShaderProgram) {\n    let aVertexIndexFloat = shader.attribute('aVertexIndexFloat');\n    gl.disableVertexAttribArray(aVertexIndexFloat);\n  }\n\n  setupChunkSize(gl: GL, shader: ShaderProgram, chunkSize: Vec3) {\n    gl.uniform3fv(shader.uniform('uChunkSize'), chunkSize);\n\n    if (DEBUG_VERTICES) {\n      (<any>window)['debug_sliceView_chunkSize'] = chunkSize;\n    }\n  }\n\n  drawChunk(gl: GL, shader: ShaderProgram, chunkPosition: Vec3) {\n    gl.uniform3fv(shader.uniform('uTranslation'), chunkPosition);\n    gl.drawArrays(gl.TRIANGLE_FAN, 0, 6);\n\n    if (DEBUG_VERTICES) {\n      let sliceView: SliceView = (<any>window)['debug_sliceView'];\n      let chunkSize: Vec3 = (<any>window)['debug_sliceView_chunkSize'];\n      let dataToDeviceMatrix: Mat4 = (<any>window)['debug_sliceView_dataToDevice'];\n      this.computeVerticesDebug(\n          chunkSize, sliceView.viewportPlaneDistanceToOrigin, sliceView.viewportAxes[2],\n          chunkPosition, dataToDeviceMatrix);\n    }\n  }\n};\n\nexport class RenderLayer extends GenericRenderLayer {\n  sources: VolumeChunkSource[][] = null;\n  shader: ShaderProgram = null;\n  shaderUpdated = true;\n  redrawNeeded = new Signal();\n  voxelSize: Vec3 = null;\n  boundingBox: BoundingBox = null;\n  vertexComputationManager: VolumeSliceVertexComputationManager;\n  rpcId: RpcId = null;\n  constructor(\n      public chunkManager: ChunkManager,\n      multiscaleSourcePromise: Promise<MultiscaleVolumeChunkSource>) {\n    super();\n    let gl = this.gl;\n    this.vertexComputationManager = VolumeSliceVertexComputationManager.get(gl);\n\n    Promise.resolve(multiscaleSourcePromise).then(multiscaleSource => {\n      let sources = this.sources = multiscaleSource.getSources(chunkManager);\n      let sourceIds: number[][] = [];\n      for (let alternatives of sources) {\n        let alternativeIds: number[] = [];\n        sourceIds.push(alternativeIds);\n        for (let source of alternatives) {\n          alternativeIds.push(source.rpcId);\n        }\n      }\n      let sharedObject = this.registerDisposer(new SharedObject());\n      sharedObject.initializeCounterpart(\n          chunkManager.rpc, {'type': 'sliceview/RenderLayer', 'sources': sourceIds});\n      this.rpcId = sharedObject.rpcId;\n      let spec = this.sources[0][0].spec;\n      this.voxelSize = spec.voxelSize;\n      this.boundingBox = new BoundingBox(spec.lowerVoxelBound, spec.upperVoxelBound);\n      this.setReady(true);\n    });\n  }\n\n  get gl() { return this.chunkManager.chunkQueueManager.gl; }\n\n  get chunkFormat() { return this.sources[0][0].chunkFormat; }\n\n  initializeShader() {\n    if (!this.shaderUpdated) {\n      return;\n    }\n    this.shaderUpdated = false;\n    let newShader = this.getShader();\n    this.disposeShader();\n    this.shader = newShader;\n  }\n\n  disposeShader() {\n    if (this.shader) {\n      this.shader.dispose();\n      this.shader = null;\n    }\n  }\n\n  dispose() { this.disposeShader(); }\n\n  getValueAt(position: Vec3) {\n    for (let alternatives of this.sources) {\n      for (let source of alternatives) {\n        let result = source.getValueAt(position);\n        if (result != null) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  getShaderKey() { return ''; }\n\n  getShader() {\n    let key = this.getShaderKey() + '/' + this.chunkFormat.shaderKey;\n    return this.gl.memoize.get(key, () => this.buildShader());\n  }\n\n  buildShader() {\n    let builder = new ShaderBuilder(this.gl);\n    this.defineShader(builder);\n    return builder.build();\n  }\n\n  defineShader(builder: ShaderBuilder) {\n    this.vertexComputationManager.defineShader(builder);\n    builder.addFragmentCode(`\nvoid emit(vec4 color) {\n  gl_FragData[0] = color;\n}\n`);\n    this.chunkFormat.defineShader(builder);\n  }\n\n  beginSlice(sliceView: SliceView) {\n    let {dataToDevice} = sliceView;\n    let gl = this.gl;\n\n    let shader = this.shader;\n    shader.bind();\n    this.vertexComputationManager.beginSlice(gl, shader, dataToDevice, sliceView);\n    return shader;\n  }\n\n  endSlice(shader: ShaderProgram) {\n    let gl = this.gl;\n    this.vertexComputationManager.endSlice(gl, shader);\n  }\n\n  draw(sliceView: SliceView) {\n    let visibleSources = sliceView.visibleLayers.get(this);\n    if (visibleSources.length === 0) {\n      return;\n    }\n\n    this.initializeShader();\n\n    let gl = this.gl;\n\n    let chunkPosition = vec3.create();\n    let chunkSize = vec3.create();\n    let shader = this.beginSlice(sliceView);\n    let vertexComputationManager = this.vertexComputationManager;\n\n    // All sources are required to have the same texture format.\n    let chunkFormat = this.chunkFormat;\n    chunkFormat.beginDrawing(gl, shader);\n\n    for (let source of visibleSources) {\n      let chunkLayout = source.spec.chunkLayout;\n      let {offset} = chunkLayout;\n\n      let chunks = source.chunks;\n\n      let originalChunkSize = chunkLayout.size;\n\n      let chunkDataSize: Vec3 = null;\n      let visibleChunks = sliceView.visibleChunks.get(chunkLayout);\n      if (!visibleChunks) {\n        continue;\n      }\n\n      let setChunkDataSize = (newChunkDataSize: Vec3) => {\n        vec3.multiply(chunkSize, newChunkDataSize, source.spec.voxelSize);\n        chunkDataSize = newChunkDataSize;\n        vertexComputationManager.setupChunkSize(gl, shader, chunkSize);\n      };\n\n      for (let key of visibleChunks) {\n        let chunk = chunks.get(key);\n        if (chunk && chunk.state === ChunkState.GPU_MEMORY) {\n          let newChunkDataSize = chunk.chunkDataSize;\n          if (newChunkDataSize !== chunkDataSize) {\n            setChunkDataSize(newChunkDataSize);\n          }\n\n          vec3.multiply(chunkPosition, originalChunkSize, chunk.chunkGridPosition);\n          vec3.add(chunkPosition, chunkPosition, offset);\n          chunkFormat.bindChunk(gl, shader, chunk);\n          vertexComputationManager.drawChunk(gl, shader, chunkPosition);\n        }\n      }\n    }\n    chunkFormat.endDrawing(gl, shader);\n    this.endSlice(shader);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/renderlayer.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Disposable} from 'neuroglancer/util/disposable';\nimport {AttributeIndex} from 'neuroglancer/webgl/shader';\n\nexport type BufferType = number;\nexport type WebGLDataType = number;\nexport type WebGLBufferUsage = number;\nexport class Buffer implements Disposable {\n  buffer: WebGLBuffer;\n  constructor(public gl: WebGLRenderingContext, public bufferType?: BufferType) {\n    this.gl = gl;\n    this.buffer = gl.createBuffer();\n    if (this.bufferType === undefined) {\n      this.bufferType = gl.ARRAY_BUFFER;\n    }\n  }\n\n  bind() { this.gl.bindBuffer(this.bufferType, this.buffer); }\n\n  bindToVertexAttrib(\n      location: AttributeIndex, componentsPerVertexAttribute: number,\n      attributeType: WebGLDataType = this.gl.FLOAT, normalized = false, stride = 0, offset = 0) {\n    this.bind();\n    this.gl.enableVertexAttribArray(location);\n    this.gl.vertexAttribPointer(\n        location, componentsPerVertexAttribute, attributeType, normalized, stride, offset);\n  }\n\n  setData(data: ArrayBufferView, usage?: WebGLBufferUsage) {\n    let gl = this.gl;\n    if (usage === undefined) {\n      usage = gl.STATIC_DRAW;\n    }\n    this.bind();\n    gl.bufferData(this.bufferType, data, usage);\n  }\n\n  dispose() {\n    this.gl.deleteBuffer(this.buffer);\n    this.buffer = null;\n    this.gl = null;\n  }\n\n  static fromData(\n      gl: WebGLRenderingContext, data: ArrayBufferView, bufferType?: BufferType,\n      usage?: WebGLBufferUsage) {\n    let buffer = new Buffer(gl, bufferType);\n    buffer.setData(data, usage);\n    return buffer;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/webgl/buffer.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\n\nexport function getShader(gl: WebGLRenderingContext, source: string, shaderType: number) {\n  var shader = gl.createShader(shaderType);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    let msg = gl.getShaderInfoLog(shader);\n    throw new Error('Error creating shader: ' + msg);\n  }\n\n  return shader;\n}\n\nexport type AttributeIndex = number;\n\nexport class ShaderProgram extends RefCounted {\n  program: WebGLProgram;\n  vertexShader: WebGLShader;\n  fragmentShader: WebGLShader;\n  attributes = new Map<string, AttributeIndex>();\n  uniforms = new Map<string, WebGLUniformLocation>();\n  textureUnits: Map<any, number> = null;\n\n  constructor(\n      public gl: WebGLRenderingContext, public vertexSource: string, public fragmentSource: string,\n      uniformNames?: string[], attributeNames?: string[]) {\n    super();\n    let vertexShader = this.vertexShader = getShader(gl, vertexSource, gl.VERTEX_SHADER);\n    let fragmentShader = this.fragmentShader = getShader(gl, fragmentSource, gl.FRAGMENT_SHADER);\n\n    // DEBUG\n    // {\n    //   let combinedSource = 'VERTEX SHADER\\n\\n' + vertexSource + '\\n\\n\\nFRAGMENT SHADER\\n\\n' +\n    //   fragmentSource + '\\n';\n    //   let w = window.open(\"about:blank\", \"_blank\");\n    //   w.document.write('<pre>' + combinedSource.replace('<', '&lt;').replace('>', '&gt;') +\n    //   '</pre>');\n    // }\n\n    let shaderProgram = this.program = gl.createProgram();\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n      let msg = gl.getProgramInfoLog(shaderProgram);\n      // console.log(msg);\n      // alert(\"Could not initialize shaders: \" + msg);\n      throw new Error('Could not initialize shaders: ' + msg);\n    }\n\n    let {uniforms, attributes} = this;\n    if (uniformNames) {\n      for (let name of uniformNames) {\n        uniforms.set(name, gl.getUniformLocation(shaderProgram, name));\n      }\n    }\n\n    if (attributeNames) {\n      for (let name of attributeNames) {\n        attributes.set(name, gl.getAttribLocation(shaderProgram, name));\n      }\n    }\n  }\n\n  uniform(name: string): WebGLUniformLocation { return this.uniforms.get(name); }\n\n  attribute(name: string): number { return this.attributes.get(name); }\n\n  textureUnit(symbol: Symbol): number { return this.textureUnits.get(symbol); }\n\n  bind() { this.gl.useProgram(this.program); }\n\n  disposed() {\n    let {gl} = this;\n    gl.deleteShader(this.vertexShader);\n    this.vertexShader = null;\n    gl.deleteShader(this.fragmentShader);\n    this.fragmentShader = null;\n    gl.deleteProgram(this.program);\n    this.program = null;\n    this.gl = null;\n    this.attributes = null;\n    this.uniforms = null;\n  }\n};\n\nexport type ShaderCodePart = string | ShaderCodePartArray | ShaderCodePartFunction;\ninterface ShaderCodePartFunction {\n  (): ShaderCodePart;\n}\ninterface ShaderCodePartArray extends Array<ShaderCodePart> {}\n\nexport class ShaderCode {\n  code = '';\n  parts = new Set<ShaderCodePart>();\n  constructor() {}\n\n  add(x: ShaderCodePart) {\n    if (this.parts.has(x)) {\n      return;\n    }\n    this.parts.add(x);\n    switch (typeof x) {\n      case 'string':\n        this.code += x;\n        break;\n      case 'function':\n        this.add((<ShaderCodePartFunction>x)());\n        break;\n      default:\n        if (Array.isArray(x)) {\n          for (let y of x) {\n            this.add(y);\n          }\n        } else {\n          throw new Error('Invalid code type');\n        }\n    }\n  }\n\n  toString(): string { return this.code; }\n};\n\nexport type ShaderInitializer = ((x: ShaderProgram) => void);\nexport type ShaderModule = ((x: ShaderBuilder) => void);\n\nexport class ShaderBuilder {\n  private nextSymbolID = 0;\n  private nextTextureUnit = 0;\n  private uniformsCode = '';\n  private attributesCode = '';\n  private varyingsCode = '';\n  private fragmentExtensionsSet = new Set<string>();\n  private fragmentExtensions = '';\n  private vertexCode = new ShaderCode();\n  private vertexMain = '';\n  private fragmentCode = new ShaderCode();\n  private fragmentMain = '';\n  private required = new Set<ShaderModule>();\n  private uniforms = new Array<string>();\n  private attributes = new Array<string>();\n  private initializers: Array<ShaderInitializer> = [];\n  private textureUnits = new Map<Symbol, number>();\n  constructor(public gl: WebGLRenderingContext) {}\n\n  allocateTextureUnit(symbol: Symbol, count: number = 1) {\n    if (this.textureUnits.has(symbol)) {\n      throw new Error('Duplicate texture unit symbol: ' + symbol);\n    }\n    let old = this.nextTextureUnit;\n    this.nextTextureUnit += count;\n    this.textureUnits.set(symbol, old);\n    return old;\n  }\n\n  addTextureSampler2D(name: string, symbol: Symbol, extent?: number) {\n    let textureUnit = this.allocateTextureUnit(symbol, extent);\n    this.addUniform('highp sampler2D', name, extent);\n    this.addInitializer(shader => {\n      if (extent) {\n        let textureUnits = new Int32Array(extent);\n        for (let i = 0; i < extent; ++i) {\n          textureUnits[i] = i + textureUnit;\n        }\n        shader.gl.uniform1iv(shader.uniform(name), textureUnits);\n      } else {\n        shader.gl.uniform1i(shader.uniform(name), textureUnit);\n      }\n    });\n    return textureUnit;\n  }\n\n  symbol(name: string) { return name + (this.nextSymbolID++); }\n\n  addAttribute(typeName: string, name: string) {\n    this.attributes.push(name);\n    this.attributesCode += `attribute ${typeName} ${name};\\n`;\n    return name;\n  }\n\n  addVarying(typeName: string, name: string) {\n    this.varyingsCode += `varying ${typeName} ${name};\\n`;\n  }\n\n  addUniform(typeName: string, name: string, extent?: number) {\n    this.uniforms.push(name);\n    if (extent != null) {\n      this.uniformsCode += `uniform ${typeName} ${name}[${extent}];\\n`;\n    } else {\n      this.uniformsCode += `uniform ${typeName} ${name};\\n`;\n    }\n    return name;\n  }\n\n  addFragmentExtension(name: string) {\n    if (this.fragmentExtensionsSet.has(name)) {\n      return;\n    }\n    this.fragmentExtensionsSet.add(name);\n    this.fragmentExtensions += `#extension ${name} : require\\n`;\n  }\n\n  addVertexCode(code: ShaderCodePart) { this.vertexCode.add(code); }\n\n  addFragmentCode(code: ShaderCodePart) { this.fragmentCode.add(code); }\n\n  setVertexMain(code: string) { this.vertexMain = code; }\n\n  setFragmentMain(code: string) { this.fragmentMain = code; }\n\n  addInitializer(f: ShaderInitializer) { this.initializers.push(f); }\n\n  require(f: ShaderModule): void {\n    if (this.required.has(f)) {\n      return;\n    }\n    this.required.add(f);\n    f(this);\n  }\n\n  build() {\n    let vertexSource = `\nprecision highp float;\n${this.uniformsCode}\n${this.attributesCode}\n${this.varyingsCode}\n${this.vertexCode}\nvoid main() {\n${this.vertexMain}\n}\n`;\n    let fragmentSource = `\n${this.fragmentExtensions}\nprecision highp float;\n${this.uniformsCode}\n${this.varyingsCode}\n${this.fragmentCode}\nvoid main() {\n${this.fragmentMain}\n}\n`;\n    let shader =\n        new ShaderProgram(this.gl, vertexSource, fragmentSource, this.uniforms, this.attributes);\n    shader.textureUnits = this.textureUnits;\n    let {initializers} = this;\n    if (initializers.length > 0) {\n      shader.bind();\n      for (let initializer of initializers) {\n        initializer(shader);\n      }\n    }\n    return shader;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/webgl/shader.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Signal} from 'signals';\nimport {Disposable, RefCounted} from 'neuroglancer/util/disposable';\nimport {Uint64} from 'neuroglancer/util/uint64';\nimport {SpatialPosition} from 'neuroglancer/navigation_state';\nimport {Vec3, vec3, BoundingBox} from 'neuroglancer/util/geom';\nimport {addSignalBinding, removeSignalBinding, SignalBindingUpdater} from 'neuroglancer/util/signal_binding_updater';\nimport * as throttle from 'lodash/throttle';\n\nexport class RenderLayer extends RefCounted {\n  ready = false;\n  layerChanged = new Signal();\n  readyStateChanged = new Signal();\n  setReady(value: boolean) {\n    this.ready = value;\n    this.readyStateChanged.dispatch();\n    this.layerChanged.dispatch();\n  }\n\n  handleAction(action: string) {\n    // Do nothing by default.\n  }\n\n  getValueAt(x: Float32Array): any { return undefined; }\n\n  voxelSize: Vec3 = null;\n  boundingBox: BoundingBox = null;\n};\n\nexport class UserLayer extends RefCounted {\n  layersChanged = new Signal();\n  readyStateChanged = new Signal();\n  specificationChanged = new Signal();\n  renderLayers = new Array<RenderLayer>();\n  constructor(renderLayers: RenderLayer[] = []) {\n    super();\n    renderLayers.forEach(this.addRenderLayer.bind(this));\n  }\n\n  addRenderLayer(layer: RenderLayer) {\n    this.renderLayers.push(layer);\n    let {layersChanged, readyStateChanged} = this;\n    this.registerDisposer(layer);\n    this.registerSignalBinding(layer.layerChanged.add(layersChanged.dispatch, layersChanged));\n    this.registerSignalBinding(\n      layer.readyStateChanged.add(readyStateChanged.dispatch, readyStateChanged));\n    layersChanged.dispatch();\n  }\n\n  getValueAt(position: Float32Array, pickedRenderLayer: RenderLayer, pickedObject: Uint64) {\n    let result: any;\n    let {renderLayers} = this;\n    if (renderLayers.indexOf(pickedRenderLayer) !== -1) {\n      return pickedObject;\n    }\n    for (let layer of renderLayers) {\n      if (!layer.ready) {\n        continue;\n      }\n      result = layer.getValueAt(position);\n      if (result !== undefined) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  toJSON (): any {\n    return null;\n  }\n\n  makeDropdown(element: HTMLDivElement): Disposable|null { return null; }\n\n  handleAction(action: string): void {}\n};\n\nexport class ManagedUserLayer extends RefCounted {\n  readyStateChanged = new Signal();\n  layerChanged = new Signal();\n  specificationChanged = new Signal();\n  wasDisposed = false;\n  private layer_: UserLayer = null;\n  get layer() { return this.layer_; }\n\n  private updateSignalBindings(layer: UserLayer, callback: SignalBindingUpdater) {\n    callback(layer.layersChanged, this.handleLayerChanged, this);\n    callback(layer.readyStateChanged, this.readyStateChanged.dispatch, this.readyStateChanged);\n    callback(layer.specificationChanged, this.specificationChanged.dispatch, this.specificationChanged);\n  }\n\n  set layer(layer: UserLayer) {\n    let oldLayer = this.layer_;\n    if (oldLayer != null) {\n      this.updateSignalBindings(oldLayer, removeSignalBinding);\n    }\n    this.layer_ = layer;\n    if (layer != null) {\n      this.updateSignalBindings(layer, addSignalBinding);\n      this.readyStateChanged.dispatch();\n      this.handleLayerChanged();\n    }\n  }\n  constructor(public name: string, layer: UserLayer = null, public visible: boolean = true) {\n    super();\n    this.layer = layer;\n  }\n  private handleLayerChanged() {\n    if (this.visible) {\n      this.layerChanged.dispatch();\n    }\n  }\n  setVisible(value: boolean) {\n    if (value !== this.visible) {\n      this.visible = value;\n      this.layerChanged.dispatch();\n    }\n  }\n\n  disposed () {\n    this.wasDisposed = true;\n  }\n};\n\nexport class LayerManager extends RefCounted {\n  managedLayers = new Array<ManagedUserLayer>();\n  layersChanged = new Signal();\n  readyStateChanged = new Signal();\n  specificationChanged = new Signal();\n  boundPositions = new WeakSet<SpatialPosition>();\n\n  private updateSignalBindings(layer: ManagedUserLayer, callback: SignalBindingUpdater) {\n    callback(layer.layerChanged, this.layersChanged.dispatch, this.layersChanged);\n    callback(layer.readyStateChanged, this.readyStateChanged.dispatch, this.readyStateChanged);\n    callback(layer.specificationChanged, this.specificationChanged.dispatch, this.specificationChanged);\n  }\n\n  /**\n   * Assumes ownership of an existing reference to managedLayer.\n   */\n  addManagedLayer(managedLayer: ManagedUserLayer) {\n    this.updateSignalBindings(managedLayer, addSignalBinding);\n    this.managedLayers.push(managedLayer);\n    this.layersChanged.dispatch();\n    return managedLayer;\n  }\n\n  /**\n   * Assumes ownership of an existing reference to userLayer.\n   */\n  addUserLayer(name: string, userLayer: UserLayer, visible: boolean) {\n    let managedLayer = new ManagedUserLayer(name, userLayer, visible);\n    return this.addManagedLayer(managedLayer);\n  }\n\n  * readyRenderLayers() {\n    for (let managedUserLayer of this.managedLayers) {\n      if (!managedUserLayer.visible || !managedUserLayer.layer) {\n        continue;\n      }\n      for (let renderLayer of managedUserLayer.layer.renderLayers) {\n        if (!renderLayer.ready) {\n          continue;\n        }\n        yield renderLayer;\n      }\n    }\n  }\n\n  unbindManagedLayer(managedLayer: ManagedUserLayer) {\n    this.updateSignalBindings(managedLayer, removeSignalBinding);\n    managedLayer.dispose();\n  }\n\n  clear () {\n    for (let managedLayer of this.managedLayers) {\n      this.unbindManagedLayer(managedLayer);\n    }\n    this.managedLayers.length = 0;\n    this.layersChanged.dispatch();\n  }\n\n  removeManagedLayer(managedLayer: ManagedUserLayer) {\n    let index = this.managedLayers.indexOf(managedLayer);\n    if (index === -1) {\n      throw new Error(`Internal error: invalid managed layer.`);\n    }\n    this.unbindManagedLayer(managedLayer);\n    this.managedLayers.splice(index, 1);\n    this.layersChanged.dispatch();\n  }\n\n  reorderManagedLayer(oldIndex: number, newIndex: number) {\n    const numLayers = this.managedLayers.length;\n    if (oldIndex === newIndex || oldIndex < 0 || oldIndex >= numLayers || newIndex < 0 || newIndex >= numLayers) {\n      // Don't do anything.\n      return;\n    }\n    let [oldLayer] = this.managedLayers.splice(oldIndex, 1);\n    this.managedLayers.splice(newIndex, 0, oldLayer);\n    this.layersChanged.dispatch();\n  }\n\n  disposed() {\n    this.clear();\n  }\n\n  getLayerByName(name: string) {\n    return this.managedLayers.find(x => x.name === name);\n  }\n\n  /**\n   * Asynchronously initialize the voxelSize and position based on the managed\n   * layers.\n   *\n   * The first ready layer with an associated bounding box will set the position\n   * to the center of the bounding box.\n   */\n  initializePosition(position: SpatialPosition) {\n    if (position.valid) {\n      // Nothing to do.\n      return;\n    }\n\n    if (this.updatePositionFromLayers(position)) {\n      return;\n    }\n\n    let {boundPositions} = this;\n    if (boundPositions.has(position)) {\n      return;\n    }\n    boundPositions.add(position);\n\n    let handler = () => {\n      this.updatePositionFromLayers(position);\n      if (position.valid) {\n        this.readyStateChanged.remove(handler);\n        this.boundPositions.delete(position);\n      }\n    };\n    this.readyStateChanged.add(handler);\n  }\n\n  updatePositionFromLayers(position: SpatialPosition) {\n    if (position.valid) {\n      return;\n    }\n    for (let managedLayer of this.managedLayers) {\n      let userLayer = managedLayer.layer;\n      if (userLayer == null) {\n        continue;\n      }\n      for (let renderLayer of userLayer.renderLayers) {\n        if (!renderLayer.ready) {\n          continue;\n        }\n        if (!position.voxelSize.valid && renderLayer.voxelSize != null) {\n          vec3.copy(position.voxelSize.size, renderLayer.voxelSize);\n          position.voxelSize.setValid();\n        }\n\n        if (!position.spatialCoordinatesValid && !position.voxelCoordinatesValid &&\n            renderLayer.boundingBox != null) {\n          let boundingBox = renderLayer.boundingBox;\n          let centerPosition = vec3.create();\n          vec3.add(centerPosition, boundingBox.lower, boundingBox.upper);\n          vec3.scale(centerPosition, centerPosition, 0.5);\n          position.setVoxelCoordinates(centerPosition);\n        }\n      }\n    }\n  }\n\n  get renderLayers() {\n    let layerManager = this;\n    return {\n      * [Symbol.iterator]() {\n          for (let managedLayer of layerManager.managedLayers) {\n            for (let renderLayer of managedLayer.layer.renderLayers) {\n              yield renderLayer;\n            }\n          }\n        }\n    };\n  }\n\n  get visibleRenderLayers() {\n    let layerManager = this;\n    return {\n      * [Symbol.iterator]() {\n          for (let managedLayer of layerManager.managedLayers) {\n            if (!managedLayer.visible) {\n              continue;\n            }\n            for (let renderLayer of managedLayer.layer.renderLayers) {\n              yield renderLayer;\n            }\n          }\n        }\n    };\n  }\n\n  invokeAction(action: string) {\n    for (let managedLayer of this.managedLayers) {\n      if (!managedLayer.visible) {\n        continue;\n      }\n      let userLayer = managedLayer.layer;\n      userLayer.handleAction(action);\n      for (let renderLayer of userLayer.renderLayers) {\n        if (!renderLayer.ready) {\n          continue;\n        }\n        renderLayer.handleAction(action);\n      }\n    }\n  }\n};\n\nconst MOUSE_STATE_UPDATE_INTERVAL = 50;\n\nexport class MouseSelectionState {\n  changed = new Signal();\n  position = vec3.create();\n  active = false;\n  pickedRenderLayer: RenderLayer = null;\n  pickedValue = new Uint64(0, 0);\n\n  updater: (mouseState: MouseSelectionState) => boolean;\n\n  stale = false;\n\n  triggerUpdate = throttle(\n      () => { this.update(); }, MOUSE_STATE_UPDATE_INTERVAL, {leading: true, trailing: true});\n\n  updateUnconditionally() {\n    this.triggerUpdate.cancel();\n    this.update();\n    return this.active;\n  }\n\n  updateIfStale() {\n    if (this.stale) {\n      this.update();\n    }\n  }\n\n  private update() {\n    let {updater} = this;\n    this.stale = false;\n    if (!updater) {\n      this.setActive(false);\n    } else {\n      this.setActive(updater(this));\n    }\n  }\n\n  setActive(value: boolean) {\n    this.stale = false;\n    if (this.active !== value || value === true) {\n      this.active = value;\n      this.changed.dispatch();\n    }\n  }\n};\n\nexport class LayerSelectedValues extends RefCounted {\n  values = new Map<UserLayer, any>();\n  changed = new Signal();\n  needsUpdate = true;\n  constructor(public layerManager: LayerManager, public mouseState: MouseSelectionState) {\n    super();\n    this.registerSignalBinding(mouseState.changed.add(this.handleChange, this));\n    this.registerSignalBinding(layerManager.layersChanged.add(() => { this.handleLayerChange(); }));\n  }\n\n  /**\n   * This should be called when the layer data may have changed, due to the set of managed layers\n   * changing or new data having been received.\n   */\n  handleLayerChange() {\n    if (this.mouseState.active) {\n      this.handleChange();\n    }\n  }\n\n  handleChange() {\n    this.needsUpdate = true;\n    this.changed.dispatch();\n  }\n\n  update() {\n    if (!this.needsUpdate) {\n      return;\n    }\n    this.needsUpdate = false;\n    let values = this.values;\n    let mouseState = this.mouseState;\n    values.clear();\n    if (mouseState.active) {\n      let position = mouseState.position;\n      for (let layer of this.layerManager.managedLayers) {\n        let userLayer = layer.layer;\n        if (layer.visible && userLayer) {\n          values.set(\n              userLayer,\n              userLayer.getValueAt(position, mouseState.pickedRenderLayer, mouseState.pickedValue));\n        }\n      }\n    }\n  }\n\n  get(userLayer: UserLayer) {\n    this.update();\n    return this.values.get(userLayer);\n  }\n};\n\nexport class VisibleRenderLayerTracker<RenderLayerType extends RenderLayer> extends RefCounted {\n\n  private visibleLayers = new Set<RenderLayerType>();\n  private newVisibleLayers = new Set<RenderLayerType>();\n  private updatePending: number|null = null;\n\n  constructor(public layerManager: LayerManager, public renderLayerType: any,\n              private layerAdded: (layer: RenderLayerType) => void,\n              private layerRemoved: (layer: RenderLayerType) => void) {\n    super();\n    this.registerSignalBinding(layerManager.layersChanged.add(this.handleLayersChanged, this));\n    this.updateVisibleLayers();\n  }\n\n  private handleLayersChanged() {\n    if (this.updatePending === null) {\n      this.updatePending = setTimeout(() => {\n        this.updatePending = null;\n        this.updateVisibleLayers();\n      }, 0);\n    }\n  }\n\n  disposed () {\n    this.cancelUpdate();\n    this.visibleLayers.forEach(this.layerRemoved);\n    this.visibleLayers.clear();\n  }\n\n  private cancelUpdate () {\n    let {updatePending} = this;\n    if (updatePending !== null) {\n      clearTimeout(updatePending);\n      updatePending = null;\n    }\n  }\n\n  private updateVisibleLayers () {\n    let {visibleLayers, newVisibleLayers, renderLayerType, layerAdded, layerRemoved} = this;\n    for (let renderLayer of this.layerManager.readyRenderLayers()) {\n      if (renderLayer instanceof renderLayerType) {\n        let typedLayer = <RenderLayerType>renderLayer;\n        newVisibleLayers.add(typedLayer);\n        if (!visibleLayers.has(typedLayer)) {\n          visibleLayers.add(typedLayer);\n          layerAdded(typedLayer);\n        }\n      }\n    }\n    for (let renderLayer of visibleLayers) {\n      if (!newVisibleLayers.has(renderLayer)) {\n        visibleLayers.delete(renderLayer);\n        layerRemoved(renderLayer);\n      }\n    }\n    newVisibleLayers.clear();\n  }\n\n  getVisibleLayers () {\n    if (this.updatePending !== null) {\n      this.cancelUpdate();\n      this.updateVisibleLayers();\n    }\n    return this.visibleLayers;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/layer.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst randomTempBuffer = new Uint32Array(2);\n\nconst trueBase = 0x100000000;\n\n// For dealing with the string representation in base b, we will represent the 64-bit number as\n//\n//   highPrime * intermediateBase[b] + lowPrime,\n//\n// where:\n//\n//   intermediateBaseForBase[b] = Math.pow(b, lowDigitsforBase[b]),\n//\n// and\n//\n//   lowDigitsForBase[b] = Math.floor(Math.log(Math.pow(2,53 - 32)) / Math.log(b)).\n\ninterface StringConversionData {\n  lowDigits: number;\n\n  lowBase: number;\n\n  // lowBase = lowBase1 * lowBase2.\n  lowBase1: number;\n  lowBase2: number;\n\n  pattern: RegExp;\n}\n\nlet stringConversionData: StringConversionData[] = [];\nfor (let base = 2; base <= 36; ++base) {\n  let lowDigits = Math.floor(32 / Math.log2(base));\n  let lowBase = Math.pow(base, lowDigits);\n  let lowDigits1 = Math.floor(lowDigits / 2);\n  let lowBase1 = Math.pow(base, lowDigits1);\n  let lowBase2 = Math.pow(base, lowDigits - lowDigits1);\n  let patternString = `^[0-${String.fromCharCode('0'.charCodeAt(0) + Math.min(9, base - 1))}`;\n  if (base > 10) {\n    patternString += `a-${String.fromCharCode('a'.charCodeAt(0) + base - 11)}`;\n    patternString += `A-${String.fromCharCode('A'.charCodeAt(0) + base - 11)}`;\n  }\n  let maxDigits = Math.ceil(64 / Math.log2(base));\n  patternString += `]{1,${maxDigits}}$`;\n  let pattern = new RegExp(patternString);\n  stringConversionData[base] = {lowDigits, lowBase, lowBase1, lowBase2, pattern};\n}\n\nexport class Uint64 {\n  constructor(public low: number = 0, public high: number = 0) {}\n\n  clone() { return new Uint64(this.low, this.high); }\n\n  assign(x: Uint64) {\n    this.low = x.low;\n    this.high = x.high;\n  }\n\n  toString(base = 10): string {\n    let vLow = this.low, vHigh = this.high;\n    if (vHigh === 0) {\n      return vLow.toString(base);\n    }\n    vHigh *= trueBase;\n    let {lowBase, lowDigits} = stringConversionData[base];\n    let vHighExtra = vHigh % lowBase;\n    vHigh = Math.floor(vHigh / lowBase);\n    vLow += vHighExtra;\n    vHigh += Math.floor(vLow / lowBase);\n    vLow = vLow % lowBase;\n    let vLowStr = vLow.toString(base);\n    return vHigh.toString(base) + '0'.repeat(lowDigits - vLowStr.length) + vLowStr;\n  }\n\n  static less(a: Uint64, b: Uint64): boolean {\n    return a.high < b.high || (a.high === b.high && a.low < b.low);\n  }\n\n  static ZERO = new Uint64(0, 0);\n\n  static equal(a: Uint64, b: Uint64) { return a.low === b.low && a.high === b.high; }\n\n  static min(a: Uint64, b: Uint64): Uint64 { return Uint64.less(a, b) ? a : b; }\n\n  static random() {\n    crypto.getRandomValues(randomTempBuffer);\n    return new Uint64(randomTempBuffer[0], randomTempBuffer[1]);\n  }\n\n  parseString(s: string, base = 10) {\n    let {lowDigits, lowBase, lowBase1, lowBase2, pattern} = stringConversionData[base];\n    if (!pattern.test(s)) {\n      return false;\n    }\n    if (s.length <= lowDigits) {\n      this.low = parseInt(s, base);\n      this.high = 0;\n      return true;\n    }\n    let splitPoint = s.length - lowDigits;\n    let lowPrime = parseInt(s.substr(splitPoint), base);\n    let highPrime = parseInt(s.substr(0, splitPoint), base);\n\n    let highConverted = highPrime * lowBase;\n\n    let high = Math.floor(highConverted / trueBase);\n\n    let low = lowPrime + (((highPrime % trueBase) * lowBase1) % trueBase) * lowBase2 % trueBase;\n    if (low > trueBase) {\n      ++high;\n      low -= trueBase;\n    }\n    if ((low >>> 0) !== low || ((high >>> 0) !== high)) {\n      return false;\n    }\n    this.low = low;\n    this.high = high;\n    return true;\n  }\n\n  static parseString(s: string, base = 10) {\n    let x = new Uint64();\n    if (!x.parseString(s, base)) {\n      throw new Error(`Failed to parse string as uint64 value: ${JSON.stringify(s)}.`);\n    }\n    return x;\n  }\n\n  valid () {\n    let {low, high} = this;\n    return ((low >>> 0) === low) && ((high >>> 0) === high);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/uint64.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Signal} from 'signals';\n\nexport function removeSignalBinding(signal: Signal, handler: () => void, context: any) {\n  signal.remove(handler, context);\n}\n\nexport function addSignalBinding(signal: Signal, handler: () => void, context: any) {\n  signal.add(handler, context);\n}\n\nexport interface SignalBindingUpdater {\n  (signal: Signal, handler: () => void, context: any): void;\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/signal_binding_updater.ts\n **/","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide an options object to indicate whether\n * `func` should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/throttle.js\n ** module id = 45\n ** module chunks = 0\n **/","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide an options object to indicate whether `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent calls\n * to the debounced function return the result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/debounce.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isObject.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nfunction now() {\n  return Date.now();\n}\n\nmodule.exports = now;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/now.js\n ** module id = 48\n ** module chunks = 0\n **/","var isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/toNumber.js\n ** module id = 49\n ** module chunks = 0\n **/","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isFunction.js\n ** module id = 50\n ** module chunks = 0\n **/","var isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isSymbol.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isObjectLike.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {resizeTexture} from 'neuroglancer/webgl/texture';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {trivialTextureShader} from 'neuroglancer/webgl/trivial_shaders';\nimport {Buffer} from 'neuroglancer/webgl/buffer';\nimport {identityMat4} from 'neuroglancer/util/geom';\n\nexport class OffscreenFramebuffer extends RefCounted {\n  width: number = null;\n  height: number = null;\n  framebuffer = this.gl.createFramebuffer();\n  depthBuffer: WebGLRenderbuffer = null;\n  dataTextures = new Array<WebGLRenderbuffer>();\n  useStencilBuffer: boolean;\n  private attachmentVerified = false;\n  private tempPixel = new Uint8Array(4);\n  private fullAttachmentList = new Array<number>();\n  private singleAttachmentList = [this.gl.WEBGL_draw_buffers.COLOR_ATTACHMENT0_WEBGL];\n  constructor(\n      public gl: GL, {numDataBuffers = 1, depthBuffer = false, stencilBuffer = false} = {}) {\n    super();\n    let {dataTextures, fullAttachmentList} = this;\n    for (let i = 0; i < numDataBuffers; ++i) {\n      dataTextures[i] = gl.createTexture();\n      fullAttachmentList[i] = gl.WEBGL_draw_buffers.COLOR_ATTACHMENT0_WEBGL + i;\n    }\n    if (depthBuffer || stencilBuffer) {\n      this.depthBuffer = gl.createRenderbuffer();\n    }\n    this.useStencilBuffer = stencilBuffer;\n  }\n\n  disposed() {\n    let {gl, depthBuffer} = this;\n    gl.deleteFramebuffer(this.framebuffer);\n    if (depthBuffer != null) {\n      gl.deleteRenderbuffer(depthBuffer);\n    }\n    for (let dataTexture of this.dataTextures) {\n      gl.deleteTexture(dataTexture);\n    }\n  }\n\n  resize(width: number, height: number) {\n    if (this.hasSize(width, height)) {\n      return;\n    }\n    this.width = width;\n    this.height = height;\n    let {gl, useStencilBuffer, depthBuffer} = this;\n    for (let dataTexture of this.dataTextures) {\n      resizeTexture(gl, dataTexture, width, height);\n    }\n\n    if (depthBuffer) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\n      gl.renderbufferStorage(\n          gl.RENDERBUFFER, useStencilBuffer ? gl.DEPTH_STENCIL : gl.DEPTH_COMPONENT16, width,\n          height);\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    }\n  }\n\n  hasSize(width: number, height: number) { return this.width === width && this.height === height; }\n\n  bind(width: number, height: number) {\n    this.resize(width, height);\n    let {gl, useStencilBuffer, depthBuffer} = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (depthBuffer) {\n      gl.framebufferRenderbuffer(\n          gl.FRAMEBUFFER, useStencilBuffer ? gl.DEPTH_STENCIL_ATTACHMENT : gl.DEPTH_ATTACHMENT,\n          gl.RENDERBUFFER, depthBuffer);\n    }\n    this.dataTextures.forEach((dataTexture, i) => {\n      gl.framebufferTexture2D(\n          gl.FRAMEBUFFER, gl.WEBGL_draw_buffers.COLOR_ATTACHMENT0_WEBGL + i, gl.TEXTURE_2D,\n          dataTexture,\n          /*level=*/0);\n    });\n    gl.WEBGL_draw_buffers.drawBuffersWEBGL(this.fullAttachmentList);\n    this.verifyAttachment();\n    gl.viewport(0, 0, width, height);\n  }\n\n  unbind() {\n    let {gl} = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  bindSingle(textureIndex: number) {\n    let {gl} = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.dataTextures[textureIndex],\n        /*level=*/0);\n    gl.WEBGL_draw_buffers.drawBuffersWEBGL(this.singleAttachmentList);\n  }\n\n  readPixel(textureIndex: number, glWindowX: number, glWindowY: number): Uint8Array {\n    let {gl, tempPixel} = this;\n    try {\n      this.bindSingle(textureIndex);\n      gl.readPixels(glWindowX, glWindowY, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, tempPixel);\n    } finally {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n    return tempPixel;\n  }\n\n  /**\n   * Calls readPixel, but interprets the RGBA result as a little-endian uint32 value.\n   */\n  readPixelAsUint32(textureIndex: number, glWindowX: number, glWindowY: number) {\n    let result = this.readPixel(textureIndex, glWindowX, glWindowY);\n    return result[0] + (result[1] << 8) + (result[2] << 16) + (result[3] << 24);\n  }\n\n  verifyAttachment() {\n    if (this.attachmentVerified) {\n      return;\n    }\n    let {gl} = this;\n    let framebufferStatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (framebufferStatus !== gl.FRAMEBUFFER_COMPLETE) {\n      throw new Error('Framebuffer configuration not supported');\n    }\n    this.attachmentVerified = true;\n  }\n};\n\n\nexport class OffscreenCopyHelper extends RefCounted {\n  constructor (public gl: GL) {\n    super();\n  }\n  private copyVertexPositionsBuffer = this.registerDisposer(Buffer.fromData(\n      this.gl, new Float32Array([\n        -1, -1, 0, 1,  //\n        -1, +1, 0, 1,  //\n        +1, +1, 0, 1,  //\n        +1, -1, 0, 1,  //\n      ]),\n      this.gl.ARRAY_BUFFER, this.gl.STATIC_DRAW));\n  private copyTexCoordsBuffer = this.registerDisposer(Buffer.fromData(\n      this.gl, new Float32Array([\n        0, 0,  //\n        0, 1,  //\n        1, 1,  //\n        1, 0,  //\n      ]),\n    this.gl.ARRAY_BUFFER, this.gl.STATIC_DRAW));\n\n  private trivialTextureShader = this.registerDisposer(trivialTextureShader(this.gl));\n\n  draw(texture: WebGLTexture) {\n    let {gl} = this;\n    let shader = this.trivialTextureShader;\n    shader.bind();\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    gl.uniform1i(shader.uniform('uSampler'), 0);\n    gl.uniformMatrix4fv(shader.uniform('uProjectionMatrix'), false, identityMat4);\n\n    let aVertexPosition = shader.attribute('aVertexPosition');\n    this.copyVertexPositionsBuffer.bindToVertexAttrib(aVertexPosition, 4);\n\n    let aTexCoord = shader.attribute('aTexCoord');\n    this.copyTexCoordsBuffer.bindToVertexAttrib(aTexCoord, 2);\n\n    gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n\n    gl.disableVertexAttribArray(aVertexPosition);\n    gl.disableVertexAttribArray(aTexCoord);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  static get (gl: GL) {\n    return gl.memoize.get(\n        'OffscreenCopyHelper', () => { return new OffscreenCopyHelper(gl); });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/webgl/offscreen.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {GL} from 'neuroglancer/webgl/context';\n\n/**\n * Sets parameters to make a texture suitable for use as a raw array: NEAREST\n * filtering, clamping.\n */\nexport function setRawTextureParameters(gl: WebGLRenderingContext) {\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  // Prevents s-coordinate wrapping (repeating).  Repeating not\n  // permitted for non-power-of-2 textures.\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  // Prevents t-coordinate wrapping (repeating).  Repeating not\n  // permitted for non-power-of-2 textures.\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n}\n\nexport function resizeTexture(gl: GL, texture: WebGLTexture, width: number, height: number,\n                              format: number = gl.RGBA, dataType: number = gl.UNSIGNED_BYTE) {\n  gl.activeTexture(gl.TEXTURE0 + gl.tempTextureUnit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  setRawTextureParameters(gl);\n  gl.texImage2D(\n      gl.TEXTURE_2D, 0,\n      /*internalformat=*/format,\n      /*width=*/width,\n      /*height=*/height,\n      /*border=*/0,\n      /*format=*/format, dataType, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/webgl/texture.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ShaderProgram, ShaderBuilder} from 'neuroglancer/webgl/shader';\nimport {GL} from 'neuroglancer/webgl/context';\n\nexport function trivialTextureShader(gl: GL): ShaderProgram {\n  return gl.memoize.get('trivialTextureShader', () => {\n    let builder = new ShaderBuilder(gl);\n    builder.addVarying('vec2', 'vTexCoord');\n    builder.addUniform('sampler2D', 'uSampler');\n    builder.addUniform('mat4', 'uProjectionMatrix');\n    builder.setFragmentMain('gl_FragColor = texture2D(uSampler, vTexCoord);');\n    builder.addAttribute('vec4', 'aVertexPosition');\n    builder.addAttribute('vec2', 'aTexCoord');\n    builder.setVertexMain(\n        'vTexCoord = aTexCoord; gl_Position = uProjectionMatrix * aVertexPosition;');\n    return builder.build();\n  });\n}\n\nexport function trivialColorShader(gl: GL): ShaderProgram {\n  return gl.memoize.get('trivialColorShader', () => {\n    let builder = new ShaderBuilder(gl);\n    builder.addVarying('vec4', 'vColor');\n    builder.setFragmentMain('gl_FragColor = vColor;');\n    builder.addAttribute('vec4', 'aVertexPosition');\n    builder.addAttribute('vec4', 'aColor');\n    builder.addUniform('mat4', 'uProjectionMatrix');\n    builder.setVertexMain('vColor = aColor; gl_Position = uProjectionMatrix * aVertexPosition;');\n    return builder.build();\n  });\n}\n\nexport function trivialUniformColorShader(gl: GL): ShaderProgram {\n  return gl.memoize.get('trivialUniformColorShader', () => {\n    let builder = new ShaderBuilder(gl);\n    builder.addUniform('mat4', 'uProjectionMatrix');\n    builder.addAttribute('vec4', 'aVertexPosition');\n    builder.addUniform('vec4', 'uColor');\n    builder.setFragmentMain('gl_FragColor = uColor;');\n    builder.setVertexMain('gl_Position = uProjectionMatrix * aVertexPosition;');\n    return builder.build();\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/webgl/trivial_shaders.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ShaderBuilder, ShaderProgram} from 'neuroglancer/webgl/shader';\nimport {vec3, vec4, mat4, Vec3, Mat4} from 'neuroglancer/util/geom';\nimport {PerspectiveViewRenderLayer, PerspectiveViewRenderContext, perspectivePanelEmit} from 'neuroglancer/perspective_panel';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {setVec4FromUint32} from 'neuroglancer/webgl/shader_lib';\nimport {ChunkManager, Chunk, ChunkSource} from 'neuroglancer/chunk_manager/frontend';\nimport {SegmentationDisplayState} from 'neuroglancer/segmentation_display_state';\nimport {ChunkState} from 'neuroglancer/chunk_manager/base';\nimport {Buffer} from 'neuroglancer/webgl/buffer';\nimport {RPC, SharedObject} from 'neuroglancer/worker_rpc';\n\nexport class MeshShaderManager {\n  private tempLightVec = vec4.create();\n  private tempPickID = new Float32Array(4);\n  constructor() {}\n\n  defineShader(builder: ShaderBuilder) {\n    builder.addAttribute('highp vec3', 'aVertexPosition');\n    builder.addAttribute('highp vec3', 'aVertexNormal');\n    builder.addVarying('highp vec3', 'vColor');\n    builder.addUniform('highp vec4', 'uLightDirection');\n    builder.addUniform('highp vec3', 'uColor');\n    builder.addUniform('highp mat4', 'uModelMatrix');\n    builder.addUniform('highp mat4', 'uProjection');\n    builder.addUniform('highp vec4', 'uPickID');\n    builder.require(perspectivePanelEmit);\n    builder.setVertexMain(`\ngl_Position = uProjection * (uModelMatrix * vec4(aVertexPosition, 1.0));\nvec3 normal = (uModelMatrix * vec4(aVertexNormal, 0.0)).xyz;\nfloat lightingFactor = abs(dot(normal, uLightDirection.xyz)) + uLightDirection.w;\nvColor = lightingFactor * uColor;\n`);\n    builder.setFragmentMain(`emit(vec4(vColor, 1.0), uPickID);`);\n  }\n\n  beginLayer(gl: GL, shader: ShaderProgram, renderContext: PerspectiveViewRenderContext) {\n    let {dataToDevice, lightDirection, ambientLighting, directionalLighting} = renderContext;\n    gl.uniformMatrix4fv(shader.uniform('uProjection'), false, dataToDevice);\n    let lightVec = this.tempLightVec;\n    vec3.scale(lightVec, lightDirection, directionalLighting);\n    lightVec[3] = ambientLighting;\n    gl.uniform4fv(shader.uniform('uLightDirection'), lightVec);\n  }\n\n  beginObject(\n      gl: GL, shader: ShaderProgram, objectToDataMatrix: Mat4, color: Vec3, pickID: number) {\n    gl.uniformMatrix4fv(shader.uniform('uModelMatrix'), false, objectToDataMatrix);\n    gl.uniform4fv(shader.uniform('uPickID'), setVec4FromUint32(this.tempPickID, pickID));\n    gl.uniform3fv(shader.uniform('uColor'), color);\n  }\n\n  getShader(gl: GL) {\n    return gl.memoize.get('mesh/MeshShaderManager', () => {\n      let builder = new ShaderBuilder(gl);\n      this.defineShader(builder);\n      return builder.build();\n    });\n  }\n\n  drawFragment(gl: GL, shader: ShaderProgram, fragmentChunk: FragmentChunk) {\n    fragmentChunk.vertexBuffer.bindToVertexAttrib(\n        shader.attribute('aVertexPosition'),\n        /*components=*/3);\n\n    fragmentChunk.normalBuffer.bindToVertexAttrib(\n        shader.attribute('aVertexNormal'),\n        /*components=*/3);\n    fragmentChunk.indexBuffer.bind();\n    gl.drawElements(gl.TRIANGLES, fragmentChunk.numIndices, gl.UNSIGNED_INT, 0);\n  }\n  endLayer(gl: GL, shader: ShaderProgram) {\n    gl.disableVertexAttribArray(shader.attribute('aVertexPosition'));\n    gl.disableVertexAttribArray(shader.attribute('aVertexNormal'));\n  }\n};\n\nexport class MeshLayer extends PerspectiveViewRenderLayer {\n  private meshShaderManager = new MeshShaderManager();\n  private shader = this.registerDisposer(this.meshShaderManager.getShader(this.gl));\n\n  constructor(\n      public chunkManager: ChunkManager, public source: MeshSource,\n      public displayState: SegmentationDisplayState) {\n    super();\n\n    let dispatchRedrawNeeded = () => { this.redrawNeeded.dispatch(); };\n    this.registerSignalBinding(displayState.segmentColorHash.changed.add(dispatchRedrawNeeded));\n    this.registerSignalBinding(displayState.visibleSegments.changed.add(dispatchRedrawNeeded));\n    this.registerSignalBinding(\n        displayState.segmentSelectionState.changed.add(dispatchRedrawNeeded));\n\n    let sharedObject = this.registerDisposer(new SharedObject());\n    sharedObject.initializeCounterpart(chunkManager.rpc, {\n      'type': 'mesh/MeshLayer',\n      'chunkManager': chunkManager.rpcId,\n      'source': source.addCounterpartRef(),\n      'visibleSegmentSet': displayState.visibleSegments.rpcId\n    });\n    this.setReady(true);\n  }\n\n  get gl() { return this.chunkManager.chunkQueueManager.gl; }\n\n  draw(renderContext: PerspectiveViewRenderContext) {\n    let gl = this.gl;\n    let shader = this.shader;\n    shader.bind();\n    let {meshShaderManager} = this;\n    meshShaderManager.beginLayer(gl, shader, renderContext);\n\n    let objectChunks = this.source.fragmentSource.objectChunks;\n\n    let {pickIDs} = renderContext;\n\n    // FIXME: this maybe should change\n    let objectToDataMatrix = mat4.create();\n    mat4.identity(objectToDataMatrix);\n\n    let color = vec3.create();\n    let {displayState} = this;\n    let {segmentColorHash, segmentSelectionState} = displayState;\n\n    for (let objectId of displayState.visibleSegments) {\n      let objectKey = `${objectId.low}:${objectId.high}`;\n      let fragments = objectChunks.get(objectKey);\n      if (fragments === undefined) {\n        continue;\n      }\n      segmentColorHash.compute(color, objectId);\n      if (segmentSelectionState.isSelected(objectId)) {\n        for (let i = 0; i < 3; ++i) {\n          color[i] = color[i] * 0.5 + 0.5;\n        }\n      }\n      meshShaderManager.beginObject(\n          gl, shader, objectToDataMatrix, color, pickIDs.register(this, objectId));\n      for (let fragment of fragments) {\n        if (fragment.state === ChunkState.GPU_MEMORY) {\n          meshShaderManager.drawFragment(gl, shader, fragment);\n        }\n      }\n    }\n\n    meshShaderManager.endLayer(gl, shader);\n  }\n};\n\nexport class FragmentChunk extends Chunk {\n  vertexPositions: Float32Array;\n  indices: Uint32Array;\n  vertexNormals: Float32Array;\n  objectKey: string;\n  source: FragmentSource;\n  vertexBuffer: Buffer;\n  indexBuffer: Buffer;\n  normalBuffer: Buffer;\n  numIndices: number;\n\n  constructor(source: FragmentSource, x: any) {\n    super(source);\n    this.objectKey = x['objectKey'];\n    this.vertexPositions = x['vertexPositions'];\n    let indices = this.indices = x['indices'];\n    this.numIndices = indices.length;\n    this.vertexNormals = x['vertexNormals'];\n  }\n\n  copyToGPU(gl: GL) {\n    super.copyToGPU(gl);\n    this.vertexBuffer = Buffer.fromData(gl, this.vertexPositions, gl.ARRAY_BUFFER, gl.STATIC_DRAW);\n    this.indexBuffer = Buffer.fromData(gl, this.indices, gl.ELEMENT_ARRAY_BUFFER, gl.STATIC_DRAW);\n    this.normalBuffer = Buffer.fromData(gl, this.vertexNormals, gl.ARRAY_BUFFER, gl.STATIC_DRAW);\n  }\n\n  freeGPUMemory(gl: GL) {\n    super.freeGPUMemory(gl);\n    this.vertexBuffer.dispose();\n    this.indexBuffer.dispose();\n    this.normalBuffer.dispose();\n  }\n};\n\nexport class FragmentSource extends ChunkSource {\n  objectChunks = new Map<string, Set<FragmentChunk>>();\n  constructor(chunkManager: ChunkManager, public meshSource: MeshSource) {\n    super(chunkManager);\n    this.initializeCounterpart(chunkManager.rpc, {'type': 'mesh/FragmentSource'});\n  }\n  addChunk(key: string, chunk: FragmentChunk) {\n    super.addChunk(key, chunk);\n    let {objectChunks} = this;\n    let {objectKey} = chunk;\n    let fragments = objectChunks.get(objectKey);\n    if (fragments === undefined) {\n      fragments = new Set();\n      objectChunks.set(objectKey, fragments);\n    }\n    fragments.add(chunk);\n  }\n  deleteChunk(key: string) {\n    let chunk = <FragmentChunk>this.chunks.get(key);\n    super.deleteChunk(key);\n    let {objectChunks} = this;\n    let {objectKey} = chunk;\n    let fragments = objectChunks.get(objectKey);\n    fragments.delete(chunk);\n    if (fragments.size === 0) {\n      objectChunks.delete(objectKey);\n    }\n  }\n\n  getChunk(x: any) { return new FragmentChunk(this, x); }\n};\n\nexport abstract class MeshSource extends ChunkSource {\n  fragmentSource = new FragmentSource(this.chunkManager, this);\n  initializeCounterpart(rpc: RPC, options: any) {\n    options['fragmentSource'] = this.fragmentSource.addCounterpartRef();\n    super.initializeCounterpart(rpc, options);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/mesh/frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AxesLineHelper} from 'neuroglancer/axes_lines';\nimport {DisplayContext} from 'neuroglancer/display_context';\nimport {RenderLayer} from 'neuroglancer/layer';\nimport {MouseSelectionState, VisibleRenderLayerTracker} from 'neuroglancer/layer';\nimport {PickIDManager} from 'neuroglancer/object_picking';\nimport {RenderedDataPanel} from 'neuroglancer/rendered_data_panel';\nimport {SliceView, SliceViewRenderHelper} from 'neuroglancer/sliceview/frontend';\nimport {TrackableBoolean, TrackableBooleanCheckbox} from 'neuroglancer/trackable_boolean';\nimport {vec3, vec4, mat4, Vec3, Mat4, kAxes} from 'neuroglancer/util/geom';\nimport {startRelativeMouseDrag} from 'neuroglancer/util/mouse_drag';\nimport {ViewerState} from 'neuroglancer/viewer_state';\nimport {OffscreenFramebuffer, OffscreenCopyHelper} from 'neuroglancer/webgl/offscreen';\nimport {ShaderBuilder} from 'neuroglancer/webgl/shader';\nimport {glsl_packFloat01ToFixedPoint, unpackFloat01FromFixedPoint} from 'neuroglancer/webgl/shader_lib';\nimport {Signal} from 'signals';\n\nrequire('neuroglancer/noselect.css');\nrequire('./perspective_panel.css');\n\nexport interface PerspectiveViewRenderContext {\n  dataToDevice: Mat4;\n  lightDirection: Vec3;\n  ambientLighting: number;\n  directionalLighting: number;\n  pickIDs: PickIDManager;\n}\n\nexport class PerspectiveViewRenderLayer extends RenderLayer {\n  redrawNeeded = new Signal();\n  draw(renderContext: PerspectiveViewRenderContext) {\n    // Must be overridden by subclasses.\n  }\n\n  drawPicking(renderContext: PerspectiveViewRenderContext) {\n    // Do nothing by default.\n  }\n};\n\nexport interface PerspectiveViewerState extends ViewerState { showSliceViews: TrackableBoolean; }\n\nexport enum OffscreenTextures {\n  COLOR,\n  Z,\n  PICK,\n  NUM_TEXTURES\n}\n\nexport const glsl_perspectivePanelEmit = [\n  glsl_packFloat01ToFixedPoint, `\nvoid emit(vec4 color, vec4 pickId) {\n  gl_FragData[${OffscreenTextures.COLOR}] = color;\n  gl_FragData[${OffscreenTextures.Z}] = packFloat01ToFixedPoint(1.0 - gl_FragCoord.z);\n  gl_FragData[${OffscreenTextures.PICK}] = pickId;\n}\n`\n];\n\nexport function perspectivePanelEmit(builder: ShaderBuilder) {\n  builder.addFragmentExtension('GL_EXT_draw_buffers');\n  builder.addFragmentCode(glsl_perspectivePanelEmit);\n}\n\nconst tempVec3 = vec3.create();\nconst tempMat4 = mat4.create();\n\nexport class PerspectivePanel extends RenderedDataPanel {\n  private visibleLayerTracker =\n      this.registerDisposer(new VisibleRenderLayerTracker<PerspectiveViewRenderLayer>(\n          this.viewer.layerManager, PerspectiveViewRenderLayer,\n          layer => {\n            layer.redrawNeeded.add(this.scheduleRedraw, this);\n            this.scheduleRedraw();\n          },\n          layer => {\n            layer.redrawNeeded.remove(this.scheduleRedraw, this);\n            this.scheduleRedraw();\n          }));\n\n  sliceViews = new Set<SliceView>();\n  projectionMat = mat4.create();\n  viewer: PerspectiveViewerState;\n  inverseProjectionMat = mat4.create();\n  modelViewMat = mat4.create();\n  width: number = null;\n  height: number = null;\n  private pickIDs = new PickIDManager();\n  private axesLineHelper = this.registerDisposer(AxesLineHelper.get(this.gl));\n  sliceViewRenderHelper = this.registerDisposer(SliceViewRenderHelper.get(\n      this.gl, 'SliceViewRenderHelper:PerspectivePanel', perspectivePanelEmit));\n\n  private offscreenFramebuffer = new OffscreenFramebuffer(\n      this.gl,\n      {numDataBuffers: OffscreenTextures.NUM_TEXTURES, depthBuffer: true, stencilBuffer: true});\n\n  private offscreenCopyHelper = OffscreenCopyHelper.get(this.gl);\n\n  constructor(context: DisplayContext, element: HTMLElement, viewer: PerspectiveViewerState) {\n    super(context, element, viewer);\n    this.registerSignalBinding(this.navigationState.changed.add(() => { this.viewportChanged(); }));\n\n    let showSliceViewsCheckbox =\n        this.registerDisposer(new TrackableBooleanCheckbox(viewer.showSliceViews));\n    showSliceViewsCheckbox.element.className = 'perspective-panel-show-slice-views noselect';\n    let showSliceViewsLabel = document.createElement('label');\n    showSliceViewsLabel.className = 'perspective-panel-show-slice-views noselect';\n    showSliceViewsLabel.appendChild(document.createTextNode('Slices'));\n    showSliceViewsLabel.appendChild(showSliceViewsCheckbox.element);\n    this.element.appendChild(showSliceViewsLabel);\n    this.registerSignalBinding(viewer.showSliceViews.changed.add(() => { this.scheduleRedraw(); }));\n    this.registerSignalBinding(viewer.showAxisLines.changed.add(() => { this.scheduleRedraw(); }));\n  }\n  get navigationState() { return this.viewer.navigationState; }\n\n  updateProjectionMatrix() {\n    let projectionMat = this.projectionMat;\n    mat4.perspective(projectionMat, Math.PI / 4.0, this.width / this.height, 10, 5000);\n    let modelViewMat = this.modelViewMat;\n    this.navigationState.toMat4(modelViewMat);\n    vec3.set(tempVec3, 1, -1, -1);\n    mat4.scale(modelViewMat, modelViewMat, tempVec3);\n\n    let viewOffset = vec3.set(tempVec3, 0, 0, 100);\n    mat4.translate(modelViewMat, modelViewMat, viewOffset);\n\n    let modelViewMatInv = tempMat4;\n    mat4.invert(modelViewMatInv, modelViewMat);\n\n    mat4.multiply(projectionMat, projectionMat, modelViewMatInv);\n    mat4.invert(this.inverseProjectionMat, projectionMat);\n  }\n\n  viewportChanged() { this.context.scheduleRedraw(); }\n\n  onResize() {\n    this.width = this.element.clientWidth;\n    this.height = this.element.clientHeight;\n    this.viewportChanged();\n  }\n\n  disposed() {\n    for (let sliceView of this.sliceViews) {\n      sliceView.dispose();\n    }\n    this.sliceViews.clear();\n  }\n\n  updateMouseState(mouseState: MouseSelectionState): boolean {\n    mouseState.pickedRenderLayer = null;\n    if (!this.navigationState.valid) {\n      return false;\n    }\n    let out = mouseState.position;\n    let {offscreenFramebuffer, width, height} = this;\n    if (!offscreenFramebuffer.hasSize(width, height)) {\n      return false;\n    }\n    let glWindowX = this.mouseX;\n    let glWindowY = height - this.mouseY;\n    let zData = offscreenFramebuffer.readPixel(OffscreenTextures.Z, glWindowX, glWindowY);\n    let glWindowZ = 1.0 - unpackFloat01FromFixedPoint(zData);\n    if (glWindowZ === 1.0) {\n      return false;\n    }\n    out[0] = 2.0 * glWindowX / width - 1.0;\n    out[1] = 2.0 * glWindowY / height - 1.0;\n    out[2] = 2.0 * glWindowZ - 1.0;\n    vec3.transformMat4(out, out, this.inverseProjectionMat);\n    this.pickIDs.setMouseState(\n        mouseState,\n        offscreenFramebuffer.readPixelAsUint32(OffscreenTextures.PICK, glWindowX, glWindowY));\n    return true;\n  }\n\n  onMousedown(e: MouseEvent) {\n    if (event.target !== this.element) {\n      return;\n    }\n    super.onMousedown(e);\n    if (!this.navigationState.valid) {\n      return;\n    }\n    if (e.button === 0) {\n      startRelativeMouseDrag(e, (event, deltaX, deltaY) => {\n        this.navigationState.pose.rotateRelative(kAxes[1], -deltaX / 4.0 * Math.PI / 180.0);\n        this.navigationState.pose.rotateRelative(kAxes[0], deltaY / 4.0 * Math.PI / 180.0);\n        this.viewer.navigationState.changed.dispatch();\n      });\n    }\n  }\n  draw() {\n    if (!this.navigationState.valid) {\n      return;\n    }\n\n    for (let sliceView of this.sliceViews) {\n      sliceView.updateRendering();\n    }\n\n    let gl = this.gl;\n    this.offscreenFramebuffer.bind(this.width, this.height);\n\n    gl.disable(gl.SCISSOR_TEST);\n    this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.DEPTH_TEST);\n    let {projectionMat} = this;\n    this.updateProjectionMatrix();\n\n    // FIXME; avoid temporaries\n    let lightingDirection = vec4.create();\n    vec4.transformMat4(lightingDirection, kAxes[2], this.modelViewMat);\n    vec4.normalize(lightingDirection, lightingDirection);\n\n    let ambient = 0.2;\n    let directional = 1 - ambient;\n\n    let pickIDs = this.pickIDs;\n    pickIDs.clear();\n    let renderContext = {\n      dataToDevice: projectionMat,\n      lightDirection: lightingDirection.subarray(0, 3),\n      ambientLighting: ambient,\n      directionalLighting: directional,\n      pickIDs: pickIDs\n    };\n\n    let visibleLayers = this.visibleLayerTracker.getVisibleLayers();\n\n    for (let renderLayer of visibleLayers) {\n      renderLayer.draw(renderContext);\n    }\n\n    if (this.viewer.showSliceViews.value) {\n      let {sliceViewRenderHelper} = this;\n\n      for (let sliceView of this.sliceViews) {\n        let scalar = Math.abs(vec3.dot(lightingDirection, sliceView.viewportAxes[2]));\n        let factor = ambient + scalar * directional;\n        let mat = tempMat4;\n        // Need a matrix that maps (+1, +1, 0) to projectionMat * (width, height, 0)\n        mat4.identity(mat);\n        mat[0] = sliceView.width / 2.0;\n        mat[5] = -sliceView.height / 2.0;\n        mat4.multiply(mat, sliceView.viewportToData, mat);\n        mat4.multiply(mat, projectionMat, mat);\n\n        sliceViewRenderHelper.draw(\n            sliceView.offscreenFramebuffer.dataTextures[0], mat,\n            vec4.fromValues(factor, factor, factor, 1), vec4.fromValues(0.5, 0.5, 0.5, 1), 0, 0, 1,\n            1);\n      }\n    }\n\n    if (this.viewer.showAxisLines.value) {\n      let mat = tempMat4;\n      mat4.identity(mat);\n      // Draw axes lines.\n      let axisLength = 200 * 8;\n\n      // Construct matrix that maps [-1, +1] x/y range to the full viewport data\n      // coordinates.\n      mat[0] = axisLength;\n      mat[5] = axisLength;\n      mat[10] = axisLength;\n      let center = this.navigationState.position.spatialCoordinates;\n      mat[12] = center[0];\n      mat[13] = center[1];\n      mat[14] = center[2];\n      mat[15] = 1;\n      mat4.multiply(mat, projectionMat, mat);\n\n      gl.WEBGL_draw_buffers.drawBuffersWEBGL([gl.WEBGL_draw_buffers.COLOR_ATTACHMENT0_WEBGL]);\n      this.axesLineHelper.draw(mat, false);\n    }\n\n    // Do picking only rendering pass.\n    gl.WEBGL_draw_buffers.drawBuffersWEBGL([\n      gl.NONE, gl.WEBGL_draw_buffers.COLOR_ATTACHMENT1_WEBGL,\n      gl.WEBGL_draw_buffers.COLOR_ATTACHMENT2_WEBGL\n    ]);\n\n    for (let renderLayer of visibleLayers) {\n      renderLayer.drawPicking(renderContext);\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    this.offscreenFramebuffer.unbind();\n\n    // Draw the texture over the whole viewport.\n    this.setGLViewport();\n    this.offscreenCopyHelper.draw(this.offscreenFramebuffer.dataTextures[OffscreenTextures.COLOR]);\n  }\n\n  zoomByMouse(factor: number) { this.navigationState.zoomBy(factor); }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/perspective_panel.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {ShaderProgram} from 'neuroglancer/webgl/shader';\nimport {Buffer} from 'neuroglancer/webgl/buffer';\nimport {trivialColorShader} from 'neuroglancer/webgl/trivial_shaders';\nimport {Mat4} from 'neuroglancer/util/geom';\n\nexport class AxesLineHelper extends RefCounted {\n  vertexBuffer: Buffer;\n  colorBuffer: Buffer;\n  trivialColorShader: ShaderProgram;\n\n  constructor(public gl: GL) {\n    super();\n    this.vertexBuffer = this.registerDisposer(Buffer.fromData(\n        gl, new Float32Array([\n          0, 0, 0, 1,  //\n          1, 0, 0, 1,  //\n          0, 0, 0, 1,  //\n          0, 1, 0, 1,  //\n          0, 0, 0, 1,  //\n          0, 0, 1, 1,  //\n        ]),\n        gl.ARRAY_BUFFER, gl.STATIC_DRAW));\n\n    let alpha = 0.5;\n    this.colorBuffer = this.registerDisposer(Buffer.fromData(\n        gl, new Float32Array([\n          1, 0, 0, alpha,  //\n          1, 0, 0, alpha,  //\n          0, 1, 0, alpha,  //\n          0, 1, 0, alpha,  //\n          0, 0, 1, alpha,  //\n          0, 0, 1, alpha,  //\n        ]),\n        gl.ARRAY_BUFFER, gl.STATIC_DRAW));\n    this.trivialColorShader = this.registerDisposer(trivialColorShader(gl));\n  }\n\n  static get(gl: GL) {\n    return gl.memoize.get(\n        'SliceViewPanel:AxesLineHelper', () => new AxesLineHelper(gl));\n  }\n\n  draw(mat: Mat4, blend = true) {\n    let shader = this.trivialColorShader;\n    let gl = this.gl;\n    shader.bind();\n    gl.uniformMatrix4fv(shader.uniform('uProjectionMatrix'), false, mat);\n    let aVertexPosition = shader.attribute('aVertexPosition');\n    this.vertexBuffer.bindToVertexAttrib(aVertexPosition, 4);\n\n    let aColor = shader.attribute('aColor');\n    this.colorBuffer.bindToVertexAttrib(aColor, 4);\n\n    if (blend) {\n      gl.colorMask(false, false, false, true);\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.colorMask(true, true, true, true);\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.ONE_MINUS_DST_ALPHA, gl.DST_ALPHA);\n    }\n\n\n    gl.lineWidth(1);\n    gl.drawArrays(gl.LINES, 0, 6);\n\n    if (blend) {\n      gl.disable(gl.BLEND);\n    }\n\n    gl.disableVertexAttribArray(aVertexPosition);\n    gl.disableVertexAttribArray(aColor);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/axes_lines.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RenderLayer, MouseSelectionState} from 'neuroglancer/layer';\nimport {Uint64} from 'neuroglancer/util/uint64';\n\nexport class PickIDManager {\n  renderLayers: RenderLayer[] = [null];\n  lowValues = [0];\n  highValues = [0];\n\n  constructor() {}\n\n  clear() {\n    this.renderLayers.length = 1;\n    this.lowValues.length = 1;\n    this.highValues.length = 1;\n  }\n\n  register(renderLayer: RenderLayer, x: Uint64): number {\n    let {renderLayers, lowValues, highValues} = this;\n    let id = renderLayers.length;\n    renderLayers[id] = renderLayer;\n    lowValues[id] = x.low;\n    highValues[id] = x.high;\n    return id;\n  }\n\n  /**\n   * Set the object state according to the specified pick ID.\n   */\n  setMouseState(mouseState: MouseSelectionState, pickID: number) {\n    mouseState.pickedRenderLayer = this.renderLayers[pickID];\n    let {pickedValue} = mouseState;\n    pickedValue.low = this.lowValues[pickID];\n    pickedValue.high = this.highValues[pickID];\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/object_picking.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DisplayContext, RenderedPanel} from 'neuroglancer/display_context';\nimport {MouseSelectionState} from 'neuroglancer/layer';\nimport {NavigationState} from 'neuroglancer/navigation_state';\nimport {vec3, vec4, mat2, kAxes, AXES_NAMES, Vec2, Vec3, Mat4} from 'neuroglancer/util/geom';\nimport {getWheelZoomAmount} from 'neuroglancer/util/wheel_zoom';\nimport {ViewerState} from 'neuroglancer/viewer_state';\n\nrequire('./rendered_data_panel.css');\n\nexport const KEY_COMMANDS = new Map<string, (this: RenderedDataPanel) => void>();\nfor (let axis = 0; axis < 3; ++axis) {\n  let axisName = AXES_NAMES[axis];\n  for (let sign of [-1, +1]) {\n    let signStr = (sign < 0) ? '-' : '+';\n    KEY_COMMANDS.set(`rotate-relative-${axisName}${signStr}`, function() {\n      this.navigationState.pose.rotateRelative(kAxes[axis], sign * 0.1);\n    });\n    let tempOffset = vec3.create();\n    KEY_COMMANDS.set(`${axisName}${signStr}`, function() {\n      let {navigationState} = this;\n      let offset = tempOffset;\n      offset[0] = 0;\n      offset[1] = 0;\n      offset[2] = 0;\n      offset[axis] = sign;\n      navigationState.pose.translateVoxelsRelative(offset);\n    });\n  }\n}\nKEY_COMMANDS.set('snap', function() { this.navigationState.pose.snap(); });\n\nKEY_COMMANDS.set('zoom-in', function() { this.navigationState.zoomBy(0.5); });\nKEY_COMMANDS.set('zoom-out', function() { this.navigationState.zoomBy(2.0); });\n\nconst tempVec3 = vec3.create();\n\nexport abstract class RenderedDataPanel extends RenderedPanel {\n  // Last mouse position within the panel.\n  mouseX = 0;\n  mouseY = 0;\n\n  abstract updateMouseState(state: MouseSelectionState): boolean;\n\n  private mouseStateUpdater = this.updateMouseState.bind(this);\n\n  navigationState: NavigationState;\n\n  constructor(context: DisplayContext, element: HTMLElement, public viewer: ViewerState) {\n    super(context, element);\n\n    element.classList.add('rendered-data-panel');\n\n    this.registerEventListener(element, 'mousemove', this.onMousemove.bind(this));\n    this.registerEventListener(element, 'mouseleave', this.onMouseout.bind(this));\n    this.registerEventListener(element, 'mousedown', this.onMousedown.bind(this), false);\n    this.registerEventListener(element, 'wheel', this.onMousewheel.bind(this), false);\n    this.registerEventListener(\n        element, 'dblclick', () => { this.viewer.layerManager.invokeAction('select'); });\n  }\n\n  onMouseout(event: MouseEvent) {\n    let {mouseState} = this.viewer;\n    mouseState.updater = undefined;\n    mouseState.setActive(false);\n  }\n\n  onKeyCommand(action: string) {\n    let command = KEY_COMMANDS.get(action);\n    if (command) {\n      command.call(this);\n      return true;\n    }\n    return false;\n  }\n\n  onMousemove(event: MouseEvent) {\n    let {element} = this;\n    if (event.target !== element) {\n      return;\n    }\n    this.mouseX = event.offsetX - element.clientLeft;\n    this.mouseY = event.offsetY - element.clientTop;\n    let {mouseState} = this.viewer;\n    mouseState.updater = this.mouseStateUpdater;\n    mouseState.triggerUpdate();\n  }\n\n  abstract zoomByMouse(factor: number): void;\n\n  onMousewheel(e: WheelEvent) {\n    if (e.ctrlKey) {\n      this.onMousemove(e);\n      this.zoomByMouse(getWheelZoomAmount(e));\n    } else {\n      let {navigationState} = this;\n      let offset = tempVec3;\n      offset[0] = 0;\n      offset[1] = 0;\n      offset[2] = (e.wheelDelta > 0 ? 1 : -1) * (e.shiftKey ? 10 : 1);\n      navigationState.pose.translateVoxelsRelative(offset);\n    }\n    e.preventDefault();\n  }\n  onMousedown(e: MouseEvent) {\n    if (event.target !== this.element) {\n      return;\n    }\n    this.onMousemove(e);\n    if (e.button === 2) {\n      let {mouseState} = this.viewer;\n      if (mouseState.updateUnconditionally()) {\n        let position = this.navigationState.pose.position;\n        vec3.copy(position.spatialCoordinates, mouseState.position);\n        position.changed.dispatch();\n      }\n    }\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/rendered_data_panel.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {GL, initializeWebGL} from 'neuroglancer/webgl/context';\nimport {Signal} from 'signals';\nimport {RefCounted} from 'neuroglancer/util/disposable';\n\nexport abstract class RenderedPanel extends RefCounted {\n  gl: GL;\n  constructor(public context: DisplayContext, public element: HTMLElement) {\n    super();\n    this.gl = context.gl;\n    this.registerEventListener(element, 'mouseenter', (event: MouseEvent) => {\n      this.context.setActivePanel(this);\n    });\n    context.addPanel(this);\n  }\n\n  scheduleRedraw() { this.context.scheduleRedraw(); }\n\n  setGLViewport() {\n    let element = this.element;\n    let left = element.offsetLeft + element.clientLeft;\n    let width = element.clientWidth;\n    let top = element.offsetTop + element.clientTop;\n    let height = element.clientHeight;\n    let bottom = top + height;\n    let gl = this.gl;\n    gl.enable(gl.SCISSOR_TEST);\n    let glBottom = this.context.canvas.height - bottom;\n    gl.viewport(left, glBottom, width, height);\n    gl.scissor(left, glBottom, width, height);\n  }\n\n  abstract onResize(): void;\n\n  onKeyCommand (action: string) {\n    return false;\n  }\n\n  abstract draw(): void;\n\n  disposed () {\n    this.context.removePanel(this);\n  }\n};\n\nexport class DisplayContext extends RefCounted {\n  canvas = document.createElement('canvas');\n  gl: GL;\n  updateStarted = new Signal();\n  updateFinished = new Signal();\n  panels = new Set<RenderedPanel>();\n  activePanel: RenderedPanel = null;\n  private updatePending: number = null;\n  private needsRedraw = false;\n\n  constructor(public container: HTMLElement) {\n    super();\n    let {canvas} = this;\n    canvas.className = 'gl-canvas';\n    container.appendChild(canvas);\n    this.gl = initializeWebGL(canvas);\n    this.registerEventListener(window, 'resize', this.onResize.bind(this));\n  }\n\n  disposed() {\n    if (this.updatePending != null) {\n      cancelAnimationFrame(this.updatePending);\n      this.updatePending = null;\n    }\n  }\n\n  addPanel(panel: RenderedPanel) {\n    this.panels.add(panel);\n    if (this.activePanel == null) {\n      this.setActivePanel(panel);\n    }\n  }\n\n  setActivePanel(panel: RenderedPanel) {\n    let existingPanel = this.activePanel;\n    if (existingPanel != null) {\n      existingPanel.element.attributes.removeNamedItem('isActivePanel');\n    }\n    if (panel != null) {\n      panel.element.setAttribute('isActivePanel', 'true');\n    }\n    this.activePanel = panel;\n  }\n\n  removePanel(panel: RenderedPanel) {\n    this.panels.delete(panel);\n    if (panel === this.activePanel) {\n      this.setActivePanel(null);\n    }\n    panel.dispose();\n  }\n\n  onResize() {\n    this.scheduleRedraw();\n    for (let panel of this.panels) {\n      panel.onResize();\n    }\n  }\n\n  scheduleUpdate() {\n    if (this.updatePending === null) {\n      this.updatePending = requestAnimationFrame(this.update.bind(this));\n    }\n  }\n\n  scheduleRedraw() {\n    if (!this.needsRedraw) {\n      this.needsRedraw = true;\n      this.scheduleUpdate();\n    }\n  }\n\n  private update() {\n    this.updatePending = null;\n    this.updateStarted.dispatch();\n    if (this.needsRedraw) {\n      // console.log(\"Redraw\");\n      this.needsRedraw = false;\n      let gl = this.gl;\n      let canvas = this.canvas;\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n      this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      for (let panel of this.panels) {\n        let {element} = panel;\n        if (element.clientWidth === 0 || element.clientHeight === 0) {\n          // Skip drawing if the panel has zero client area.\n          continue;\n        }\n        panel.setGLViewport();\n        panel.draw();\n      }\n    }\n    this.updateFinished.dispatch();\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/display_context.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Memoize} from 'neuroglancer/util/memoize';\nimport {RefCounted} from 'neuroglancer/util/disposable';\n\nexport interface GL extends WebGLRenderingContext {\n  memoize: Memoize<any, RefCounted>;\n  WEBGL_draw_buffers: any;\n  maxTextureSize: number;\n  maxTextureImageUnits: number;\n  tempTextureUnit: number;\n}\n\nexport const DEBUG_SHADERS = false;\n\nexport function initializeWebGL(canvas: HTMLCanvasElement) {\n  let gl: GL = null;\n\n  let options: any = {\n    'antialias': false,\n    'stencil': true,\n  };\n  if (DEBUG_SHADERS) {\n    console.log('DEBUGGING via preserveDrawingBuffer');\n    options['preserveDrawingBuffer'] = true;\n  }\n  gl = <GL>(\n      canvas.getContext('webgl', options) ||\n      canvas.getContext('experimental-webgl', options));\n  gl.memoize = new Memoize<any, RefCounted>();\n  gl.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  gl.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  gl.tempTextureUnit = gl.maxTextureImageUnits - 1;\n\n  // FIXME: verify that we received a stencil buffer\n  // var contextAttributes = gl.getContextAttributes();\n  // var haveStencilBuffer = contextAttributes.stencil;\n\n  gl.WEBGL_draw_buffers = gl.getExtension('WEBGL_draw_buffers');\n  if (!gl.WEBGL_draw_buffers) {\n    throw new Error('WEBGL_draw_buffers extension not available');\n  }\n\n  for (let extension of ['OES_texture_float', 'OES_element_index_uint']) {\n    if (!gl.getExtension(extension)) {\n      throw new Error(`${extension} extension not available`);\n    }\n  }\n\n  return gl;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/webgl/context.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DOM_DELTA_PIXEL = 0;\nconst DOM_DELTA_LINE = 1;\nconst DOM_DELTA_PAGE = 2;\n\nexport function getWheelZoomAmount(event: WheelEvent) {\n  let multiplier = 1 / 200.0; // For DOM_DELTA_PIXEL.\n  let {deltaMode} = event;\n  if (deltaMode === DOM_DELTA_LINE) {\n    multiplier = 1 / 10.0;\n  } else if (deltaMode === DOM_DELTA_PAGE) {\n    multiplier = 2;\n  }\n  return Math.exp(event.deltaY * multiplier);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/wheel_zoom.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/rendered_data_panel.css\n ** module id = 64\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Signal} from 'signals';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {Trackable} from 'neuroglancer/url_hash_state';\n\nexport class TrackableBoolean implements Trackable {\n  get value() { return this.value_; }\n  set value(newValue: boolean) {\n    if (newValue !== this.value_) {\n      this.value_ = newValue;\n      this.changed.dispatch();\n    }\n  }\n  toggle () {\n    this.value = !this.value;\n  }\n  changed = new Signal();\n  constructor(private value_: boolean, public defaultValue?: boolean) {}\n  toJSON() {\n    let {value_} = this;\n    if (value_ === this.defaultValue) {\n      return undefined;\n    }\n    return this.value_;\n  }\n  restoreState(x: any) {\n    if (x === undefined) {\n      x = this.defaultValue;\n    }\n    if (x === true || x === false) {\n      this.value = x;\n    }\n  }\n};\n\nexport class TrackableBooleanCheckbox extends RefCounted {\n  element = document.createElement('input');\n  constructor (public model: TrackableBoolean) {\n    super();\n    let {element} = this;\n    element.type = 'checkbox';\n    this.registerSignalBinding(model.changed.add(this.updateCheckbox, this));\n    this.updateCheckbox();\n    this.registerEventListener(element, 'change', function (this: typeof element, e: Event) {\n      model.value = this.checked;\n    });\n  }\n\n  updateCheckbox() { this.element.checked = this.model.value; }\n\n  disposed () {\n    let {element} = this;\n    let {parentElement} = element;\n    if (parentElement) {\n      parentElement.removeChild(element);\n    }\n  }\n};\n\nexport class ElementVisibilityFromTrackableBoolean extends RefCounted {\n  constructor (public model: TrackableBoolean, public element: HTMLElement) {\n    super();\n    this.updateVisibility();\n    this.registerSignalBinding(model.changed.add(() => { this.updateVisibility(); }));\n  }\n\n  updateVisibility() {\n    this.element.style.display = this.model.value ? '' : 'none';\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/trackable_boolean.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type RelativeDragHandler = (event: MouseEvent, deltaX: number, deltaY: number) => void;\nexport function startRelativeMouseDrag(initialEvent: MouseEvent, handler: RelativeDragHandler) {\n  let {document} = initialEvent.view;\n  let prevScreenX = initialEvent.screenX, prevScreenY = initialEvent.screenY;\n  let mouseMoveHandler = (e: MouseEvent) => {\n    let deltaX = prevScreenX - e.screenX;\n    let deltaY = prevScreenY - e.screenY;\n    prevScreenX = e.screenX;\n    prevScreenY = e.screenY;\n    handler(e, deltaX, deltaY);\n  };\n  let button = initialEvent.button;\n  let mouseUpHandler = (e: MouseEvent) => {\n    if (e.button === button) {\n      document.removeEventListener('mousemove', mouseMoveHandler, true);\n      document.removeEventListener('mouseup', mouseUpHandler, false);\n    }\n  };\n  document.addEventListener('mousemove', mouseMoveHandler, true);\n  document.addEventListener('mouseup', mouseUpHandler, false);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/mouse_drag.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * GLSL function for converting a float in [0,1) to 32-bit little endian fixed point representation\n * (encoded as a vector of four floats in [0,1]).  This is fast but may not be completely accurate.\n * For a slower function that handles the full floating point finite range, use glsl_packFloat.\n */\nexport var glsl_packFloat01ToFixedPoint = `\nvec4 packFloat01ToFixedPoint(const float value) {\n  const vec4 shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n  const vec4 mask = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n  vec4 result = fract(value * shift);\n  result -= result.xxyz * mask;\n  return result * 256.0 / 255.0;\n}\n`;\n\nexport function unpackFloat01FromFixedPoint(data: Uint8Array) {\n  return (data[3] + data[2] * (1.0 / 256.0) + data[1] * (1.0 / 65536.0) +\n          data[0] * (1.0 / 16777216.0)) /\n      256.0;\n}\n\n// Hue, saturation, and value are in [0, 1] range.\nexport var glsl_hsvToRgb = `\nvec3 hueToRgb(float hue) {\n  float hue6 = hue * 6.0;\n  float r = abs(hue6 - 3.0) - 1.0;\n  float g = 2.0 - abs(hue6 - 2.0);\n  float b = 2.0 - abs(hue6 - 4.0);\n  return clamp(vec3(r, g, b), 0.0, 1.0);\n}\nvec3 hsvToRgb(vec3 c) {\n  vec3 hueRgb = hueToRgb(c.x);\n  return c.z * ((hueRgb - 1.0) * c.y + 1.0);\n}\n`;\n\nexport var glsl_uint64 = `\nstruct uint64_t {\n  vec4 low, high;\n};\n`;\n\nexport var glsl_getSubscriptsFromNormalized = `\nvec3 getSubscriptsFromNormalized(vec3 normalizedPosition, vec3 size) {\n  return floor(min(normalizedPosition * size, size - 1.0));\n}\n`;\n\nexport var glsl_getFortranOrderIndex = `\nfloat getFortranOrderIndex(vec3 subscripts, vec3 size) {\n  return subscripts.x + size.x * (subscripts.y + size.y * subscripts.z);\n}\n`;\n\nexport var glsl_getFortranOrderIndexFromNormalized = [\n  glsl_getSubscriptsFromNormalized,\n  glsl_getFortranOrderIndex, `\nfloat getFortranOrderIndexFromNormalized(vec3 normalizedPosition, vec3 size) {\n  return getFortranOrderIndex(getSubscriptsFromNormalized(normalizedPosition, size), size);\n}\n`];\n\nexport var glsl_imod = `\nfloat imod(float x, float y) {\n  return x - y * floor(x / y);\n}\n`;\n\n// Chrome 49 on NVIDIA Quadro K600 gives inexact results when using the built-in dot function.\nexport var glsl_exactDot = `\nfloat exactDot(vec4 a, vec4 b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\nfloat exactDot(vec3 a, vec3 b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n`;\n\nexport function fract(x: number) {\n  return x - Math.floor(x);\n}\n\nexport function step(edge: number, x: number) {\n  return x < edge ? 0 : 1;\n}\n\nexport function mod(x: number, y: number) {\n  return x % y;\n}\n\nexport function exp2(x: number) {\n  return Math.pow(2, x);\n}\n\n\n/* WebGL 1.0 does not provide a convenient way to directly output float values from fragment\n * shaders; only 4-channel uint8 values (represented as floats in the range [0,1]) are supported.\n * Obtaining float values is particularly useful for debugging and unit testing.  This GLSL function\n * encodes a floating point value into a vector of 4 floats in the range [0,1] such that the\n * corresponding uint8 representation is the little endian IEEE 754 32-bit floating point format.\n *\n * Infinity and NaN values are not supported.  This function is not particularly efficient; it is\n * intended to be used only for debugging and testing.\n *\n * The GLSL function packFloatIntoVec4 is based on code posted to StackOverflow by user hrehfeld at\n * http://stackoverflow.com/a/14729074 and user Arjan at http://stackoverflow.com/a/11158534\n * licensed under CC BY-SA 3.0 ( http://creativecommons.org/licenses/by-sa/3.0/ ).\n */\nexport var glsl_packFloat = `\nvec4 packFloatIntoVec4(float f) {\n  float magnitude = abs(f); \n  if (magnitude == 0.0) {\n     return vec4(0,0,0,0);\n  }\n  float sign =  step(0.0, -f);\n  float exponent = floor(log2(magnitude)); \n  float mantissa = magnitude / exp2(exponent); \n  // Denormalized values if all exponent bits are zero\n  if (mantissa < 1.0) {\n     exponent -= 1.0;\n  }\n\n  exponent +=  127.0;\n\n  vec4 result;\n  result[3] = 128.0 * sign + floor(exponent / 2.0);\n  result[2] = 128.0 * mod(exponent, 2.0) +  mod(floor(mantissa * float(128.0)),128.0);\n  result[1] = floor( mod(floor(mantissa* exp2(float(23.0 - 8.0))), exp2(8.0)));\n  result[0] = floor( exp2(23.0)* mod(mantissa, exp2(-15.0)));\n  return result / 255.0;\n}\n`;\n\nexport var glsl_debugFunctions = [glsl_packFloat];\n\nexport function encodeBytesToFloat32(x: ArrayBufferView) {\n  let xBytes = new Uint8Array(x.buffer, x.byteOffset, x.byteLength);\n  let length = xBytes.length;\n  let result = new Float32Array(length);\n  for (let i = 0; i < length; ++i) {\n    result[i] = xBytes[i] / 255;\n  }\n  return result;\n}\n\nexport function setVec4FromUint32(out: Float32Array, x: number) {\n  for (let j = 0; j < 4; ++j) {\n    out[j] = ((x >> (j * 8)) & 0xFF) / 255.0;\n  }\n  return out;\n}\n\nexport function getUint32FromVec4(v: Float32Array): number {\n  return v[0] * 255 + v[1] * 255 * 256 + v[2] * 255 * 256 * 256 + v[3] * 255 * 256 * 256 * 256;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/webgl/shader_lib.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/noselect.css\n ** module id = 68\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/perspective_panel.css\n ** module id = 69\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for NDstore (https://github.com/neurodata/ndstore) servers.\n */\n\nimport {ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {registerDataSourceFactory, CompletionResult, Completion} from 'neuroglancer/datasource/factory';\nimport {DataType, VolumeType, VolumeChunkSpecification} from 'neuroglancer/sliceview/base';\nimport {VolumeChunkSource as GenericVolumeChunkSource, MultiscaleVolumeChunkSource as GenericMultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {StatusMessage} from 'neuroglancer/status';\nimport {applyCompletionOffset, getPrefixMatches, getPrefixMatchesWithDescriptions} from 'neuroglancer/util/completion';\nimport {vec3} from 'neuroglancer/util/geom';\nimport {openShardedHttpRequest, sendHttpRequest} from 'neuroglancer/util/http_request';\nimport {verifyObject, verifyOptionalString, verifyString, parseArray, parseFiniteVec, parseIntVec, stableStringify, parseQueryStringParameters} from 'neuroglancer/util/json';\nimport {cancellableThen, CancellablePromise} from 'neuroglancer/util/promise';\n\nlet serverDataTypes = new Map<string, DataType>();\nserverDataTypes.set('uint8', DataType.UINT8);\nserverDataTypes.set('uint16', DataType.UINT16);\nserverDataTypes.set('uint32', DataType.UINT32);\nserverDataTypes.set('uint64', DataType.UINT64);\n\nlet serverVolumeTypes = new Map<string, VolumeType>();\nserverVolumeTypes.set('image', VolumeType.IMAGE);\nserverVolumeTypes.set('annotation', VolumeType.SEGMENTATION);\n\nconst VALID_ENCODINGS = new Set<string>(['npz', 'raw', 'jpeg']);\n\nexport class VolumeChunkSource extends GenericVolumeChunkSource {\n  constructor(\n      chunkManager: ChunkManager, spec: VolumeChunkSpecification, public hostnames: string[],\n      public key: string, public channel: string, public resolution: string,\n      public encoding: string) {\n    super(chunkManager, spec);\n    this.initializeCounterpart(chunkManager.rpc, {\n      'type': 'ndstore/VolumeChunkSource',\n      'hostnames': hostnames,\n      'key': key,\n      'channel': channel,\n      'resolution': resolution,\n      'encoding': encoding,\n    });\n  }\n  toString () {\n    return `ndstore:volume:${this.hostnames[0]}/${this.key}/${this.channel}/${this.resolution}/${this.encoding}`;\n  }\n};\n\n\nexport class MultiscaleVolumeChunkSource implements GenericMultiscaleVolumeChunkSource {\n  dataType: DataType;\n  numChannels: number;\n  volumeType: VolumeType;\n\n  /**\n   * Ndstore channel name.\n   */\n  channel: string;\n\n  constructor(\n      public hostnames: string[], public key: string, public response: any, channel: string|undefined,\n      public parameters: {[index: string]: any}) {\n    let channelsObject = response['channels'];\n    let channelNames = Object.keys(channelsObject);\n    if (channel === undefined) {\n      if (channelNames.length !== 1) {\n        throw new Error(`Dataset contains multiple channels: ${JSON.stringify(channelNames)}`);\n      }\n      channel = channelNames[0];\n    } else if (channelNames.indexOf(channel) === -1) {\n      throw new Error(\n          `Specified channel ${JSON.stringify(channel)} is not one of the supported channels ${JSON.stringify(channelNames)}`);\n    }\n    this.channel = channel;\n    let channelObject = channelsObject[channel];\n    let volumeType = serverVolumeTypes.get(channelObject['channel_type']);\n    if (volumeType === undefined) {\n      volumeType = VolumeType.UNKNOWN;\n    }\n    this.volumeType = volumeType;\n    let dataTypeStr = channelObject['datatype'];\n    let dataType = this.dataType = serverDataTypes.get(dataTypeStr);\n    if (dataType === undefined) {\n      throw new Error(`Unsupported data type ${JSON.stringify(dataTypeStr)}`);\n    }\n    this.numChannels = 1;\n  }\n\n  getSources(chunkManager: ChunkManager) {\n    let sources: VolumeChunkSource[][] = [];\n    const {response, volumeType} = this;\n    const datasetObject = response['dataset'];\n    let encoding = verifyOptionalString(this.parameters['encoding']);\n    if (encoding === undefined) {\n      encoding = volumeType === VolumeType.IMAGE ? 'jpeg' : 'npz';\n    } else {\n      if (!VALID_ENCODINGS.has(encoding)) {\n        throw new Error(`Invalid encoding: ${JSON.stringify(encoding)}.`);\n      }\n    }\n    for (let resolution of Object.keys(datasetObject['neariso_imagesize'])) {\n      let imageSize = parseIntVec(vec3.create(), datasetObject['neariso_imagesize'][resolution]);\n      let voxelSize = parseFiniteVec(vec3.create(), datasetObject['neariso_voxelres'][resolution]);\n      let alternatives: VolumeChunkSource[] = [];\n      sources.push(alternatives);\n      // The returned offset for downsampled resolutions can have non-integer components.  It\n      // appears that the true offset is obtained by rounding up.\n      let origLowerVoxelBound =\n          parseFiniteVec(vec3.create(), datasetObject['neariso_offset'][resolution]);\n      let lowerVoxelBound = vec3.create();\n      let upperVoxelBound = vec3.create();\n      for (let i = 0; i < 3; ++i) {\n        let origLower = origLowerVoxelBound[i];\n        lowerVoxelBound[i] = Math.ceil(origLower);\n        upperVoxelBound[i] = Math.floor(origLower + imageSize[i]);\n      }\n      for (let spec of VolumeChunkSpecification.getDefaults({\n             volumeType,\n             voxelSize,\n             dataType: this.dataType, lowerVoxelBound, upperVoxelBound\n           })) {\n        let cacheKey = stableStringify(\n            {'spec': spec, key: this.key, channel: this.channel, resolution: resolution});\n        alternatives.push(chunkManager.getChunkSource(\n            VolumeChunkSource, cacheKey,\n            () => new VolumeChunkSource(\n                chunkManager, spec, this.hostnames, this.key, this.channel, resolution, encoding)));\n      }\n    }\n    return sources;\n  }\n\n  /**\n   * Meshes are not supported.\n   */\n  getMeshSource(chunkManager: ChunkManager): null { return null; }\n};\n\nconst pathPattern = /^([^\\/?]+)(?:\\/([^\\/?]+))?(?:\\?(.*))?$/;\n\nlet existingVolumeResponses = new Map<string, Promise<any>>();\nexport function getVolumeInfo(hostnames: string[], token: string) {\n  let fullKey = JSON.stringify({'hostnames': hostnames, 'token': token});\n  let result = existingVolumeResponses.get(fullKey);\n  if (result !== undefined) {\n    return result;\n  }\n  let promise = sendHttpRequest(openShardedHttpRequest(hostnames, `/ocp/ca/${token}/info/`), 'json');\n  existingVolumeResponses.set(fullKey, promise);\n  return promise;\n}\n\nlet existingVolumes = new Map<string, Promise<MultiscaleVolumeChunkSource>>();\nexport function getShardedVolume(hostnames: string[], path: string) {\n  let match = path.match(pathPattern);\n  if (match === null) {\n    throw new Error(`Invalid volume path ${JSON.stringify(path)}`);\n  }\n  // Warning: If additional arguments are added, fullKey should be updated as well.\n  let fullKey = stableStringify({'hostnames': hostnames, 'path': path});\n  let existingResult = existingVolumes.get(fullKey);\n  if (existingResult !== undefined) {\n    return existingResult;\n  }\n  let key = match[1];\n  let channel = match[2];\n  let parameters = parseQueryStringParameters(match[3] || '');\n  let promise = getVolumeInfo(hostnames, key)\n                    .then(\n                        response => new MultiscaleVolumeChunkSource(\n                            hostnames, key, response, channel, parameters));\n  existingVolumes.set(fullKey, promise);\n  return promise;\n}\n\nconst urlPattern = /^((?:http|https):\\/\\/[^\\/?]+)\\/(.*)$/;\n\nexport function getVolume(path: string) {\n  let match = path.match(urlPattern);\n  if (match === null) {\n    throw new Error(`Invalid ndstore volume path: ${JSON.stringify(path)}`);\n  }\n  return getShardedVolume([match[1]], match[2]);\n}\n\nconst publicTokenPromises = new Map<string, Promise<string[]>>();\nexport function getPublicTokens(hostnames: string[]) {\n  let key = JSON.stringify(hostnames);\n  let result = publicTokenPromises.get(key);\n  if (result !== undefined) {\n    return result;\n  }\n  let newResult =\n      sendHttpRequest(openShardedHttpRequest(hostnames, '/ocp/ca/public_tokens/'), 'json')\n          .then(value => parseArray(value, verifyString));\n  publicTokenPromises.set(key, newResult);\n  return newResult;\n}\n\nexport function tokenAndChannelCompleter(hostnames: string[], path: string): CancellablePromise<CompletionResult> {\n  let channelMatch = path.match(/^(?:([^\\/]+)(?:\\/([^\\/]*))?)?$/);\n  if (channelMatch === null) {\n    // URL has incorrect format, don't return any results.\n    return Promise.reject<CompletionResult>(null);\n  }\n  if (channelMatch[2] === undefined) {\n    let keyPrefix = channelMatch[1] || '';\n    // Try to complete the token.\n    return getPublicTokens(hostnames).then(tokens => {\n      return {\n        offset: 0,\n        completions:\n            getPrefixMatchesWithDescriptions(keyPrefix, tokens, x => x + '/', x => undefined)\n      };\n    });\n  }\n  return cancellableThen(getVolumeInfo(hostnames, channelMatch[1]), response => {\n    let completions: Completion[] = [];\n    if (typeof response === 'object' && response !== null && !Array.isArray(response)) {\n      let channelsObject = response['channels'];\n      if (typeof channelsObject === 'object' && channelsObject !== null &&\n          !Array.isArray(channelsObject)) {\n        let channelNames = Object.keys(channelsObject);\n        completions =\n            getPrefixMatchesWithDescriptions(channelMatch[2], channelNames, x => x, x => {\n              let channelObject = channelsObject[x];\n              return `${channelObject['channel_type']} (${channelObject['datatype']})`;\n\n            });\n      }\n    }\n    return {offset: channelMatch[1].length + 1, completions};\n  });\n}\n\nexport function volumeCompleter(url: string): CancellablePromise<CompletionResult> {\n  let match = url.match(urlPattern);\n  if (match === null) {\n    // We don't yet have a full hostname.\n    return Promise.reject<CompletionResult>(null);\n  }\n  let hostnames = [match[1]];\n  let path = match[2];\n  return cancellableThen(\n      tokenAndChannelCompleter(hostnames, path),\n      completions => applyCompletionOffset(match[1].length + 1, completions));\n}\n\nregisterDataSourceFactory('ndstore', {\n  description: 'NDstore',\n  volumeCompleter: volumeCompleter,\n  getVolume: getVolume,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/ndstore/frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for DVID (https://github.com/janelia-flyem/dvid) servers.\n */\n\nimport {ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {VolumeChunkSourceParameters, volumeSourceToString, TileChunkSourceParameters, tileSourceToString, TileEncoding} from 'neuroglancer/datasource/dvid/base';\nimport {registerDataSourceFactory, CompletionResult} from 'neuroglancer/datasource/factory';\nimport {DataType, VolumeType, VolumeChunkSpecification} from 'neuroglancer/sliceview/base';\nimport {ChunkLayout} from 'neuroglancer/sliceview/chunk_layout';\nimport {VolumeChunkSource as GenericVolumeChunkSource, MultiscaleVolumeChunkSource as GenericMultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {StatusMessage} from 'neuroglancer/status';\nimport {applyCompletionOffset, getPrefixMatchesWithDescriptions} from 'neuroglancer/util/completion';\nimport {vec3, Vec3} from 'neuroglancer/util/geom';\nimport {openShardedHttpRequest, sendHttpRequest} from 'neuroglancer/util/http_request';\nimport {parseFixedLengthArray, parseIntVec, stableStringify, verifyObject, verifyObjectProperty, verifyInt, verifyPositiveInt, verifyString, parseArray, verifyMapKey, verifyFinitePositiveFloat, verifyObjectAsMap} from 'neuroglancer/util/json';\nimport {CancellablePromise} from 'neuroglancer/util/promise';\n\nlet serverDataTypes = new Map<string, DataType>();\nserverDataTypes.set('uint8', DataType.UINT8);\nserverDataTypes.set('uint32', DataType.UINT32);\nserverDataTypes.set('uint64', DataType.UINT64);\n\nexport class DataInstanceBaseInfo {\n  get typeName(): string { return this.obj['TypeName']; }\n\n  constructor (public obj: any) {\n    verifyObject(obj);\n    verifyObjectProperty(obj, 'TypeName', verifyString);\n  }\n};\n\nexport class DataInstanceInfo {\n  constructor(public obj: any, public name: string, public base: DataInstanceBaseInfo) {}\n};\n\nexport class VolumeChunkSource extends GenericVolumeChunkSource {\n  constructor(\n    chunkManager: ChunkManager, spec: VolumeChunkSpecification, public parameters: VolumeChunkSourceParameters) {\n    super(chunkManager, spec);\n    this.initializeCounterpart(chunkManager.rpc, {\n      'type': 'dvid/VolumeChunkSource',\n      'parameters': parameters,\n    });\n  }\n  toString () {\n    return volumeSourceToString(this.parameters);\n  }\n};\n\nexport class VolumeDataInstanceInfo extends DataInstanceInfo {\n  dataType: DataType;\n  lowerVoxelBound: Vec3;\n  upperVoxelBound: Vec3;\n  voxelSize: Vec3;\n  numChannels: number;\n  numLevels: number;\n\n  constructor(obj: any, name: string, base: DataInstanceBaseInfo, public volumeType: VolumeType, keys: Array<string>) {\n    super(obj, name, base);\n    let extended = verifyObjectProperty(obj, 'Extended', verifyObject);\n    let extendedValues = verifyObjectProperty(extended, 'Values', x => parseArray(x, verifyObject));\n    if (extendedValues.length < 1) {\n      throw new Error(\n          'Expected Extended.Values property to have length >= 1, but received: ${JSON.stringify(extendedValues)}.');\n    }\n    this.numLevels = 1;\n\n    let keyset = new Set<string>(keys);\n        while (true) {\n        if (keyset.has(name + \"_\" + this.numLevels.toString())) {\n            this.numLevels += 1;    \n            } else {\n            break;\n            }\n    }\n\n    this.dataType =\n        verifyObjectProperty(extendedValues[0], 'DataType', x => verifyMapKey(x, serverDataTypes));\n    this.lowerVoxelBound =\n        verifyObjectProperty(extended, 'MinPoint', x => parseIntVec(vec3.create(), x));\n    this.upperVoxelBound =\n        verifyObjectProperty(extended, 'MaxPoint', x => parseIntVec(vec3.create(), x));\n    this.voxelSize = verifyObjectProperty(\n        extended, 'VoxelSize',\n        x => parseFixedLengthArray(vec3.create(), x, verifyFinitePositiveFloat));\n    this.numChannels = 1;\n  }\n\n\n  getSources(chunkManager: ChunkManager, parameters: VolumeChunkSourceParameters) {\n    let sources: VolumeChunkSource[][] = [];\n    // for (let level of levelsArr) {\n    for (let level = 0; level < this.numLevels; ++level) {\n        let voxelSize = vec3.clone(this.voxelSize);\n        let chunkDataSize = vec3.fromValues(64, 64, 64);\n        voxelSize[0] = voxelSize[0]*Math.pow(2,level)\n        voxelSize[1] = voxelSize[1]*Math.pow(2,level)\n        voxelSize[2] = voxelSize[2]*Math.pow(2,level)\n        \n        let chunkLayout = ChunkLayout.get(vec3.multiply(vec3.create(), voxelSize, chunkDataSize));\n        let lowerVoxelBound = vec3.create(), upperVoxelBound = vec3.create();\n        for (let i = 0; i < 3; ++i) {\n          lowerVoxelBound[i] = Math.floor(this.lowerVoxelBound[i] * (this.voxelSize[i] / voxelSize[i]));\n          upperVoxelBound[i] = Math.ceil(this.upperVoxelBound[i] * (this.voxelSize[i] / voxelSize[i]));\n        }\n        let spec = new VolumeChunkSpecification(\n            chunkLayout, chunkDataSize, this.numChannels, this.dataType, lowerVoxelBound,\n          upperVoxelBound);\n        let volParameters: VolumeChunkSourceParameters = {\n          'baseUrls': parameters.baseUrls,\n          'nodeKey': parameters.nodeKey,\n          'dataInstanceKey': parameters.dataInstanceKey,\n          'level2': level.toString(),\n        };\n        let alternatives = [chunkManager.getChunkSource(\n          VolumeChunkSource, stableStringify(volParameters),\n          () => new VolumeChunkSource(chunkManager, spec, volParameters))];\n        \n        sources.push(alternatives);\n    }\n    return sources;\n  }\n};\n\nexport class TileLevelInfo {\n  /**\n   * Resolution of the two downsampled dimensions in the tile plane.  The tile depth is equal to the\n   * base voxel size in that dimension.\n   */\n  resolution: Vec3;\n  tileSize: Vec3;\n\n  constructor (obj: any) {\n    verifyObject(obj);\n    this.resolution = verifyObjectProperty(\n      obj, 'Resolution', x => parseFixedLengthArray(vec3.create(), x, verifyFinitePositiveFloat));\n    this.tileSize = verifyObjectProperty(\n      obj, 'TileSize', x => parseFixedLengthArray(vec3.create(), x, verifyPositiveInt));\n  }\n};\n\n/**\n * Dimensions for which tiles are computed.\n *\n * FIXME: DVID does not seem to properly indicate which dimensions are available.\n */\nconst TILE_DIMS = [\n  [0, 1, 2],\n   [0, 2, 1],\n   [1, 2, 0],\n];\n\nexport class TileChunkSource extends GenericVolumeChunkSource {\n  constructor(\n    chunkManager: ChunkManager, spec: VolumeChunkSpecification, public parameters: TileChunkSourceParameters) {\n    super(chunkManager, spec);\n    this.initializeCounterpart(chunkManager.rpc, {\n      'type': 'dvid/TileChunkSource',\n      'parameters': parameters,\n    });\n  }\n  toString () {\n    return tileSourceToString(this.parameters);\n  }\n};\n\nexport class TileDataInstanceInfo extends DataInstanceInfo {\n  get dataType () { return DataType.UINT8; }\n  get volumeType () { return VolumeType.IMAGE; }\n  get numChannels () { return 1; }\n\n  encoding: TileEncoding;\n\n  /**\n   * Base voxel size (nm).\n   */\n  voxelSize: Vec3;\n\n  levels: Map<string, TileLevelInfo>;\n\n  lowerVoxelBound: Vec3;\n  upperVoxelBound: Vec3;\n\n  constructor (obj: any, name: string, base: DataInstanceBaseInfo) {\n    super(obj, name, base);\n    let extended = verifyObjectProperty(obj, 'Extended', verifyObject);\n    this.levels = verifyObjectProperty(extended, 'Levels', x => verifyObjectAsMap(x, y => new TileLevelInfo(y)));\n    let baseLevel = this.levels.get('0');\n    if (baseLevel === undefined) {\n      throw new Error(`Level 0 is not defined.`);\n    }\n    this.voxelSize = baseLevel.resolution;\n    let minTileCoord = verifyObjectProperty(\n        extended, 'MinTileCoord', x => parseFixedLengthArray(vec3.create(), x, verifyInt));\n    let maxTileCoord = verifyObjectProperty(\n        extended, 'MaxTileCoord', x => parseFixedLengthArray(vec3.create(), x, verifyInt));\n    this.lowerVoxelBound = vec3.multiply(vec3.create(), baseLevel.tileSize, minTileCoord);\n    this.upperVoxelBound = vec3.multiply(vec3.create(), baseLevel.tileSize, maxTileCoord);\n\n    let encodingNumber = verifyObjectProperty(extended, 'Encoding', x => x);\n    switch (encodingNumber) {\n      case 2:\n        this.encoding = TileEncoding.JPEG;\n        break;\n      default:\n        throw new Error(`Unsupported tile encoding: ${JSON.stringify(encodingNumber)}.`);\n    }\n  }\n\n  getSources(chunkManager: ChunkManager, parameters: VolumeChunkSourceParameters): GenericVolumeChunkSource[][] {\n    let sources: TileChunkSource[][] = [];\n    for (let [level, levelInfo] of this.levels) {\n      let alternatives = TILE_DIMS.map(dims => {\n        let voxelSize = vec3.clone(this.voxelSize);\n        let chunkDataSize = vec3.fromValues(1, 1, 1);\n        for (let dim of dims) {\n          voxelSize[dim] = levelInfo.resolution[dim];\n          chunkDataSize[dim] = levelInfo.tileSize[dim];\n        }\n        let chunkLayout = ChunkLayout.get(vec3.multiply(vec3.create(), voxelSize, chunkDataSize));\n        let lowerVoxelBound = vec3.create(), upperVoxelBound = vec3.create();\n        for (let i = 0; i < 3; ++i) {\n          lowerVoxelBound[i] = Math.floor(this.lowerVoxelBound[i] * (this.voxelSize[i] / voxelSize[i]));\n          upperVoxelBound[i] = Math.ceil(this.upperVoxelBound[i] * (this.voxelSize[i] / voxelSize[i]));\n        }\n        let spec = new VolumeChunkSpecification(\n            chunkLayout, chunkDataSize, this.numChannels, this.dataType, lowerVoxelBound,\n          upperVoxelBound);\n        let tileParameters: TileChunkSourceParameters = {\n          'baseUrls': parameters.baseUrls,\n          'nodeKey': parameters.nodeKey,\n          'level2': '0',\n          'dataInstanceKey': parameters.dataInstanceKey,\n          'encoding': this.encoding,\n          'level': level,\n          'dims': `${dims[0]}_${dims[1]}`,\n        };\n        return chunkManager.getChunkSource(\n          VolumeChunkSource, stableStringify(tileParameters),\n          () => new TileChunkSource(chunkManager, spec, tileParameters));\n      });\n      sources.push(alternatives);\n    }\n    return sources;\n  }\n};\n\nexport function parseDataInstance(obj: any, name: string, keys: Array<string>): DataInstanceInfo {\n  verifyObject(obj);\n  let baseInfo = verifyObjectProperty(obj, 'Base', x => new DataInstanceBaseInfo(x));\n  switch (baseInfo.typeName) {\n  case 'uint8blk':\n  case 'grayscale8':\n    return new VolumeDataInstanceInfo(obj, name, baseInfo, VolumeType.IMAGE, keys);\n  case 'imagetile':\n    return new TileDataInstanceInfo(obj, name, baseInfo);\n  case 'labels64':\n  case 'labelblk':\n    return new VolumeDataInstanceInfo(obj, name, baseInfo, VolumeType.SEGMENTATION, keys);\n  default:\n    throw new Error(`DVID data type ${JSON.stringify(baseInfo.typeName)} is not supported.`);\n  }\n}\n\nexport class RepositoryInfo {\n  alias: string;\n  description: string;\n  errors: string[] = [];\n  dataInstances = new Map<string, DataInstanceInfo>();\n  uuid: string;\n  nodes = new Set<string>();\n  constructor (obj: any) {\n  if (obj===undefined) {\n        return;\n    }\n    verifyObject(obj);\n    this.alias = verifyObjectProperty(obj, 'Alias', verifyString);\n    this.description = verifyObjectProperty(obj, 'Description', verifyString);\n    let dataInstanceObjs = verifyObjectProperty(obj, 'DataInstances', verifyObject);\n    for (let key of Object.keys(dataInstanceObjs)) {\n      try {\n        this.dataInstances.set(key, parseDataInstance(dataInstanceObjs[key], key, Object.keys(dataInstanceObjs)));\n      } catch (parseError) {\n        let message = `Failed to parse data instance ${JSON.stringify(key)}: ${parseError.message}`;\n        console.log(message);\n        this.errors.push(message);\n      }\n    }\n    let dagObj = verifyObjectProperty(obj, 'DAG', verifyObject);\n    let nodeObjs = verifyObjectProperty(dagObj, 'Nodes', verifyObject);\n    for (let key of Object.keys(nodeObjs)) {\n        this.nodes.add(key);\n    }\n  }\n};\n\nexport function parseRepositoriesInfo(obj: any) {\n  try {\n    let result = verifyObjectAsMap(obj, x => new RepositoryInfo(x));\n   \n    let temp = new Map<string, RepositoryInfo>();\n\n    for (let [key, info] of result) {\n        temp.set(key,info);\n        for (let key2 of info.nodes) {\n            if (key2 != key) {\n                let rep = new RepositoryInfo(undefined);\n                rep.alias = info.alias;\n                rep.description = info.description;\n                rep.errors = info.errors;\n                rep.dataInstances = info.dataInstances;\n\n                temp.set(key2, rep );\n            }\n        }\n    } \n    \n    for (let [key, info] of temp) {\n        info.uuid = key; \n    }\n    // ?! add pointers to new repos\n\n\n\n    return temp;\n  } catch (parseError) {\n    throw new Error(`Failed to parse DVID repositories info: ${parseError.message}`);\n  }\n}\n\nexport class ServerInfo {\n  repositories: Map<string, RepositoryInfo>;\n  constructor(obj: any) {\n    this.repositories = parseRepositoriesInfo(obj);\n  }\n\n  getNode (nodeKey: string) {\n    // FIXME: Support non-root nodes.\n    let matches: string[] = [];\n    for (let key of this.repositories.keys()) {\n      if (key.startsWith(nodeKey)) {\n        matches.push(key);\n      }\n      }\n      // ?!\n    if (matches.length !== 1) {\n        throw new Error(`Node key ${JSON.stringify(nodeKey)} matches ${JSON.stringify(matches)} nodes.`);\n      }\n    return this.repositories.get(nodeKey);\n  }\n};\n\nconst cachedServerInfo = new Map<string, Promise<ServerInfo>>();\nexport function getServerInfo(baseUrls: string[]) {\n  let cacheKey = stableStringify(baseUrls);\n  let result = cachedServerInfo.get(cacheKey);\n  if (result === undefined) {\n    result = sendHttpRequest(openShardedHttpRequest(baseUrls, '/api/repos/info', 'GET'), 'json')\n                 .then(response => new ServerInfo(response));\n    const description = `repository info for DVID server ${baseUrls[0]}`;\n    StatusMessage.forPromise(result, {\n      initialMessage: `Retrieving ${description}.`,\n      delay: true,\n      errorPrefix: `Error retrieving ${description}: `,\n    });\n    cachedServerInfo.set(cacheKey, result);\n  }\n  return result;\n}\n\nexport class MultiscaleVolumeChunkSource implements GenericMultiscaleVolumeChunkSource {\n  get dataType () { return this.info.dataType; }\n  get numChannels () { return this.info.numChannels; }\n  get volumeType () { return this.info.volumeType; }\n\n  constructor(\n      public baseUrls: string[], public nodeKey: string, public dataInstanceKey: string, public level2: string,\n      public info: VolumeDataInstanceInfo|TileDataInstanceInfo) {}\n\n  getSources(chunkManager: ChunkManager) {\n    return this.info.getSources(chunkManager, {\n                    'baseUrls': this.baseUrls,\n                    'nodeKey': this.nodeKey,\n                    'dataInstanceKey': this.dataInstanceKey,\n                    'level2': this.level2,\n    });\n  }\n\n  /**\n   * Meshes are not supported.\n   */\n  getMeshSource(chunkManager: ChunkManager): null { return null; }\n};\n\nlet existingVolumes = new Map<string, MultiscaleVolumeChunkSource>();\nexport function getShardedVolume(baseUrls: string[], nodeKey: string, dataInstanceKey: string, level2: string) {\n  return getServerInfo(baseUrls).then(\n    serverInfo => {\n      let repositoryInfo = serverInfo.getNode(nodeKey);\n      let dataInstanceInfo = repositoryInfo.dataInstances.get(dataInstanceKey);\n      if (!(dataInstanceInfo instanceof VolumeDataInstanceInfo) &&\n          !(dataInstanceInfo instanceof TileDataInstanceInfo)) {\n        throw new Error(`Invalid data instance ${dataInstanceKey}.`);\n      }\n      let cacheKey = stableStringify({\n        'baseUrls': baseUrls,\n        'nodeKey':repositoryInfo.uuid,\n        'dataInstanceKey': dataInstanceKey,\n        'level2': level2,\n      });\n      let result = existingVolumes.get(cacheKey);\n      if (result === undefined) {\n        result = new MultiscaleVolumeChunkSource(\n          baseUrls, repositoryInfo.uuid, dataInstanceKey, level2, dataInstanceInfo);\n        existingVolumes.set(cacheKey, result);\n      }\n      return result;\n    });\n}\n\nconst urlPattern = /^((?:http|https):\\/\\/[^\\/]+)\\/([^\\/]+)\\/([^\\/]+)$/;\n\nexport function getVolume(url: string) {\n  let match = url.match(urlPattern);\n  if (match === null) {\n    throw new Error(`Invalid DVID URL: ${JSON.stringify(url)}.`);\n  }\n  return getShardedVolume([match[1]], match[2], match[3], '0');\n}\n\nexport function completeInstanceName(repositoryInfo: RepositoryInfo, prefix: string): CompletionResult {\n  return {\n    offset: 0,\n    completions: getPrefixMatchesWithDescriptions<DataInstanceInfo>(\n        prefix, repositoryInfo.dataInstances.values(), instance => instance.name,\n        instance => { return `${instance.base.typeName}`; })\n  };\n}\n\nexport function completeNodeAndInstance(serverInfo: ServerInfo, prefix: string): CompletionResult {\n  let match = prefix.match(/^(?:([^\\/]+)(?:\\/([^\\/]*))?)?$/);\n  if (match === null) {\n    throw new Error(`Invalid DVID URL syntax.`);\n  }\n  if (match[2] === undefined) {\n    // Try to complete the node name.\n    return {\n      offset: 0,\n      completions: getPrefixMatchesWithDescriptions<RepositoryInfo>(\n          prefix, serverInfo.repositories.values(), repository => repository.uuid + '/',\n          repository => `${repository.alias}: ${repository.description}`)\n    };\n  }\n  let nodeKey = match[1];\n  let repository = serverInfo.getNode(nodeKey);\n  return applyCompletionOffset(nodeKey.length + 1, completeInstanceName(repository, match[2]));\n}\n\nexport function volumeCompleter(url: string): CancellablePromise<CompletionResult> {\n  const curUrlPattern = /^((?:http|https):\\/\\/[^\\/]+)\\/(.*)$/;\n  let match = url.match(curUrlPattern);\n  if (match === null) {\n    // We don't yet have a full hostname.\n    return Promise.reject<CompletionResult>(null);\n  }\n  let baseUrl = match[1];\n  let baseUrls = [baseUrl];\n  let path = match[2];\n  return getServerInfo(baseUrls).then(\n      serverInfo =>\n          applyCompletionOffset(baseUrl.length + 1, completeNodeAndInstance(serverInfo, path)));\n}\n\nregisterDataSourceFactory('dvid', {\n  description: 'DVID',\n  volumeCompleter: volumeCompleter,\n  getVolume: getVolume,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/dvid/frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface VolumeChunkSourceParameters {\n  baseUrls: string[];\n  nodeKey: string;\n  dataInstanceKey: string;\n  level2: string;\n};\n\nexport enum TileEncoding {\n  JPEG\n};\n\nexport interface TileChunkSourceParameters extends VolumeChunkSourceParameters {\n  dims: string;\n  level: string;\n  encoding: TileEncoding;\n};\n\nexport function volumeSourceToString(parameters: VolumeChunkSourceParameters) {\n  return `dvid:volume:${parameters['baseUrls'][0]}/${parameters['nodeKey']}/${parameters['dataInstanceKey']}/${parameters['level2']}`;\n}\n\nexport function tileSourceToString(parameters: TileChunkSourceParameters) {\n  return `dvid:volume:${parameters['baseUrls'][0]}/${parameters['nodeKey']}/${parameters['dataInstanceKey']}/${parameters['dims']}/${parameters['level']}/${TileEncoding[parameters['encoding']]}`;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/dvid/base.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Convenience interface for accessing openconnecto.me server.\n */\n\nimport {registerDataSourceFactory} from 'neuroglancer/datasource/factory';\nimport {getShardedVolume, tokenAndChannelCompleter} from 'neuroglancer/datasource/ndstore/frontend';\n\nconst HOSTNAMES = ['http://openconnecto.me', 'http://www.openconnecto.me'];\n\nexport function getVolume(path: string) {\n  return getShardedVolume(HOSTNAMES, path);\n}\n\nexport function volumeCompleter(url: string) {\n  return tokenAndChannelCompleter(HOSTNAMES, url);\n}\n\nregisterDataSourceFactory('openconnectome', {\n  description: 'NDstore server hosted at openconnecto.me',\n  getVolume,\n  volumeCompleter,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/openconnectome/frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {VolumeChunkEncoding} from 'neuroglancer/datasource/precomputed/base';\nimport {DataType, VolumeType, VolumeChunkSpecification} from 'neuroglancer/sliceview/base';\nimport {VolumeChunkSource as GenericVolumeChunkSource, MultiscaleVolumeChunkSource as GenericMultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {MeshSource as GenericMeshSource} from 'neuroglancer/mesh/frontend';\nimport {ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {registerDataSourceFactory} from 'neuroglancer/datasource/factory';\nimport {vec3, Vec3} from 'neuroglancer/util/geom';\nimport {parseFiniteVec, parseIntVec, parseArray, stableStringify} from 'neuroglancer/util/json';\nimport {openShardedHttpRequest, sendHttpRequest, parseSpecialUrl} from 'neuroglancer/util/http_request';\n\nlet serverDataTypes = new Map<string, DataType>();\nserverDataTypes.set('uint8', DataType.UINT8);\nserverDataTypes.set('uint32', DataType.UINT32);\nserverDataTypes.set('uint64', DataType.UINT64);\n\nlet serverVolumeTypes = new Map<string, VolumeType>();\nserverVolumeTypes.set('image', VolumeType.IMAGE);\nserverVolumeTypes.set('segmentation', VolumeType.SEGMENTATION);\n\nlet serverChunkEncodings = new Map<string, VolumeChunkEncoding>();\nserverChunkEncodings.set('raw', VolumeChunkEncoding.RAW);\nserverChunkEncodings.set('jpeg', VolumeChunkEncoding.JPEG);\nserverChunkEncodings.set('compressed_segmentation', VolumeChunkEncoding.COMPRESSED_SEGMENTATION);\n\nexport class VolumeChunkSource extends GenericVolumeChunkSource {\n  constructor(\n    chunkManager: ChunkManager, spec: VolumeChunkSpecification, public baseUrls: string[]|string, public path: string,\n    public encoding: VolumeChunkEncoding) {\n    super(chunkManager, spec);\n    this.initializeCounterpart(chunkManager.rpc, {\n      'type': 'precomputed/VolumeChunkSource',\n      'baseUrls': baseUrls,\n      'path': path,\n      'encoding': encoding,\n    });\n  }\n\n  toString () {\n    return `precomputed:volume:${this.baseUrls[0]}/${this.path}`;\n  }\n};\n\nclass ScaleInfo {\n  key: string;\n  encoding: VolumeChunkEncoding;\n  resolution: Vec3;\n  voxelOffset: Vec3;\n  size: Vec3;\n  chunkSizes: Vec3[];\n  compressedSegmentationBlockSize: Vec3|undefined;\n  constructor (response: any) {\n    if (typeof response !== 'object' || Array.isArray(response)) {\n      throw new Error('Failed to parse volume metadata.');\n    }\n    this.resolution = parseFiniteVec(vec3.create(), response['resolution']);\n    this.voxelOffset = parseIntVec(vec3.create(), response['voxel_offset']);\n    this.size = parseIntVec(vec3.create(), response['size']);\n    this.chunkSizes = parseArray(response['chunk_sizes'], x => parseFiniteVec(vec3.create(), x));\n    if (this.chunkSizes.length === 0) {\n      throw new Error('No chunk sizes specified.');\n    }\n    let encodingStr = response['encoding'];\n    let encoding = serverChunkEncodings.get(encodingStr);\n    if (encoding === undefined) {\n      throw new Error(`Invalid chunk encoding: ${JSON.stringify(encodingStr)}`);\n    }\n    this.encoding = encoding;\n    if (encoding === VolumeChunkEncoding.COMPRESSED_SEGMENTATION) {\n      this.compressedSegmentationBlockSize = parseIntVec(vec3.create(), response['compressed_segmentation_block_size']);\n    }\n    this.key = response['key'];\n    if (typeof this.key !== 'string') {\n      throw new Error('No key specified.');\n    }\n  }\n};\n\nexport class MultiscaleVolumeChunkSource implements GenericMultiscaleVolumeChunkSource {\n  dataType: DataType;\n  numChannels: number;\n  volumeType: VolumeType;\n  mesh: string|undefined;\n  scales: ScaleInfo[];\n\n  getMeshSource (chunkManager: ChunkManager) {\n    let {mesh} = this;\n    if (mesh === undefined) {\n      return null;\n    }\n    return getShardedMeshSource(chunkManager, this.baseUrls, `${this.path}/${mesh}`, /*lod=*/0);\n  }\n\n  constructor(public baseUrls: string[], public path: string, private response: any) {\n    if (typeof response !== 'object' || Array.isArray(response)) {\n      throw new Error('Failed to parse volume metadata.');\n    }\n    let dataTypeStr = response['data_type'];\n    let dataType = serverDataTypes.get(dataTypeStr);\n    if (dataType === undefined) {\n      throw new Error(`Invalid data type: ${JSON.stringify(dataTypeStr)}`);\n    }\n    let numChannels = response['num_channels'];\n    if (typeof numChannels !== 'number') {\n      throw new Error('Invalid number of channels.');\n    }\n    this.numChannels = numChannels;\n    this.dataType = dataType;\n    let volumeTypeStr = response['type'];\n    let volumeType = serverVolumeTypes.get(volumeTypeStr);\n    if (volumeType === undefined) {\n      throw new Error(`Invalid volume type: ${JSON.stringify(volumeTypeStr)}`);\n    }\n    this.volumeType = volumeType;\n\n    let meshStr = response['mesh'];\n    if (meshStr !== undefined && typeof meshStr !== 'string') {\n      throw new Error('Invalid \"mesh\" field.');\n    }\n    this.mesh = meshStr;\n    this.scales = parseArray(response['scales'], x => new ScaleInfo(x));\n  }\n\n  getSources(chunkManager: ChunkManager) {\n    return this.scales.map(scaleInfo => {\n      return Array\n          .from(VolumeChunkSpecification.getDefaults({\n            voxelSize: scaleInfo.resolution,\n            dataType: this.dataType,\n            numChannels: this.numChannels,\n            lowerVoxelBound: scaleInfo.voxelOffset,\n            upperVoxelBound: vec3.add(vec3.create(), scaleInfo.voxelOffset, scaleInfo.size),\n            volumeType: this.volumeType,\n            chunkDataSizes: scaleInfo.chunkSizes,\n            compressedSegmentationBlockSize: scaleInfo.compressedSegmentationBlockSize\n          }))\n          .map(spec => {\n            let path = `${this.path}/${scaleInfo.key}`;\n            let cacheKey = stableStringify({\n              'spec': spec,\n              'baseUrls': this.baseUrls,\n              'path': path,\n              'encoding': scaleInfo.encoding\n            });\n            return chunkManager.getChunkSource(\n                VolumeChunkSource, cacheKey,\n                () => new VolumeChunkSource(\n                    chunkManager, spec, this.baseUrls, path, scaleInfo.encoding));\n          });\n    });\n  }\n};\n\nexport class MeshSource extends GenericMeshSource {\n  constructor(chunkManager: ChunkManager, public baseUrls: string|string[], public path: string, public lod: number) {\n    super(chunkManager);\n    this.initializeCounterpart(\n        this.chunkManager.rpc,\n        {'type': 'precomputed/MeshSource', 'baseUrls': baseUrls, 'path': path, 'lod': lod});\n  }\n  toString () {\n    return `precomputed:mesh:${this.baseUrls[0]}/${this.path}`;\n  }\n};\n\nexport function getShardedMeshSource(chunkManager: ChunkManager, baseUrls: string[], path: string, lod: number) {\n  return chunkManager.getChunkSource(\n      MeshSource, JSON.stringify({'baseUrls': baseUrls, 'path': path, 'lod': lod}),\n    () => new MeshSource(chunkManager, baseUrls, path, lod));\n}\n\nexport function getMeshSource(chunkManager: ChunkManager, url: string, lod: number) {\n  const [baseUrls, path] = parseSpecialUrl(url);\n  return getShardedMeshSource(chunkManager, baseUrls, path, lod);\n}\n\nlet existingVolumes = new Map<string, Promise<MultiscaleVolumeChunkSource>>();\nexport function getShardedVolume(baseUrls: string[], path: string) {\n  let fullKey = stableStringify({'baseUrls': baseUrls, 'path': path});\n  let existingResult = existingVolumes.get(fullKey);\n  if (existingResult !== undefined) {\n    return existingResult;\n  }\n  let promise = sendHttpRequest(openShardedHttpRequest(baseUrls, path + '/info'), 'json')\n                    .then(response => new MultiscaleVolumeChunkSource(baseUrls, path, response));\n  existingVolumes.set(fullKey, promise);\n  return promise;\n}\n\nexport function getVolume(url: string) {\n  const [baseUrls, path] = parseSpecialUrl(url);\n  return getShardedVolume(baseUrls, path);\n}\n\nregisterDataSourceFactory('precomputed', {\n  description: 'Precomputed file-backed data source',\n  getVolume: getVolume,\n  getMeshSource: getMeshSource,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/precomputed/frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'neuroglancer/util/http_request';\n\nexport enum VolumeChunkEncoding {\n  RAW,\n  JPEG,\n  COMPRESSED_SEGMENTATION\n}\n\n// Prevent this from being considered a typings file.\nlet x = 0;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/datasource/precomputed/base.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {makeDefaultViewer} from 'neuroglancer/default_viewer';\nimport {makeDefaultKeyBindings} from 'neuroglancer/default_key_bindings';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  let viewer = (<any>window)['viewer'] = makeDefaultViewer();\n  makeDefaultKeyBindings(viewer.keyMap);\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('./default_viewer.css');\n\nimport 'neuroglancer/sliceview/chunk_format_handlers';\n\nimport {DisplayContext} from 'neuroglancer/display_context';\nimport {Viewer} from 'neuroglancer/viewer';\n\nexport function makeDefaultViewer() {\n  let display = new DisplayContext(document.getElementById('container'));\n  return new Viewer(display);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/default_viewer.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/default_viewer.css\n ** module id = 78\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'neuroglancer/sliceview/uncompressed_chunk_format';\nimport 'neuroglancer/sliceview/compressed_segmentation/chunk_format';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/chunk_format_handlers.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DataType, VolumeChunkSpecification} from 'neuroglancer/sliceview/base';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {Vec3, vec3Key} from 'neuroglancer/util/geom';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {ShaderBuilder, ShaderProgram} from 'neuroglancer/webgl/shader';\nimport {glsl_uint64} from 'neuroglancer/webgl/shader_lib';\nimport {Uint64} from 'neuroglancer/util/uint64';\nimport {VolumeChunkSource, ChunkFormatHandler, registerChunkFormatHandler} from 'neuroglancer/sliceview/frontend';\nimport {TypedArray, TypedArrayConstructor, maybePadArray} from 'neuroglancer/util/array';\nimport {SingleTextureChunkFormat, SingleTextureVolumeChunk} from 'neuroglancer/sliceview/single_texture_chunk_format';\n\nclass TextureLayout extends RefCounted {\n  textureWidth: number;\n  textureHeight: number;\n  textureAccessCoefficients: Float32Array;\n\n  constructor(gl: GL, public chunkDataSize: Vec3, texelsPerElement: number, numChannels: number) {\n    super();\n    let {maxTextureSize} = gl;\n\n    let numDataPoints = chunkDataSize[0] * chunkDataSize[1] * chunkDataSize[2] * numChannels;\n    let dataWidth: number;\n\n    this.chunkDataSize = chunkDataSize;\n\n    if (texelsPerElement * chunkDataSize[0] <= maxTextureSize &&\n        chunkDataSize[1] * chunkDataSize[2] * numChannels <= maxTextureSize) {\n      // [X, YZ]\n      dataWidth = chunkDataSize[0];\n    } else if (\n        texelsPerElement * chunkDataSize[0] * chunkDataSize[1] <= maxTextureSize &&\n        chunkDataSize[2] * numChannels <= maxTextureSize) {\n      // [XY, Z]\n      dataWidth = chunkDataSize[0] * chunkDataSize[1];\n    } else {\n      // Use arbitrary layout.\n      dataWidth = Math.ceil(numDataPoints / maxTextureSize);\n      if (dataWidth * texelsPerElement > maxTextureSize) {\n        throw new Error(\n            'Chunk data size exceeds maximum texture size: ' + texelsPerElement + ' * ' +\n            numDataPoints);\n      }\n    }\n    let dataHeight = Math.ceil(numDataPoints / dataWidth);\n    this.textureWidth = dataWidth * texelsPerElement;\n    this.textureHeight = dataHeight;\n    this.textureAccessCoefficients =\n        Float32Array.of(1.0 / dataWidth, 1.0 / (dataWidth * dataHeight));\n  }\n\n  static get(gl: GL, chunkDataSize: Vec3, texelsPerElement: number, numChannels: number) {\n    return gl.memoize.get(\n        `sliceview.UncompressedTextureLayout:${vec3Key(chunkDataSize)},${texelsPerElement},${numChannels}`,\n        () => new TextureLayout(gl, chunkDataSize, texelsPerElement, numChannels));\n  }\n};\n\nclass ChunkFormat extends SingleTextureChunkFormat<TextureLayout> {\n  texelsPerElement: number;\n  textureFormat: number;\n  texelType: number;\n  arrayElementsPerTexel: number;\n  arrayConstructor: TypedArrayConstructor;\n\n  static get(gl: GL, dataType: DataType, numChannels: number) {\n    let key = `sliceview.UncompressedChunkFormat:${dataType}:${numChannels}`;\n    return gl.memoize.get(key, () => new ChunkFormat(gl, dataType, numChannels, key));\n  }\n\n  constructor(gl: GL, public dataType: DataType, public numChannels: number, key: string) {\n    super(key);\n    switch (dataType) {\n      case DataType.UINT8:\n        this.texelsPerElement = 1;\n        this.textureFormat = gl.LUMINANCE;\n        this.texelType = gl.UNSIGNED_BYTE;\n        this.arrayElementsPerTexel = 1;\n        this.arrayConstructor = Uint8Array;\n        break;\n      case DataType.UINT16:\n        this.texelsPerElement = 1;\n        this.textureFormat = gl.LUMINANCE_ALPHA;\n        this.texelType = gl.UNSIGNED_BYTE;\n        this.arrayElementsPerTexel = 2;\n        this.arrayConstructor = Uint8Array;\n        break;\n      case DataType.UINT64:\n        this.texelsPerElement = 2;\n        this.textureFormat = gl.RGBA;\n        this.texelType = gl.UNSIGNED_BYTE;\n        this.arrayElementsPerTexel = 4;\n        this.arrayConstructor = Uint8Array;\n        break;\n      case DataType.UINT32:\n        this.texelsPerElement = 1;\n        this.textureFormat = gl.RGBA;\n        this.texelType = gl.UNSIGNED_BYTE;\n        this.arrayElementsPerTexel = 4;\n        this.arrayConstructor = Uint8Array;\n        break;\n      case DataType.FLOAT32:\n        this.texelsPerElement = 1;\n        this.textureFormat = gl.LUMINANCE;\n        this.texelType = gl.FLOAT;\n        this.arrayElementsPerTexel = 1;\n        this.arrayConstructor = Float32Array;\n        break;\n      default:\n        throw new Error('Unsupported dataType: ' + dataType);\n    }\n  }\n\n  defineShader(builder: ShaderBuilder) {\n    super.defineShader(builder);\n    builder.addUniform('highp vec3', 'uChunkDataSize');\n\n    // [ 1.0/dataPointsPerTextureWidth, 1.0/numDataPoints ]\n    builder.addUniform('highp vec2', 'uUncompressedTextureAccessCoefficients');\n    builder.addFragmentCode(`\nvec3 getPositionWithinChunk () {\n  return floor(min(vChunkPosition * uChunkDataSize, uChunkDataSize - 1.0));\n}\nvec2 getDataTextureCoords () {\n  vec3 chunkDataPosition = getPositionWithinChunk();\n  float offset = chunkDataPosition.x + uChunkDataSize.x * (chunkDataPosition.y + uChunkDataSize.y * chunkDataPosition.z);\n  return vec2(fract(offset * uUncompressedTextureAccessCoefficients.x),\n              offset * uUncompressedTextureAccessCoefficients.y);\n}\n`);\n    switch (this.dataType) {\n      case DataType.UINT8:\n      case DataType.FLOAT32:\n        builder.addFragmentCode(`\nfloat getDataValue () {\n  return texture2D(uVolumeChunkSampler, getDataTextureCoords()).x;\n}\n`);\n        break;\n      case DataType.UINT16:\n        builder.addFragmentCode(glsl_uint64);\n        builder.addFragmentCode(`\nuint64_t getDataValue () {\n  uint64_t value;\n  vec2 texCoords = getDataTextureCoords();\n  value.low = vec4(texture2D(uVolumeChunkSampler, texCoords).xw, 0.0, 0.0);\n  value.high = vec4(0, 0, 0, 0);\n  return value;\n}\n`);\n        break;\n      case DataType.UINT32:\n        builder.addFragmentCode(glsl_uint64);\n        builder.addFragmentCode(`\nuint64_t getDataValue () {\n  uint64_t value;\n  vec2 texCoords = getDataTextureCoords();\n  value.low = texture2D(uVolumeChunkSampler, texCoords);\n  value.high = vec4(0, 0, 0, 0);\n  return value;\n}\n`);\n        break;\n      case DataType.UINT64:\n        builder.addFragmentCode(glsl_uint64);\n        builder.addFragmentCode(`\nuint64_t getDataValue () {\n  uint64_t value;\n  vec2 texCoords = getDataTextureCoords();\n  value.low = texture2D(uVolumeChunkSampler, texCoords);\n  value.high = texture2D(uVolumeChunkSampler, vec2(texCoords.x + 0.5 * uUncompressedTextureAccessCoefficients.x, texCoords.y));\n  return value;\n}\n`);\n        break;\n    }\n  }\n\n  /**\n   * Called each time textureLayout changes while drawing chunks.\n   */\n  setupTextureLayout(gl: GL, shader: ShaderProgram, textureLayout: TextureLayout) {\n    gl.uniform3fv(shader.uniform('uChunkDataSize'), textureLayout.chunkDataSize);\n    gl.uniform2fv(\n        shader.uniform('uUncompressedTextureAccessCoefficients'),\n        textureLayout.textureAccessCoefficients);\n  }\n\n  getTextureLayout(gl: GL, chunkDataSize: Vec3) {\n    return TextureLayout.get(gl, chunkDataSize, this.texelsPerElement, this.numChannels);\n  }\n};\n\ninterface Source extends VolumeChunkSource {\n  chunkFormatHandler: UncompressedChunkFormatHandler;\n}\n\nexport class UncompressedVolumeChunk extends SingleTextureVolumeChunk<Uint8Array, TextureLayout> {\n  chunkFormat: ChunkFormat;\n  source: Source;\n\n  setTextureData(gl: GL) {\n    let {source} = this;\n    let {chunkFormatHandler} = source;\n    let {chunkFormat} = chunkFormatHandler;\n\n    let textureLayout: TextureLayout;\n    if (this.chunkDataSize === source.spec.chunkDataSize) {\n      this.textureLayout = textureLayout = chunkFormatHandler.textureLayout.addRef();\n    } else {\n      this.textureLayout = textureLayout = chunkFormat.getTextureLayout(gl, this.chunkDataSize);\n    }\n\n    let requiredSize = textureLayout.textureWidth * textureLayout.textureHeight *\n      chunkFormat.arrayElementsPerTexel;\n    let {arrayConstructor} = chunkFormat;\n    let data: TypedArray = this.data;\n    if (data.constructor !== arrayConstructor) {\n      data = new arrayConstructor(data.buffer, data.byteOffset, data.byteLength / arrayConstructor.BYTES_PER_ELEMENT);\n    }\n    let padded = maybePadArray(data, requiredSize);\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        /*level=*/0, chunkFormat.textureFormat,\n        /*width=*/textureLayout.textureWidth,\n        /*height=*/textureLayout.textureHeight,\n        /*border=*/0, chunkFormat.textureFormat, chunkFormat.texelType, padded);\n  }\n\n  getValueAt(dataPosition: Vec3): number|Uint64 {\n    let {chunkFormat} = this;\n    let chunkDataSize = this.chunkDataSize;\n    let index =\n        dataPosition[0] + chunkDataSize[0] * (dataPosition[1] + chunkDataSize[1] * dataPosition[2]);\n    let dataType = chunkFormat.dataType;\n    let data = this.data;\n    switch (dataType) {\n      case DataType.UINT8:\n      case DataType.FLOAT32:\n      case DataType.UINT16:\n      case DataType.UINT32:\n        return data[index];\n      case DataType.UINT64: {\n        let index2 = index * 2;\n        return new Uint64(data[index2], data[index2 + 1]);\n      }\n    }\n    throw new Error('Invalid data type: ' + dataType);\n  }\n};\n\nexport class UncompressedChunkFormatHandler extends RefCounted implements ChunkFormatHandler {\n  chunkFormat: ChunkFormat;\n  textureLayout: TextureLayout;\n\n  constructor(gl: GL, spec: VolumeChunkSpecification) {\n    super();\n    this.chunkFormat = this.registerDisposer(ChunkFormat.get(gl, spec.dataType, spec.numChannels));\n    this.textureLayout =\n        this.registerDisposer(this.chunkFormat.getTextureLayout(gl, spec.chunkDataSize));\n  }\n\n  getChunk(source: VolumeChunkSource, x: any) { return new UncompressedVolumeChunk(source, x); }\n};\n\nregisterChunkFormatHandler((gl: GL, spec: VolumeChunkSpecification) => {\n  if (spec.compressedSegmentationBlockSize == null) {\n    return new UncompressedChunkFormatHandler(gl, spec);\n  }\n  return null;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/uncompressed_chunk_format.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {GL} from 'neuroglancer/webgl/context';\nimport {ShaderBuilder, ShaderProgram} from 'neuroglancer/webgl/shader';\nimport {Disposable, RefCounted} from 'neuroglancer/util/disposable';\nimport {setRawTextureParameters} from 'neuroglancer/webgl/texture';\nimport {ChunkFormat, VolumeChunk, VolumeChunkSource} from 'neuroglancer/sliceview/frontend';\n\nconst textureUnitSymbol = Symbol('SingleTextureVolumeChunk.textureUnit');\nconst textureLayoutSymbol = Symbol('SingleTextureVolumeChunk.textureLayout');\n\nexport abstract class SingleTextureChunkFormat<TextureLayout extends Disposable> extends RefCounted\n    implements ChunkFormat {\n  arrayElementsPerTexel: number;\n  texelType: number;\n  textureFormat: number;\n\n  constructor(public shaderKey: string) { super(); }\n\n  defineShader(builder: ShaderBuilder) {\n    builder.addTextureSampler2D('uVolumeChunkSampler', textureUnitSymbol);\n  }\n\n  /**\n   * Called when starting to draw chunks.\n   */\n  beginDrawing(gl: GL, shader: ShaderProgram) {\n    let textureUnit = shader.textureUnit(textureUnitSymbol);\n    gl.activeTexture(gl.TEXTURE0 + textureUnit);\n    (<any>shader)[textureLayoutSymbol] = null;\n  }\n\n  /**\n   * Called once after all chunks have been drawn.\n   */\n  endDrawing(gl: GL, shader: ShaderProgram) {\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    (<any>shader)[textureLayoutSymbol] = null;\n  }\n\n  /**\n   * Called each time textureLayout changes while drawing chunks.\n   */\n  abstract setupTextureLayout(gl: GL, shader: ShaderProgram, textureLayout: TextureLayout): void;\n\n  /**\n   * Called just before drawing each chunk.\n   */\n  bindChunk<Data>(\n      gl: GL, shader: ShaderProgram, chunk: SingleTextureVolumeChunk<Data, TextureLayout>) {\n    let {textureLayout} = chunk;\n    let existingTextureLayout = (<any>shader)[textureLayoutSymbol];\n    if (existingTextureLayout !== textureLayout) {\n      (<any>shader)[textureLayoutSymbol] = textureLayout;\n      this.setupTextureLayout(gl, shader, textureLayout);\n    }\n    gl.bindTexture(gl.TEXTURE_2D, chunk.texture);\n  }\n};\n\nexport abstract class SingleTextureVolumeChunk<Data, TextureLayout extends Disposable> extends\n    VolumeChunk {\n  texture: WebGLTexture = null;\n  data: Data;\n  textureLayout: TextureLayout;\n\n  constructor(source: VolumeChunkSource, x: any) {\n    super(source, x);\n    this.data = x['data'];\n  }\n\n  abstract setTextureData(gl: GL): void;\n\n  copyToGPU(gl: GL) {\n    super.copyToGPU(gl);\n    let texture = this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    setRawTextureParameters(gl);\n    this.setTextureData(gl);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  freeGPUMemory(gl: GL) {\n    super.freeGPUMemory(gl);\n    gl.deleteTexture(this.texture);\n    this.texture = null;\n    this.textureLayout.dispose();\n    this.textureLayout = null;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/single_texture_chunk_format.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DataType, VolumeChunkSpecification} from 'neuroglancer/sliceview/base';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {ShaderBuilder, ShaderProgram} from 'neuroglancer/webgl/shader';\nimport {vec3, Vec3, vec3Key} from 'neuroglancer/util/geom';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {Uint64} from 'neuroglancer/util/uint64';\nimport {glsl_getFortranOrderIndexFromNormalized, glsl_uint64} from 'neuroglancer/webgl/shader_lib';\nimport {VolumeChunkSource, ChunkFormatHandler, registerChunkFormatHandler} from 'neuroglancer/sliceview/frontend';\nimport {maybePadArray} from 'neuroglancer/util/array';\nimport {SingleTextureChunkFormat, SingleTextureVolumeChunk} from 'neuroglancer/sliceview/single_texture_chunk_format';\nimport {readSingleChannelValue as readSingleChannelValueUint64} from 'neuroglancer/sliceview/compressed_segmentation/decode_uint64';\nimport {readSingleChannelValue as readSingleChannelValueUint32} from 'neuroglancer/sliceview/compressed_segmentation/decode_uint32';\n\nclass TextureLayout extends RefCounted {\n  textureWidth: number;\n  textureHeight: number;\n  textureAccessCoefficients: Float32Array;\n  subchunkGridSize: Vec3;\n  constructor(gl: GL, public chunkDataSize: Vec3, public subchunkSize: Vec3, dataLength: number) {\n    super();\n    let {maxTextureSize} = gl;\n\n    // Use arbitrary layout.\n    let dataWidth = Math.ceil(dataLength / maxTextureSize);\n    if (dataWidth > maxTextureSize) {\n      throw new Error('Chunk data size exceeds maximum texture size: ' + dataLength);\n    }\n\n    let dataHeight = Math.ceil(dataLength / dataWidth);\n    this.textureWidth = dataWidth;\n    this.textureHeight = dataHeight;\n    this.textureAccessCoefficients =\n        Float32Array.of(1.0 / dataWidth, 1.0 / (dataWidth * dataHeight));\n    let subchunkGridSize = this.subchunkGridSize = vec3.create();\n    for (let i = 0; i < 3; ++i) {\n      subchunkGridSize[i] = Math.ceil(chunkDataSize[i] / subchunkSize[i]);\n    }\n  }\n\n  static get(gl: GL, chunkDataSize: Vec3, subchunkSize: Vec3, dataLength: number) {\n    return gl.memoize.get(\n        `sliceview.CompressedSegmentationTextureLayout:${vec3Key(chunkDataSize)},${vec3Key(subchunkSize)},${dataLength}`,\n        () => new TextureLayout(gl, chunkDataSize, subchunkSize, dataLength));\n  }\n};\n\nclass ChunkFormat extends SingleTextureChunkFormat<TextureLayout> {\n  static get(gl: GL, dataType: DataType, subchunkSize: Vec3) {\n    let key = `sliceview.CompressedSegmentationChunkFormat:${dataType},${vec3Key(subchunkSize)}`;\n    return gl.memoize.get(key, () => new ChunkFormat(dataType, subchunkSize, key));\n  }\n\n  constructor(public dataType: DataType, public subchunkSize: Vec3, key: string) { super(key); }\n\n  defineShader(builder: ShaderBuilder) {\n    super.defineShader(builder);\n    let local = (x: string) => 'compressedSegmentationChunkFormat_' + x;\n    builder.addUniform('highp vec2', 'uCompressedSegmentationTextureAccessCoefficients');\n    builder.addUniform('highp vec3', 'uSubchunkGridSize');\n    builder.addUniform('highp vec3', 'uChunkDataSize');\n    builder.addFragmentCode(glsl_getFortranOrderIndexFromNormalized);\n    builder.addFragmentCode(glsl_uint64);\n    // We add 0.5 to avoid being right at a texel boundary.\n    let fragmentCode = `\nvec4 ${local('readTextureValue')}(float offset) {\n  offset += 0.5;\n  return texture2D(uVolumeChunkSampler,\n                   vec2(fract(offset * uCompressedSegmentationTextureAccessCoefficients.x),\n                        offset * uCompressedSegmentationTextureAccessCoefficients.y));\n}\nuint64_t getDataValue () {\n  const vec3 uSubchunkSize = ${vec3.str(this.subchunkSize)};\n\n  vec3 chunkPosition = getSubscriptsFromNormalized(vChunkPosition, uChunkDataSize);\n\n  // TODO: maybe premultiply this and store as uniform.\n  vec3 subchunkGridPosition = floor(chunkPosition / uSubchunkSize);\n  float subchunkGridOffset = getFortranOrderIndex(subchunkGridPosition, uSubchunkGridSize);\n\n  // TODO: Maybe just combine this offset into subchunkGridStrides.\n  float subchunkHeaderOffset = subchunkGridOffset * 2.0;\n\n  vec4 subchunkHeader0 = ${local('readTextureValue')}(subchunkHeaderOffset);\n  vec4 subchunkHeader1 = ${local('readTextureValue')}(subchunkHeaderOffset + 1.0);\n\n  float outputValueOffset = dot(subchunkHeader0.xyz, vec3(255, 256 * 255, 256 * 256 * 255));\n  float encodingBits = subchunkHeader0[3] * 255.0;\n  if (encodingBits > 0.0) {\n    vec3 subchunkPosition = floor(min(chunkPosition - subchunkGridPosition * uSubchunkSize, uSubchunkSize - 1.0));\n    float subchunkOffset = getFortranOrderIndex(subchunkPosition, uSubchunkSize);\n    highp float encodedValueBaseOffset = dot(subchunkHeader1.xyz, vec3(255.0, 256.0 * 255.0, 256.0 * 256.0 * 255.0));\n    highp float encodedValueOffset = floor(encodedValueBaseOffset + subchunkOffset * encodingBits / 32.0);\n    vec4 encodedValue = ${local('readTextureValue')}(encodedValueOffset);\n    float wordOffset = mod(subchunkOffset * encodingBits, 32.0);\n    // If the value is in the first byte, then 0 <= wordOffset < 8.\n    // We need to mod by 2**encodedBits\n    float wordShifter = pow(2.0, -wordOffset);\n    float encodedValueMod = pow(2.0, encodingBits);\n    float encodedValueShifted;\n    if (wordOffset < 16.0) {\n      encodedValueShifted = dot(encodedValue.xy, vec2(255.0, 255.0 * 256.0));\n    } else {\n      encodedValueShifted = dot(encodedValue.zw, vec2(255.0 * 256.0 * 256.0, 255.0 * 256.0 * 256.0 * 256.0));\n    }\n    encodedValueShifted = floor(encodedValueShifted * wordShifter);\n    float decodedValue = mod(encodedValueShifted, encodedValueMod);\n    outputValueOffset += decodedValue * ${this.dataType === DataType.UINT64 ? '2.0' : '1.0'};\n  }\n  uint64_t value;\n  value.low = ${local('readTextureValue')}(outputValueOffset);\n`;\n    if (this.dataType === DataType.UINT64) {\n      fragmentCode += `\n  value.high = ${local('readTextureValue')}(outputValueOffset+1.0);\n`;\n    } else {\n      fragmentCode += `\n  value.high = vec4(0.0, 0.0, 0.0, 0.0);\n`;\n    }\n    fragmentCode += `\n  return value;\n}\n`;\n    builder.addFragmentCode(fragmentCode);\n  }\n\n  /**\n   * Called each time textureLayout changes while drawing chunks.\n   */\n  setupTextureLayout(gl: GL, shader: ShaderProgram, textureLayout: TextureLayout) {\n    gl.uniform3fv(shader.uniform('uChunkDataSize'), textureLayout.chunkDataSize);\n    gl.uniform3fv(shader.uniform('uSubchunkGridSize'), textureLayout.subchunkGridSize);\n    gl.uniform2fv(\n        shader.uniform('uCompressedSegmentationTextureAccessCoefficients'),\n        textureLayout.textureAccessCoefficients);\n  }\n\n  getTextureLayout(gl: GL, chunkDataSize: Vec3, dataLength: number) {\n    return TextureLayout.get(gl, chunkDataSize, this.subchunkSize, dataLength);\n  }\n};\n\nexport class CompressedSegmentationVolumeChunk extends\n    SingleTextureVolumeChunk<Uint32Array, TextureLayout> {\n  chunkFormat: ChunkFormat;\n\n  setTextureData(gl: GL) {\n    let {data} = this;\n    let {chunkFormat} = this;\n    let textureLayout = this.textureLayout =\n        chunkFormat.getTextureLayout(gl, this.chunkDataSize, data.length);\n    let requiredSize = textureLayout.textureWidth * textureLayout.textureHeight;\n    let padded = maybePadArray(data, requiredSize);\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        /*level=*/0, gl.RGBA,\n        /*width=*/textureLayout.textureWidth,\n        /*height=*/textureLayout.textureHeight,\n        /*border=*/0, gl.RGBA, gl.UNSIGNED_BYTE,\n        new Uint8Array(padded.buffer, padded.byteOffset, padded.byteLength));\n  }\n\n  getValueAt(dataPosition: Vec3): Uint64|number {\n    let {chunkDataSize, chunkFormat} = this;\n    if (chunkFormat.dataType === DataType.UINT64) {\n      let result = new Uint64();\n      return readSingleChannelValueUint64(\n          result, this.data, /*baseOffset=*/0, chunkDataSize, chunkFormat.subchunkSize,\n          dataPosition);\n    } else {\n      return readSingleChannelValueUint32(\n          this.data, /*baseOffset=*/0, chunkDataSize, chunkFormat.subchunkSize, dataPosition);\n    }\n  }\n};\n\nexport class CompressedSegmentationChunkFormatHandler extends RefCounted implements\n    ChunkFormatHandler {\n  chunkFormat: ChunkFormat;\n\n  constructor(gl: GL, spec: VolumeChunkSpecification) {\n    super();\n    let {dataType} = spec;\n    if (dataType !== DataType.UINT64 && dataType !== DataType.UINT32) {\n      throw new Error(`Unsupported compressed segmentation data type: ${DataType[dataType]}`);\n    }\n    this.chunkFormat = this.registerDisposer(\n        ChunkFormat.get(gl, spec.dataType, spec.compressedSegmentationBlockSize));\n  }\n\n  getChunk(source: VolumeChunkSource, x: any) {\n    return new CompressedSegmentationVolumeChunk(source, x);\n  }\n};\n\nregisterChunkFormatHandler((gl: GL, spec: VolumeChunkSpecification) => {\n  if (spec.compressedSegmentationBlockSize != null) {\n    return new CompressedSegmentationChunkFormatHandler(gl, spec);\n  }\n  return null;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/compressed_segmentation/chunk_format.ts\n **/","// DO NOT EDIT.  Generated from templates/neuroglancer/sliceview/compressed_segmentation/decode.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for decompressing uint64 segment label chunks.\n */\n\nimport {decodeValueOffset} from 'neuroglancer/sliceview/compressed_segmentation/decode_common';\n\n\nimport {Uint64} from 'neuroglancer/util/uint64';\n\n\n/**\n * Reads the single value at the specified dataPosition in a single-channel compressed segmentation.\n *\n * @param baseOffset The base offset into `data' at which the compressed data for this channel starts.\n * @param chunkDataSize A 3-element array specifying the size of the volume, \n * @param blockSize A 3-element array specifying the block size ued for compression.\n * @param dataPosition A 3-element array specifying the position within the volume from which to read.\n *\n * Stores the result in `out'.\n */\nexport function readSingleChannelValue(\n  \n  out: Uint64,\n  \n  data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>,\n  blockSize: ArrayLike<number>, dataPosition: ArrayLike<number>) {\n  let outputValueOffset = decodeValueOffset(data, baseOffset, chunkDataSize, blockSize, dataPosition,\n                                           2);\n  \n  out.low = data[outputValueOffset];\n  out.high = data[outputValueOffset + 1];\n  return out;\n  \n}\n\n/**\n * Reads the single value (of a single channel) at the specified dataPosition in a multi-channel\n * compressed segmentation.\n *\n * @param dataPosition A 4-element [x, y, z, channel] array specifying the position to read.\n */\nexport function readValue(\n  \n  out: Uint64,\n  \n  data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>,\n    blockSize: ArrayLike<number>, dataPosition: ArrayLike<number>) {\n  return readSingleChannelValue(\n    \n    out,\n    \n    data, baseOffset + data[dataPosition[3]], chunkDataSize, blockSize, dataPosition);\n}\n\n/**\n * Decodes a single channel of a compressed segmentation.\n *\n * This is not particularly efficient, because it is intended for testing purposes only.\n */\nexport function decodeChannel(\n  out: Uint32Array,\n  data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>, blockSize: ArrayLike<number>) {\n  const expectedLength = chunkDataSize[0] * chunkDataSize[1] * chunkDataSize[2] * 2;\n  if (expectedLength !== out.length) {\n    throw new Error(`Output length ${out.length} is not equal to expected length ${expectedLength}.`);\n  }\n  let vx = chunkDataSize[0];\n  let vy = chunkDataSize[1];\n  let vz = chunkDataSize[2];\n  let dataPosition = [0, 0, 0];\n  let outputOffset = 0;\n  for (let z = 0; z < vz; ++z) {\n    dataPosition[2] = z;\n    for (let y = 0; y < vy; ++y) {\n      dataPosition[1] = y;\n      for (let x = 0; x < vx; ++x) {\n        dataPosition[0] = x;\n        let outputValueOffset = decodeValueOffset(data, baseOffset, chunkDataSize, blockSize, dataPosition,\n                                                  2);\n        out[outputOffset++] = data[baseOffset + outputValueOffset];\n        \n        out[outputOffset++] = data[baseOffset + outputValueOffset + 1];\n        \n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Decodes a multi-channel compressed segmentation.\n *\n * This is not particularly efficient, because it is intended for testing purposes only.\n */\nexport function decodeChannels(\n  out: Uint32Array,\n  data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>, blockSize: ArrayLike<number>) {\n  const channelOutputLength = chunkDataSize[0] * chunkDataSize[1] * chunkDataSize[2] * 2;\n  const expectedLength = channelOutputLength * chunkDataSize[3];\n  if (expectedLength !== out.length) {\n    throw new Error(`Output length ${out.length} is not equal to expected length ${expectedLength}.`);\n  }\n  const numChannels = chunkDataSize[3];\n  for (let channel = 0; channel < numChannels; ++channel) {\n    decodeChannel(out.subarray(channelOutputLength * channel, channelOutputLength * (channel + 1)),\n                      data, baseOffset + data[channel], chunkDataSize, blockSize);    \n  }\n  return out;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/compressed_segmentation/decode_uint64.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for decompressing uint32 and uint64 segment label chunks.\n */\n\n/**\n * Determines the offset of the value at the specified dataPosition in a single-channel compressed\n * segmentation.\n *\n * @param baseOffset The base offset into `data' at which the compressed data for this channel starts.\n * @param chunkDataSize A 3-element array specifying the size of the volume, \n * @param blockSize A 3-element array specifying the block size ued for compression.\n * @param dataPosition A 3-element array specifying the position within the volume from which to read.\n * @returns The offset into `data', relative to baseOffset, at which the value is located.\n */\nexport function decodeValueOffset(\n    data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>,\n    blockSize: ArrayLike<number>, dataPosition: ArrayLike<number>, uint32sPerElement: number) {\n  let gridOffset = 0, subchunkOffset = 0, gridStride = 1, subchunkStride = 1;\n  for (let i = 0; i < 3; ++i) {\n    let posValue = dataPosition[i];\n    let subchunkSizeValue = blockSize[i];\n    let gridSubscript = Math.floor(posValue / subchunkSizeValue);\n    let subchunkSubscript = posValue % subchunkSizeValue;\n    gridOffset += gridSubscript * gridStride;\n    gridStride *= Math.ceil(chunkDataSize[i] / subchunkSizeValue);\n    subchunkOffset += subchunkSubscript * subchunkStride;\n    subchunkStride *= subchunkSizeValue;\n  }\n  let subchunkHeaderOffset = baseOffset + gridOffset * 2;\n  let subchunkHeader0 = data[subchunkHeaderOffset];\n  let subchunkHeader1 = data[subchunkHeaderOffset + 1];\n  let outputValueOffset = subchunkHeader0 & 0xFFFFFF;\n  let encodingBits = (subchunkHeader0 >> 24) & 0xFF;\n  if (encodingBits > 0) {\n    let encodedValueBaseOffset = baseOffset + subchunkHeader1 & 0xFFFFFF;\n    let encodedValueOffset =\n        encodedValueBaseOffset + Math.floor(subchunkOffset * encodingBits / 32.0);\n    let encodedValue = data[encodedValueOffset];\n    let wordOffset = (subchunkOffset * encodingBits) % 32;\n\n    let decodedValue = (encodedValue >> wordOffset) & ((1 << encodingBits) - 1);\n    outputValueOffset += uint32sPerElement * decodedValue;\n  }\n  return outputValueOffset;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/compressed_segmentation/decode_common.ts\n **/","// DO NOT EDIT.  Generated from templates/neuroglancer/sliceview/compressed_segmentation/decode.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for decompressing uint64 segment label chunks.\n */\n\nimport {decodeValueOffset} from 'neuroglancer/sliceview/compressed_segmentation/decode_common';\n\n\n\n/**\n * Reads the single value at the specified dataPosition in a single-channel compressed segmentation.\n *\n * @param baseOffset The base offset into `data' at which the compressed data for this channel starts.\n * @param chunkDataSize A 3-element array specifying the size of the volume, \n * @param blockSize A 3-element array specifying the block size ued for compression.\n * @param dataPosition A 3-element array specifying the position within the volume from which to read.\n *\n * Stores the result in `out'.\n */\nexport function readSingleChannelValue(\n  \n  data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>,\n  blockSize: ArrayLike<number>, dataPosition: ArrayLike<number>) {\n  let outputValueOffset = decodeValueOffset(data, baseOffset, chunkDataSize, blockSize, dataPosition,\n                                           1);\n  \n  return data[outputValueOffset];\n  \n}\n\n/**\n * Reads the single value (of a single channel) at the specified dataPosition in a multi-channel\n * compressed segmentation.\n *\n * @param dataPosition A 4-element [x, y, z, channel] array specifying the position to read.\n */\nexport function readValue(\n  \n  data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>,\n    blockSize: ArrayLike<number>, dataPosition: ArrayLike<number>) {\n  return readSingleChannelValue(\n    \n    data, baseOffset + data[dataPosition[3]], chunkDataSize, blockSize, dataPosition);\n}\n\n/**\n * Decodes a single channel of a compressed segmentation.\n *\n * This is not particularly efficient, because it is intended for testing purposes only.\n */\nexport function decodeChannel(\n  out: Uint32Array,\n  data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>, blockSize: ArrayLike<number>) {\n  const expectedLength = chunkDataSize[0] * chunkDataSize[1] * chunkDataSize[2] * 1;\n  if (expectedLength !== out.length) {\n    throw new Error(`Output length ${out.length} is not equal to expected length ${expectedLength}.`);\n  }\n  let vx = chunkDataSize[0];\n  let vy = chunkDataSize[1];\n  let vz = chunkDataSize[2];\n  let dataPosition = [0, 0, 0];\n  let outputOffset = 0;\n  for (let z = 0; z < vz; ++z) {\n    dataPosition[2] = z;\n    for (let y = 0; y < vy; ++y) {\n      dataPosition[1] = y;\n      for (let x = 0; x < vx; ++x) {\n        dataPosition[0] = x;\n        let outputValueOffset = decodeValueOffset(data, baseOffset, chunkDataSize, blockSize, dataPosition,\n                                                  1);\n        out[outputOffset++] = data[baseOffset + outputValueOffset];\n        \n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Decodes a multi-channel compressed segmentation.\n *\n * This is not particularly efficient, because it is intended for testing purposes only.\n */\nexport function decodeChannels(\n  out: Uint32Array,\n  data: Uint32Array, baseOffset: number, chunkDataSize: ArrayLike<number>, blockSize: ArrayLike<number>) {\n  const channelOutputLength = chunkDataSize[0] * chunkDataSize[1] * chunkDataSize[2] * 1;\n  const expectedLength = channelOutputLength * chunkDataSize[3];\n  if (expectedLength !== out.length) {\n    throw new Error(`Output length ${out.length} is not equal to expected length ${expectedLength}.`);\n  }\n  const numChannels = chunkDataSize[3];\n  for (let channel = 0; channel < numChannels; ++channel) {\n    decodeChannel(out.subarray(channelOutputLength * channel, channelOutputLength * (channel + 1)),\n                      data, baseOffset + data[channel], chunkDataSize, blockSize);    \n  }\n  return out;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/compressed_segmentation/decode_uint32.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AvailableCapacity} from 'neuroglancer/chunk_manager/base';\nimport {ChunkQueueManager, ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {DisplayContext} from 'neuroglancer/display_context';\nimport {KeyBindingHelpDialog} from 'neuroglancer/help/key_bindings';\nimport {MouseSelectionState, LayerManager, LayerSelectedValues} from 'neuroglancer/layer';\nimport {LayerDialog} from 'neuroglancer/layer_dialog';\nimport {LayerPanel} from 'neuroglancer/layer_panel';\nimport {LayerListSpecification} from 'neuroglancer/layer_specification';\nimport * as L from 'neuroglancer/layout';\nimport {NavigationState, Pose, OrientationState} from 'neuroglancer/navigation_state';\nimport {overlaysOpen} from 'neuroglancer/overlay';\nimport {PerspectivePanel} from 'neuroglancer/perspective_panel';\nimport {PositionStatusPanel} from 'neuroglancer/position_status_panel';\nimport {SliceView} from 'neuroglancer/sliceview/frontend';\nimport {SliceViewPanel} from 'neuroglancer/sliceview/panel';\nimport {TrackableBoolean} from 'neuroglancer/trackable_boolean';\nimport {TrackableValue} from 'neuroglancer/trackable_value';\nimport {delayHashUpdate, registerTrackable} from 'neuroglancer/url_hash_state';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {removeChildren} from 'neuroglancer/util/dom';\nimport {mat4, Mat4, Quat, quat, kAxes} from 'neuroglancer/util/geom';\nimport {GlobalKeyboardShortcutHandler, KeySequenceMap} from 'neuroglancer/util/keyboard_shortcut_handler';\nimport {ViewerState} from 'neuroglancer/viewer_state';\nimport {RPC} from 'neuroglancer/worker_rpc';\nimport {Signal} from 'signals';\n\nrequire('./viewer.css');\nrequire('neuroglancer/noselect.css');\n\nexport class FourPanelLayout extends RefCounted {\n  constructor(public rootElement: HTMLElement, public viewer: Viewer) {\n    super();\n\n    let sliceViews = viewer.makeOrthogonalSliceViews();\n    let {display} = viewer;\n\n    let perspectiveViewerState = {\n      mouseState: viewer.mouseState,\n      layerManager: viewer.layerManager,\n      navigationState: viewer.perspectiveNavigationState,\n      showSliceViews: viewer.showPerspectiveSliceViews,\n      showAxisLines: viewer.showAxisLines,\n    };\n\n    let sliceViewerState = {\n      mouseState: viewer.mouseState,\n      layerManager: viewer.layerManager,\n      navigationState: viewer.navigationState,\n      showAxisLines: viewer.showAxisLines,\n      showScaleBar: viewer.showScaleBar,\n    };\n\n    let sliceViewerStateWithoutScaleBar = {\n      mouseState: viewer.mouseState,\n      layerManager: viewer.layerManager,\n      navigationState: viewer.navigationState,\n      showAxisLines: viewer.showAxisLines,\n      showScaleBar: new TrackableBoolean(false, false),\n    };\n    let mainDisplayContents = [\n      L.withFlex(1, L.box('column', [\n        L.withFlex(1, L.box('row', [\n          L.withFlex(1, element => {\n            element.className = 'gllayoutcell noselect';\n            this.registerDisposer(new SliceViewPanel(display, element, sliceViews[0], sliceViewerState));\n          }),\n          L.withFlex(1, element => {\n            element.className = 'gllayoutcell noselect';\n            this.registerDisposer(new SliceViewPanel(display, element, sliceViews[1], sliceViewerStateWithoutScaleBar));\n          })\n        ])),\n        L.withFlex(1, L.box('row', [\n          L.withFlex(1, element => {\n            element.className = 'gllayoutcell noselect';\n            let perspectivePanel = this.registerDisposer(\n                new PerspectivePanel(display, element, perspectiveViewerState));\n            for (let sliceView of sliceViews) {\n              perspectivePanel.sliceViews.add(sliceView.addRef());\n            }\n          }),\n          L.withFlex(1, element => {\n            element.className = 'gllayoutcell noselect';\n            this.registerDisposer(new SliceViewPanel(display, element, sliceViews[2], sliceViewerStateWithoutScaleBar));\n          })\n        ])),\n      ]))\n    ];\n    L.box('row', mainDisplayContents)(rootElement);\n    display.onResize();\n  }\n\n  disposed() { removeChildren(this.rootElement); }\n};\n\nexport class SinglePanelLayout extends RefCounted {\n  constructor(public rootElement: HTMLElement, public viewer: Viewer) {\n    super();\n    let sliceView = viewer.makeSliceView();\n    let sliceViewerState = {\n      mouseState: viewer.mouseState,\n      layerManager: viewer.layerManager,\n      navigationState: viewer.navigationState,\n      showAxisLines: viewer.showAxisLines,\n      showScaleBar: viewer.showScaleBar,\n    };\n\n    L.box('row', [L.withFlex(1, element => {\n            this.registerDisposer(\n                new SliceViewPanel(viewer.display, element, sliceView, sliceViewerState));\n          })])(rootElement);\n    viewer.display.onResize();\n  }\n\n  disposed() { removeChildren(this.rootElement); }\n};\n\ninterface DataDisplayLayout extends RefCounted {\n  rootElement: HTMLElement;\n}\n;\n\nexport const LAYOUTS: [string, (element: HTMLElement, viewer: Viewer) => DataDisplayLayout][] = [\n  ['4panel', (element, viewer) => new FourPanelLayout(element, viewer)],\n  ['xy', (element, viewer) => new SinglePanelLayout(element, viewer)],\n];\n\nexport function getLayoutByName(obj: any) {\n  let layout = LAYOUTS.find(x => x[0] === obj);\n  if (layout === undefined) {\n    throw new Error(`Invalid layout name: ${JSON.stringify(obj)}.`);\n  }\n  return layout;\n}\n\nexport function validateLayoutName(obj: any) {\n  let layout = getLayoutByName(obj);\n  return layout[0];\n}\n\nexport class Viewer extends RefCounted implements ViewerState {\n  navigationState = this.registerDisposer(new NavigationState());\n  perspectiveNavigationState = new NavigationState(new Pose(this.navigationState.position), 1);\n  mouseState = new MouseSelectionState();\n  layerManager = this.registerDisposer(new LayerManager());\n  showAxisLines = new TrackableBoolean(true, true);\n  dataDisplayLayout: DataDisplayLayout;\n  showScaleBar = new TrackableBoolean(true, true);\n  showPerspectiveSliceViews = new TrackableBoolean(true, true);\n\n  layerPanel: LayerPanel;\n  layerSelectedValues =\n      this.registerDisposer(new LayerSelectedValues(this.layerManager, this.mouseState));\n  worker = new RPC(new Worker('chunk_worker.bundle.js'));\n  resetInitiated = new Signal();\n\n  chunkQueueManager = new ChunkQueueManager(this.worker, this.display.gl, {\n    gpuMemory: new AvailableCapacity(1e6, 1e9),\n    systemMemory: new AvailableCapacity(1e7, 2e9),\n    download: new AvailableCapacity(32, Number.POSITIVE_INFINITY)\n  });\n  chunkManager = new ChunkManager(this.chunkQueueManager);\n  keyMap = new KeySequenceMap();\n  keyCommands = new Map<string, (this: Viewer) => void>();\n  layerSpecification = new LayerListSpecification(\n      this.layerManager, this.chunkManager, this.worker, this.layerSelectedValues,\n      this.navigationState.voxelSize);\n  layoutName = new TrackableValue<string>(LAYOUTS[0][0], validateLayoutName, LAYOUTS[0][0]);\n\n  constructor(public display: DisplayContext) {\n    super();\n\n    // Delay hash update after each redraw to try to prevent noticeable lag in Chrome.\n    this.registerSignalBinding(display.updateStarted.add(this.onUpdateDisplay, this));\n    this.registerSignalBinding(display.updateFinished.add(this.onUpdateDisplayFinished, this));\n\n    // Prevent contextmenu on rightclick, as this inteferes with our use\n    // of the right mouse button.\n    this.registerEventListener(document, 'contextmenu', (e: Event) => {\n      e.preventDefault();\n      return false;\n    });\n\n\n    registerTrackable('layers', this.layerSpecification);\n    registerTrackable('navigation', this.navigationState);\n    registerTrackable('showAxisLines', this.showAxisLines);\n    registerTrackable('showScaleBar', this.showScaleBar);\n\n    registerTrackable('perspectiveOrientation', this.perspectiveNavigationState.pose.orientation);\n    registerTrackable('perspectiveZoom', this.perspectiveNavigationState.zoomFactor);\n    registerTrackable('showSlices', this.showPerspectiveSliceViews);\n    registerTrackable('layout', this.layoutName);\n\n    this.registerSignalBinding(\n        this.navigationState.changed.add(this.handleNavigationStateChanged, this));\n\n    this.layerManager.initializePosition(this.navigationState.position);\n    this.layerManager.layersChanged.add(() => {\n      if (this.layerManager.managedLayers.length === 0) {\n        // No layers, reset state.\n        this.navigationState.voxelSize.reset();\n        this.navigationState.reset();\n        this.perspectiveNavigationState.pose.orientation.reset();\n        this.perspectiveNavigationState.zoomFactor.reset();\n        this.resetInitiated.dispatch();\n        this.layerManager.initializePosition(this.navigationState.position);\n        if (!overlaysOpen) {\n          new LayerDialog(this.layerSpecification);\n        }\n      }\n    });\n\n    this.registerSignalBinding(this.chunkQueueManager.visibleChunksChanged.add(\n        () => { this.layerSelectedValues.handleLayerChange(); }));\n\n    this.chunkQueueManager.visibleChunksChanged.add(display.scheduleRedraw, display);\n\n    this.makeUI();\n\n    this.registerDisposer(\n        new GlobalKeyboardShortcutHandler(this.keyMap, this.onKeyCommand.bind(this)));\n\n    this.layoutName.changed.add(() => {\n      if (this.dataDisplayLayout !== undefined) {\n        let element = this.dataDisplayLayout.rootElement;\n        this.dataDisplayLayout.dispose();\n        this.createDataDisplayLayout(element);\n      }\n    });\n\n    let {keyCommands} = this;\n    keyCommands.set('toggle-layout', function() { this.toggleLayout(); });\n    keyCommands.set('snap', function() { this.navigationState.pose.snap(); });\n    keyCommands.set('add-layer', function() {\n      this.layerPanel.addLayerMenu();\n      return true;\n    });\n    keyCommands.set('help', this.showHelpDialog);\n\n    for (let i = 1; i <= 9; ++i) {\n      keyCommands.set('toggle-layer-' + i, function() {\n        let layerIndex = i - 1;\n        let layers = this.layerManager.managedLayers;\n        if (layerIndex < layers.length) {\n          let layer = layers[layerIndex];\n          layer.setVisible(!layer.visible);\n        }\n      });\n    }\n\n    for (let command of ['recolor', 'clear-segments']) {\n      keyCommands.set(command, function() { this.layerManager.invokeAction(command); });\n    }\n\n    keyCommands.set('toggle-axis-lines', function() { this.showAxisLines.toggle(); });\n    keyCommands.set('toggle-scale-bar', function() { this.showScaleBar.toggle(); });\n    this.keyCommands.set(\n        'toggle-show-slices', function() { this.showPerspectiveSliceViews.toggle(); });\n\n    // This needs to happen after the global keyboard shortcut handler for the viewer has been\n    // registered, so that it has priority.\n    if (this.layerManager.managedLayers.length === 0) {\n      new LayerDialog(this.layerSpecification);\n    }\n  }\n\n  private makeUI() {\n    let {display} = this;\n    let gridContainer = document.createElement('div');\n    gridContainer.setAttribute('class', 'gllayoutcontainer noselect');\n    let {container} = display;\n    container.appendChild(gridContainer);\n\n    L.box('column', [\n      L.box(\n          'row',\n          [\n            L.withFlex(1, element => new PositionStatusPanel(element, this)),\n            element => {\n              let button = document.createElement('button');\n              button.className = 'help-button';\n              button.textContent = '?';\n              button.title = 'Help';\n              element.appendChild(button);\n              this.registerEventListener(button, 'click', () => { this.showHelpDialog(); });\n            },\n          ]),\n      element => { this.layerPanel = new LayerPanel(element, this.layerSpecification); },\n      L.withFlex(1, element => { this.createDataDisplayLayout(element); }),\n    ])(gridContainer);\n    this.display.onResize();\n  }\n\n  createDataDisplayLayout(element: HTMLElement) {\n    let layoutCreator = getLayoutByName(this.layoutName.value)[1];\n    this.dataDisplayLayout = layoutCreator(element, this);\n  }\n\n  toggleLayout() {\n    let existingLayout = getLayoutByName(this.layoutName.value);\n    let layoutIndex = LAYOUTS.indexOf(existingLayout);\n    let newLayout = LAYOUTS[(layoutIndex + 1) % LAYOUTS.length];\n    this.layoutName.value = newLayout[0];\n  }\n\n  showHelpDialog() { new KeyBindingHelpDialog(this.keyMap); }\n\n  get gl() { return this.display.gl; }\n\n  onUpdateDisplay() {\n    delayHashUpdate();\n    this.chunkQueueManager.chunkUpdateDeadline = null;\n  }\n\n  onUpdateDisplayFinished() { this.mouseState.updateIfStale(); }\n\n  private onKeyCommand(action: string) {\n    let command = this.keyCommands.get(action);\n    if (command && command.call(this)) {\n      return true;\n    }\n    let {activePanel} = this.display;\n    if (activePanel) {\n      return activePanel.onKeyCommand(action);\n    }\n    return false;\n  }\n\n  makeSliceView(baseToSelf?: Quat) {\n    let navigationState: NavigationState;\n    if (baseToSelf === undefined) {\n      navigationState = this.navigationState;\n    } else {\n      navigationState = new NavigationState(\n          new Pose(\n              this.navigationState.pose.position,\n              OrientationState.makeRelative(this.navigationState.pose.orientation, baseToSelf)),\n          this.navigationState.zoomFactor);\n    }\n    return new SliceView(this.gl, this.chunkManager, this.layerManager, navigationState);\n  }\n\n  makeOrthogonalSliceViews() {\n    let {gl, layerManager} = this;\n    let sliceViews = new Array<SliceView>();\n    let addSliceView = (mat?: Mat4) => { sliceViews.push(this.makeSliceView(mat)); };\n    addSliceView();\n    addSliceView(quat.rotateX(quat.create(), quat.create(), Math.PI / 2));\n    addSliceView(quat.rotateY(quat.create(), quat.create(), Math.PI / 2));\n    // {\n    //   let mat = mat4.create();\n    //   mat4.identity(mat);\n    //   mat4.rotateX(mat, mat, Math.PI / 2);\n    //   addSliceView(mat);\n    // }\n\n    // {\n    //   let mat = mat4.create();\n    //   mat4.identity(mat);\n    //   mat4.rotateY(mat, mat, Math.PI / 2);\n    //   addSliceView(mat);\n    // }\n    return sliceViews;\n  }\n\n  private handleNavigationStateChanged() {\n    let {chunkQueueManager} = this;\n    if (chunkQueueManager.chunkUpdateDeadline === null) {\n      chunkQueueManager.chunkUpdateDeadline = Date.now() + 10;\n    }\n    this.mouseState.stale = true;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/viewer.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Overlay} from 'neuroglancer/overlay';\nimport {KeySequenceMap} from 'neuroglancer/util/keyboard_shortcut_handler';\n\nrequire('./key_bindings.css');\n\nlet KEY_MAP = new KeySequenceMap();\nKEY_MAP.bind('escape', 'close');\n\nexport function formatKeyName(name: string) {\n  if (name.startsWith('key')) {\n    return name.substring(3);\n  }\n  if (name.startsWith('digit')) {\n    return name.substring(5);\n  }\n  if (name.startsWith('arrow')) {\n    return name.substring(5);\n  }\n  return name;\n}\n\nexport function formatKeyStroke(stroke: string) {\n  let parts = stroke.split('+');\n  return parts.map(formatKeyName).join('+');\n}\n\nexport class KeyBindingHelpDialog extends Overlay {\n  /**\n   * @param keyMap Key map to list.\n   */\n  constructor(keyMap: KeySequenceMap) {\n    super(KEY_MAP);\n\n    let {content} = this;\n    content.classList.add('describe-key-bindings');\n\n    let scroll = document.createElement('div');\n\n    let dl = document.createElement('div');\n    dl.className = 'dl';\n\n    for (let [sequence, command] of keyMap.entries()) {\n      let container = document.createElement('div');\n      let container2 = document.createElement('div');\n      container2.className = 'definition-outer-container';\n      container.className = 'definition-container';\n      let dt = document.createElement('div');\n      dt.className = 'dt';\n      dt.textContent = sequence.map(formatKeyStroke).join(' ');\n      let dd = document.createElement('div');\n      dd.className = 'dd';\n      dd.textContent = command;\n      container.appendChild(dt);\n      container.appendChild(dd);\n      dl.appendChild(container2);\n      container2.appendChild(container);\n    }\n    scroll.appendChild(dl);\n    content.appendChild(scroll);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/help/key_bindings.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {GlobalKeyboardShortcutHandler, KeySequenceMap} from 'neuroglancer/util/keyboard_shortcut_handler';\n\nrequire('./overlay.css');\n\nexport let overlaysOpen = 0;\n\nexport class Overlay extends RefCounted {\n  container: HTMLDivElement;\n  keyboardShortcutHandler: GlobalKeyboardShortcutHandler;\n  content: HTMLDivElement;\n  constructor(public keySequenceMap: KeySequenceMap) {\n    super();\n    ++overlaysOpen;\n    let container = this.container = document.createElement('div');\n    container.className = 'overlay';\n    let content = this.content = document.createElement('div');\n    content.className = 'overlay-content';\n    container.appendChild(content);\n    document.getElementsByClassName('neurog-body')[0].appendChild(container);\n    this.keyboardShortcutHandler = this.registerDisposer(\n        new GlobalKeyboardShortcutHandler(keySequenceMap, this.commandReceived.bind(this)));\n  }\n\n  commandReceived(action: string) {\n    if (action === 'close') {\n      this.dispose();\n    }\n    return false;\n  }\n\n  disposed() {\n    --overlaysOpen;\n    document.getElementsByClassName('neurog-body')[0].removeChild(this.container);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/overlay.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This is based on goog/ui/keyboardshortcuthandler.js in the Google Closure library.\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\n\ntype Handler = (action: string) => boolean;\n\nconst MAX_KEY_SEQUENCE_DELAY = 1500;  // 1.5 sec\n\nconst globalKeys = new Set(['f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'f10', 'f11', 'f12', 'escape', 'pause']);\nconst DEFAULT_TEXT_INPUTS = new Set([\n  'color', 'date', 'datetime', 'datetime-local', 'email', 'month', 'number',\n  'password', 'search', 'tel', 'text', 'time', 'url', 'week'\n]);\n\nexport class KeyboardShortcutHandler extends RefCounted {\n  private currentNode: KeyStrokeMap;\n  private lastStrokeTime: number;\n  modifierShortcutsAreGlobal = true;\n  allShortcutsAreGlobal = false;\n  allowSpaceKeyOnButtons = false;\n  constructor(public target: EventTarget, public keySequenceMap: KeySequenceMap, public handler: Handler) {\n    super();\n    this.reset();\n    this.registerEventListener(target, 'keydown', this.handleKeyDown.bind(this), /*useCapture=*/true);\n  }\n\n  private reset() {\n    this.currentNode = this.keySequenceMap.root;\n    this.lastStrokeTime = Number.NEGATIVE_INFINITY;\n  }\n\n  setKeySequenceMap (keySequenceMap: KeySequenceMap) {\n    this.keySequenceMap = keySequenceMap;\n    this.reset();\n  }\n\n  private shouldIgnoreEvent(key: string, event: KeyboardEvent) {\n    var el = <HTMLElement>event.target;\n    let {tagName} = el;\n    if (el === this.target) {\n      // If the event is directly on the target element, we never ignore it.\n      return false;\n    }\n    var isFormElement = tagName === 'TEXTAREA' || tagName === 'INPUT' || tagName === 'BUTTON' ||\n        tagName === 'SELECT';\n\n    var isContentEditable = !isFormElement &&\n        (el.isContentEditable || (el.ownerDocument && el.ownerDocument.designMode === 'on'));\n\n    if (!isFormElement && !isContentEditable) {\n      return false;\n    }\n    // Always allow keys registered as global to be used (typically Esc, the\n    // F-keys and other keys that are not typically used to manipulate text).\n    if (this.allShortcutsAreGlobal || globalKeys.has(key)) {\n      return false;\n    }\n    if (isContentEditable) {\n      // For events originating from an element in editing mode we only let\n      // global key codes through.\n      return true;\n    }\n    // Event target is one of (TEXTAREA, INPUT, BUTTON, SELECT).\n    // Allow modifier shortcuts, unless we shouldn't.\n    if (this.modifierShortcutsAreGlobal && (event.altKey || event.ctrlKey || event.metaKey)) {\n      return true;\n    }\n    // Allow ENTER to be used as shortcut for text inputs.\n    if (tagName === 'INPUT' && DEFAULT_TEXT_INPUTS.has((<HTMLInputElement>el).type)) {\n      return key !== 'enter';\n    }\n    // Checkboxes, radiobuttons and buttons. Allow all but SPACE as shortcut.\n    if (tagName === 'INPUT' || tagName === 'BUTTON') {\n      // TODO(gboyer): If more flexibility is needed, create protected helper\n      // methods for each case (e.g. button, input, etc).\n      if (this.allowSpaceKeyOnButtons) {\n        return false;\n      } else {\n        return key === 'space';\n      }\n    }\n    // Don't allow any additional shortcut keys for textareas or selects.\n    return true;\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    let key = getEventKeyName(event);\n    if (this.shouldIgnoreEvent(key, event)) {\n      return;\n    }\n    let stroke = getStrokeIdentifier(key, getEventModifierMask(event));\n    let root = this.keySequenceMap.root;\n    let {currentNode} = this;\n    let value = currentNode.get(stroke);\n    let now = Date.now();\n    if (currentNode !== root && (value === undefined || now > this.lastStrokeTime + MAX_KEY_SEQUENCE_DELAY)) {\n      this.currentNode = root;\n      value = currentNode.get(stroke);\n    }\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      // Terminal node.\n      this.reset();\n      if (this.handler(value)) {\n        event.preventDefault();\n      }\n    } else {\n      this.currentNode = value;\n      this.lastStrokeTime = now;\n      event.preventDefault();\n    }\n  }\n};\n\nexport function getEventStrokeIdentifier(event: KeyboardEvent) {\n  return getStrokeIdentifier(getEventKeyName(event), getEventModifierMask(event));\n}\n\ntype KeyStrokeMap = Map<string, any>;\n\ntype KeySequence = string | string[];\n\nexport type KeyStrokeIdentifier = string;\n\nconst enum Modifiers {\n  CONTROL = 1,\n  ALT = 2,\n  META = 4,\n  SHIFT = 8,\n};\n\ntype ModifierMask = number;\n\nexport function getEventModifierMask(event: KeyboardEvent) {\n  return (event.ctrlKey ? Modifiers.CONTROL : 0) | (event.altKey ? Modifiers.ALT : 0) |\n      (event.metaKey ? Modifiers.META : 0) | (event.shiftKey ? Modifiers.SHIFT : 0);\n}\n\nexport function getStrokeIdentifier(keyName: string, modifiers: ModifierMask) {\n  let identifier = '';\n  if (modifiers & Modifiers.CONTROL) {\n    identifier += 'control+';\n  }\n  if (modifiers & Modifiers.ALT) {\n    identifier += 'alt+';\n  }\n  if (modifiers & Modifiers.META) {\n    identifier += 'meta+';\n  }\n  if (modifiers & Modifiers.SHIFT) {\n    identifier += 'shift+';\n  }\n  identifier += keyName;\n  return identifier;\n}\n\nexport function getEventKeyName(event: KeyboardEvent): string {\n  return event.code.toLowerCase();\n}\n\nexport function parseKeyStroke(strokeIdentifier: string) {\n  strokeIdentifier = strokeIdentifier.toLowerCase().replace(' ', '');\n  let parts = strokeIdentifier.split('+');\n  let keyName: string = undefined;\n  let modifiers = 0;\n  for (let part of parts) {\n    switch (part) {\n    case 'control':\n      modifiers |= Modifiers.CONTROL;\n      break;\n    case 'alt':\n      modifiers |= Modifiers.ALT;\n      break;\n    case 'meta':\n      modifiers |= Modifiers.META;\n      break;\n    case 'shift':\n      modifiers |= Modifiers.SHIFT;\n      break;\n    default:\n      if (keyName === undefined) {\n        keyName = part;\n      } else {\n        keyName = null;\n      }\n    }\n  }\n  if (keyName == null) {\n    throw new Error(`Invalid stroke ${JSON.stringify(strokeIdentifier)}`);\n  }\n  return getStrokeIdentifier(keyName, modifiers);\n}\n\nexport function parseKeySequence(sequence: KeySequence) {\n  if (typeof sequence === 'string') {\n    let s = <string>sequence;\n    s = s.replace(/[ +]*\\+[ +]*/g, '+').replace(/[ ]+/g, ' ').toLowerCase();\n    sequence = s.split(' ');\n  }\n  let parts = (<string[]>sequence).map(parseKeyStroke);\n  if (parts.length === 0) {\n    throw new Error('Key sequence must not be empty');\n  }\n  return parts;\n}\n\nexport function formatKeySequence(sequence: string[]) {\n  return JSON.stringify(sequence.join(' '));\n}\n\ninterface Bindings {\n  [keySequenceSpec: string]: string;\n}\n\nfunction* keySequenceMapEntries(\n              map: Map<string, any>, prefix: string[] = []): IterableIterator<[string[], string]> {\n  for (let [key, value] of map) {\n    let newPrefix = [...prefix, key];\n    if (typeof value === 'string') {\n      yield[newPrefix, value];\n    } else {\n      yield* keySequenceMapEntries(value, newPrefix);\n    }\n  }\n}\n\nexport class KeySequenceMap {\n  root = new Map<string, any>();\n  constructor (bindings: Bindings = null) {\n    if (bindings != null) {\n      this.bindMultiple(bindings);\n    }\n  }\n\n  bind (keySequenceSpec: KeySequence, action: string) {\n    let keySequence = parseKeySequence(keySequenceSpec);\n    let currentNode = this.root;\n    let prefixEnd = keySequence.length - 1;\n    for (let i = 0; i < prefixEnd; ++i) {\n      let stroke = keySequence[i];\n      let value = currentNode.get(stroke);\n      if (value === undefined) {\n        value = new Map<string, any>();\n        currentNode.set(stroke, value);\n      }\n      if (typeof value === 'string') {\n        throw new Error(\n            `Error binding key sequence ${formatKeySequence(keySequence)}: prefix ${formatKeySequence(keySequence.slice(0, i + 1))} is already bound to action ${JSON.stringify(value)}`);\n      }\n      currentNode = value;\n    }\n    let stroke = keySequence[prefixEnd];\n    let existingValue = currentNode.get(stroke);\n    if (existingValue !== undefined) {\n      throw new Error(`Key sequence ${formatKeySequence(keySequence)} is already bound to action ${JSON.stringify(existingValue)}`);\n    }\n    currentNode.set(stroke, action);\n  }\n\n  bindMultiple(bindings: {[keySequenceSpec: string]: string}) {\n    for (let key of Object.keys(bindings)) {\n      this.bind(key, bindings[key]);\n    }\n  }\n\n  entries () {\n    return keySequenceMapEntries(this.root);\n  }\n};\n\nlet globalKeyboardHandler: KeyboardShortcutHandler;\nlet globalKeyboardHandlerStack = new Array<[KeySequenceMap, Handler, any]>();\nlet globalKeyboardState: any;\n\nexport function pushGlobalKeyboardHandler(keySequenceMap: KeySequenceMap, handler: Handler, identifier: any) {\n  if (globalKeyboardHandler === undefined) {\n    globalKeyboardHandler = new KeyboardShortcutHandler(window, new KeySequenceMap(), () => { return false; });\n  }\n  globalKeyboardHandlerStack.push([globalKeyboardHandler.keySequenceMap, globalKeyboardHandler.handler, globalKeyboardState]);\n  globalKeyboardHandler.setKeySequenceMap(keySequenceMap);\n  globalKeyboardHandler.handler = handler;\n  globalKeyboardState = identifier;\n}\n\nexport function popGlobalKeyboardHandler() {\n  let [keySequenceMap, handler, identifier] = globalKeyboardHandlerStack.pop();\n  globalKeyboardHandler.setKeySequenceMap(keySequenceMap);\n  globalKeyboardHandler.handler = handler;\n  globalKeyboardState = identifier;\n}\n\nexport class GlobalKeyboardShortcutHandler extends RefCounted {\n  constructor(public keySequenceMap: KeySequenceMap, public handler: Handler) {\n    super();\n    pushGlobalKeyboardHandler(keySequenceMap, handler, this);\n  }\n  disposed () {\n    if (globalKeyboardState === this) {\n      popGlobalKeyboardHandler();\n    } else {\n      let index = globalKeyboardHandlerStack.findIndex(stackEntry => stackEntry[2] === this);\n      globalKeyboardHandlerStack.splice(index, 1);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/keyboard_shortcut_handler.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/overlay.css\n ** module id = 90\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/help/key_bindings.css\n ** module id = 91\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Overlay} from 'neuroglancer/overlay';\nimport {getVolume, volumeCompleter, suggestLayerName, findSourceGroup} from 'neuroglancer/datasource/factory';\nimport {LayerListSpecification, ManagedUserLayerWithSpecification} from 'neuroglancer/layer_specification';\nimport {DataType, VolumeType} from 'neuroglancer/sliceview/base';\nimport {MultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {KeySequenceMap} from 'neuroglancer/util/keyboard_shortcut_handler';\nimport {CANCELLED, cancellableThen, cancelPromise} from 'neuroglancer/util/promise';\nimport {AutocompleteTextInput, makeCompletionElementWithDescription} from 'neuroglancer/widget/autocomplete';\nimport {associateLabelWithElement} from 'neuroglancer/widget/associate_label';\nimport {makeHiddenSubmitButton} from 'neuroglancer/widget/hidden_submit_button';\n\nrequire('./layer_dialog.css');\n\nlet KEY_MAP = new KeySequenceMap();\nKEY_MAP.bind('escape', 'close');\n\nexport class LayerDialog extends Overlay {\n\n  /**\n   * Used for displaying status information.\n   */\n  statusElement = document.createElement('div');\n\n  sourceInput: AutocompleteTextInput;\n  submitElement = document.createElement('button');\n  namePromptElement = document.createElement('label');\n  nameInputElement = document.createElement('input');\n  volumePromise: Promise<void>|undefined;\n  sourceValid: boolean = false;\n  nameValid: boolean = true;\n\n  constructor (public manager: LayerListSpecification,\n               public existingLayer?: ManagedUserLayerWithSpecification) {\n    super(KEY_MAP);\n    let dialogElement = this.content;\n    dialogElement.classList.add('add-layer-overlay');\n\n    let sourceCompleter = (value: string) =>\n        cancellableThen(volumeCompleter(value), originalResult => ({\n                                                  completions: originalResult.completions,\n                                                  makeElement: makeCompletionElementWithDescription,\n                                                  offset: originalResult.offset,\n                                                  showSingleResult: true,\n        }));\n    let sourceForm = document.createElement('form');\n    sourceForm.className = 'source-form';\n    this.registerEventListener(sourceForm, 'submit', (event: Event) => {\n      event.preventDefault();\n      this.validateSource(/*focusName=*/true);\n    });\n\n    let sourcePrompt = document.createElement('label');\n    sourcePrompt.textContent = 'Source:';\n    let sourceInput = this.sourceInput =\n      this.registerDisposer(new AutocompleteTextInput({completer: sourceCompleter, delay: 0}));\n    sourceInput.element.classList.add('add-layer-source');\n    sourceInput.inputElement.addEventListener('blur', event => {\n      this.validateSource(/*focusName=*/false);\n    });\n    this.submitElement.disabled = true;\n    sourceInput.inputChanged.add(() => {\n      cancelPromise(this.volumePromise);\n      this.volumePromise = undefined;\n      this.sourceValid = false;\n      this.submitElement.disabled = true;\n      this.statusElement.textContent = '';\n    });\n    sourceForm.appendChild(sourcePrompt);\n    sourceForm.appendChild(sourceInput.element);\n    associateLabelWithElement(sourcePrompt, sourceInput.inputElement);\n    let hiddenSourceSubmit = makeHiddenSubmitButton();\n    sourceForm.appendChild(hiddenSourceSubmit);\n\n    dialogElement.appendChild(sourceForm);\n\n    let {statusElement, namePromptElement, nameInputElement, submitElement} = this;\n    statusElement.className = 'dialog-status';\n\n    let nameForm = document.createElement('form');\n    nameForm.className = 'name-form';\n    namePromptElement.textContent = 'Name:';\n    nameInputElement.className = 'add-layer-name';\n    nameInputElement.autocomplete = 'off';\n    nameInputElement.spellcheck = false;\n\n    nameInputElement.type = 'text';\n\n    this.registerEventListener(nameInputElement, 'input', () => {\n      this.validateName();\n    });\n\n    submitElement.type = 'submit';\n\n    associateLabelWithElement(namePromptElement, nameInputElement);\n\n    nameForm.appendChild(namePromptElement);\n    nameForm.appendChild(nameInputElement);\n    nameForm.appendChild(submitElement);\n    dialogElement.appendChild(nameForm);\n\n    dialogElement.appendChild(statusElement);\n\n    if (existingLayer !== undefined) {\n      if (existingLayer.sourceUrl !== undefined) {\n        sourceInput.value = existingLayer.sourceUrl;\n        this.validateSource();\n      } else {\n        this.sourceValid = true;\n      }\n      sourceInput.disabled = true;\n      nameInputElement.value = existingLayer.name;\n      this.validateName();\n      submitElement.textContent = 'Save';\n      nameInputElement.focus();\n    } else {\n      let {managedLayers} = this.manager.layerManager;\n      if (managedLayers.length > 0) {\n        let lastLayer = managedLayers[managedLayers.length - 1];\n        if (lastLayer instanceof ManagedUserLayerWithSpecification) {\n          let {sourceUrl} = lastLayer;\n          if (sourceUrl !== undefined) {\n            let groupIndex = findSourceGroup(sourceUrl);\n            sourceInput.value = sourceUrl.substring(0, groupIndex);\n            sourceInput.inputElement.setSelectionRange(0, groupIndex);\n          }\n        }\n      }\n      sourceInput.inputElement.focus();\n      submitElement.textContent = 'Add Layer';\n    }\n\n    this.registerEventListener(nameForm, 'submit', (event: Event) => {\n      event.preventDefault();\n      this.submit();\n    });\n  }\n\n  isNameValid() {\n    let name = this.nameInputElement.value;\n    if (name === '') {\n      return false;\n    }\n    let otherLayer = this.manager.layerManager.getLayerByName(name);\n    return otherLayer === undefined || otherLayer === this.existingLayer;\n  }\n\n  submit() {\n    if (this.sourceValid && this.isNameValid()) {\n      if (this.existingLayer) {\n        this.existingLayer.name = this.nameInputElement.value;\n        this.manager.layerManager.layersChanged.dispatch();\n      } else {\n        this.manager.layerManager.addManagedLayer(\n            this.manager.getLayer(this.nameInputElement.value, this.sourceInput.value));\n      }\n      this.dispose();\n    }\n  }\n\n  validateName() {\n    let {nameInputElement} = this;\n    let nameValid = this.nameValid = this.isNameValid();\n    if (nameValid) {\n      nameInputElement.classList.add('valid-input');\n      nameInputElement.classList.remove('invalid-input');\n    } else {\n      nameInputElement.classList.remove('valid-input');\n      nameInputElement.classList.add('invalid-input');\n    }\n    this.validityChanged();\n  }\n\n  validityChanged() {\n    this.submitElement.disabled = !(this.nameValid && this.sourceValid);\n  }\n\n  validateSource(focusName: boolean = false) {\n    let url = this.sourceInput.value;\n    if (url === '') {\n      return;\n    }\n    try {\n      let baseSuggestedName = suggestLayerName(url);\n      let {nameInputElement} = this;\n      if (this.nameInputElement.value === '') {\n        let suggestedName = baseSuggestedName;\n        let suffix = 0;\n        while (this.manager.layerManager.getLayerByName(suggestedName) !== undefined) {\n          suggestedName = baseSuggestedName + (++suffix);\n        }\n        nameInputElement.value = suggestedName;\n        nameInputElement.setSelectionRange(0, suggestedName.length);\n        this.validateName();\n      }\n      if (focusName) {\n        nameInputElement.focus();\n      }\n    } catch (error) {\n      this.setError(error.message);\n      return;\n    }\n\n    this.setInfo('Validating volume source...');\n    let volumePromise = new Promise<MultiscaleVolumeChunkSource>(\n      resolve => { resolve(getVolume(url)); });\n    this.volumePromise = cancellableThen(volumePromise, source => {\n      this.sourceValid = true;\n      this.setInfo(`${VolumeType[source.volumeType].toLowerCase()}: ${source.numChannels}-channel ${DataType[source.dataType].toLowerCase()}`);\n      this.validityChanged();\n    });\n    volumePromise.catch((reason: Error) => {\n      if (reason === CANCELLED) {\n        return;\n      }\n      this.setError(reason.message);\n    });\n  }\n\n  setInfo(message: string) {\n    this.statusElement.className = 'dialog-status dialog-status-info';\n    this.statusElement.textContent = message;\n  }\n\n  setError(message: string) {\n    this.statusElement.className = 'dialog-status dialog-status-error';\n    this.statusElement.textContent = message;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/layer_dialog.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Trackable} from 'neuroglancer/url_hash_state';\nimport {VolumeType} from 'neuroglancer/sliceview/base';\nimport {MultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {Signal} from 'signals';\nimport {ManagedUserLayer, LayerManager, LayerSelectedValues} from 'neuroglancer/layer';\nimport {getVolume} from 'neuroglancer/datasource/factory';\nimport {RPC} from 'neuroglancer/worker_rpc';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {SegmentationUserLayer} from 'neuroglancer/segmentation_user_layer';\nimport {ImageUserLayer} from 'neuroglancer/image_user_layer';\nimport {VoxelSize} from 'neuroglancer/navigation_state';\nimport {StatusMessage} from 'neuroglancer/status';\nimport {verifyObject, verifyObjectProperty, verifyString, verifyOptionalString} from 'neuroglancer/util/json';\n\nexport function getVolumeWithStatusMessage(x: string): Promise<MultiscaleVolumeChunkSource> {\n  return StatusMessage.forPromise(new Promise(function(resolve) { resolve(getVolume(x)); }), {\n    initialMessage: `Retrieving metadata for volume ${x}.`,\n    delay: true,\n    errorPrefix: `Error retrieving metadata for volume ${x}: `,\n  });\n}\n\nexport class ManagedUserLayerWithSpecification extends ManagedUserLayer {\n  sourceUrl: string;\n\n  constructor(name: string, public initialSpecification: any, public manager: LayerListSpecification) {\n    super(name);\n  }\n\n  toJSON () {\n    let userLayer = this.layer;\n    if (!userLayer) {\n      return this.initialSpecification;\n    }\n    let layerSpec = userLayer.toJSON();\n    if (!this.visible) {\n      layerSpec['visible'] = false;\n    }\n    return layerSpec;\n  }\n};\n\nexport class LayerListSpecification extends RefCounted implements Trackable {\n  changed = new Signal();\n  constructor(\n      public layerManager: LayerManager, public chunkManager: ChunkManager, public worker: RPC,\n      public layerSelectedValues: LayerSelectedValues, public voxelSize: VoxelSize) {\n    super();\n    this.registerSignalBinding(layerManager.layersChanged.add(this.changed.dispatch, this.changed));\n    this.registerSignalBinding(layerManager.specificationChanged.add(this.changed.dispatch, this.changed));\n  }\n\n  restoreState(x: any) {\n    verifyObject(x);\n    this.layerManager.clear();\n    for (let key of Object.keys(x)) {\n      this.layerManager.addManagedLayer(this.getLayer(key, x[key]));\n    }\n  }\n\n  getLayer(name: string, spec: any) {\n    let managedLayer = new ManagedUserLayerWithSpecification(name, spec, this);\n    if (typeof spec === 'string') {\n      spec = {'source': spec};\n    }\n    verifyObject(spec);\n    let layerType = verifyObjectProperty(spec, 'type', verifyOptionalString);\n    managedLayer.visible = verifyObjectProperty(spec, 'visible', x => {\n      if (x === undefined || x === true) {\n        return true;\n      }\n      if (x === false) {\n        return false;\n      }\n      throw new Error(`Expected boolean, but received: ${JSON.stringify(x)}.`);\n    });\n    let sourceUrl = managedLayer.sourceUrl = verifyObjectProperty(spec, 'source', verifyOptionalString);\n    if (layerType === undefined) {\n      if (sourceUrl === undefined) {\n        throw new Error(`Either layer 'type' or 'source' URL must be specified.`);\n      }\n      let volumeSourcePromise = getVolumeWithStatusMessage(sourceUrl);\n      volumeSourcePromise.then(source => {\n        if (this.layerManager.managedLayers.indexOf(managedLayer) === -1) {\n          // Layer was removed before promise became ready.\n          return;\n        }\n        switch (source.volumeType) {\n          case VolumeType.IMAGE: {\n            let userLayer = new ImageUserLayer(this, spec);\n            managedLayer.layer = userLayer;\n          } break;\n          case VolumeType.SEGMENTATION: {\n            let userLayer = new SegmentationUserLayer(this, spec);\n            managedLayer.layer = userLayer;\n          } break;\n          default:\n            throw new Error('Unsupported source type.');\n        }\n      });\n    } else {\n      if (layerType === 'image') {\n        managedLayer.layer = new ImageUserLayer(this, spec);\n      } else if (layerType === 'segmentation') {\n        managedLayer.layer = new SegmentationUserLayer(this, spec);\n      } else {\n        throw new Error('Layer type not specified.');\n      }\n    }\n    return managedLayer;\n  }\n\n  toJSON () {\n    let result: any = {};\n    let numResults = 0;\n    for (let managedLayer of this.layerManager.managedLayers) {\n      result[managedLayer.name] = (<ManagedUserLayerWithSpecification>managedLayer).toJSON();\n      ++numResults;\n    }\n    if (numResults === 0) {\n      return undefined;\n    }\n    return result;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/layer_specification.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {UserLayer} from 'neuroglancer/layer';\nimport {SegmentColorHash} from 'neuroglancer/segment_color';\nimport {SegmentSetWidget} from 'neuroglancer/widget/segment_set_widget';\nimport {SegmentSelectionState, SegmentationDisplayState} from 'neuroglancer/segmentation_display_state';\nimport {Uint64Set} from 'neuroglancer/uint64_set';\nimport {Uint64} from 'neuroglancer/util/uint64';\nimport {LayerListSpecification} from 'neuroglancer/layer_specification';\nimport {SegmentationRenderLayer, trackableAlphaValue} from 'neuroglancer/sliceview/segmentation_renderlayer';\nimport {MeshSource} from 'neuroglancer/mesh/frontend';\nimport {getMeshSource, getSkeletonSource} from 'neuroglancer/datasource/factory';\nimport {MeshLayer} from 'neuroglancer/mesh/frontend';\nimport {SkeletonLayer, PerspectiveViewSkeletonLayer, SliceViewPanelSkeletonLayer} from 'neuroglancer/skeleton/frontend';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {Uint64EntryWidget} from 'neuroglancer/widget/uint64_entry_widget';\nimport {getVolumeWithStatusMessage} from 'neuroglancer/layer_specification';\nimport {RangeWidget} from 'neuroglancer/widget/range';\nimport {verifyOptionalString, parseArray, verifyObjectProperty} from 'neuroglancer/util/json';\n\nrequire('./segmentation_user_layer.css');\n\nexport class SegmentationUserLayer extends UserLayer implements SegmentationDisplayState {\n  segmentColorHash = SegmentColorHash.getDefault();\n  segmentSelectionState = new SegmentSelectionState();\n  selectedAlpha = trackableAlphaValue(0.5);\n  notSelectedAlpha = trackableAlphaValue(0);\n  visibleSegments: Uint64Set;\n  volumePath: string|undefined;\n  meshPath: string|undefined;\n  meshLod: number|undefined;\n  skeletonsPath: string|undefined;\n  meshLayer: MeshLayer|undefined;\n  wasDisposed = false;\n\n  constructor(public manager: LayerListSpecification, x: any) {\n    super([]);\n    this.visibleSegments = Uint64Set.makeWithCounterpart(manager.worker);\n    this.visibleSegments.changed.add(() => { this.specificationChanged.dispatch(); });\n    this.segmentSelectionState.bindTo(manager.layerSelectedValues, this);\n    this.selectedAlpha.changed.add(() => { this.specificationChanged.dispatch(); });\n    this.notSelectedAlpha.changed.add(() => { this.specificationChanged.dispatch(); });\n\n    this.selectedAlpha.restoreState(x['selectedAlpha']);\n    this.notSelectedAlpha.restoreState(x['notSelectedAlpha']);\n\n    let volumePath = this.volumePath = verifyOptionalString(x['source']);\n    let meshPath = this.meshPath = verifyOptionalString(x['mesh']);\n    let skeletonsPath = this.skeletonsPath = verifyOptionalString(x['skeletons']);\n    if (volumePath !== undefined) {\n      let volumePromise = getVolumeWithStatusMessage(volumePath);\n      volumePromise.then(volume => {\n        if (!this.wasDisposed) {\n          if (!this.meshLayer) {\n            let meshSource = volume.getMeshSource(this.manager.chunkManager);\n            if (meshSource != null) {\n              this.addMesh(meshSource);\n            }\n          }\n        }\n      });\n      this.addRenderLayer(new SegmentationRenderLayer(\n          manager.chunkManager, volumePromise, this, this.selectedAlpha, this.notSelectedAlpha));\n    }\n    if (meshPath !== undefined) {\n      let meshLod = x['meshLod'];\n      if (typeof meshLod !== 'number') {\n        meshLod = undefined;\n      }\n      this.meshLod = meshLod;\n      this.addMesh(getMeshSource(manager.chunkManager, meshPath, meshLod));\n    }\n    if (skeletonsPath !== undefined) {\n      let base = new SkeletonLayer(\n          manager.chunkManager, getSkeletonSource(manager.chunkManager, skeletonsPath),\n          manager.voxelSize, this);\n      this.addRenderLayer(new PerspectiveViewSkeletonLayer(base));\n      this.addRenderLayer(new SliceViewPanelSkeletonLayer(base));\n    }\n\n    verifyObjectProperty(x, 'segments', y => {\n      if (y !== undefined) {\n        let {visibleSegments} = this;\n        parseArray(y, value => {\n          let id = Uint64.parseString(String(value), 10);\n          visibleSegments.add(id);\n        });\n      }\n    });\n  }\n\n  disposed () {\n    super.disposed();\n    this.wasDisposed = true;\n  }\n\n  addMesh (meshSource: MeshSource) {\n    this.meshLayer = new MeshLayer(this.manager.chunkManager, meshSource, this);\n    this.addRenderLayer(this.meshLayer);\n  }\n\n  toJSON () {\n    let x: any = {'type': 'segmentation'};\n    x['source'] = this.volumePath;\n    x['mesh'] = this.meshPath;\n    x['meshLod'] = this.meshLod;\n    x['skeletons'] = this.skeletonsPath;\n    x['selectedAlpha'] = this.selectedAlpha.toJSON();\n    x['notSelectedAlpha'] = this.notSelectedAlpha.toJSON();\n    let {visibleSegments} = this;\n    if (visibleSegments.size > 0) {\n      let segments = x['segments'] = new Array<string>();\n      for (let id of visibleSegments) {\n        segments.push(id.toString());\n      }\n    }\n    return x;\n  }\n\n  makeDropdown(element: HTMLDivElement) {\n    return new SegmentationDropdown(element, this);\n  }\n\n  handleAction(action: string) {\n    switch (action) {\n      case 'recolor': {\n        this.segmentColorHash.randomize();\n        break;\n      }\n      case 'clear-segments': {\n        this.visibleSegments.clear();\n        break;\n      }\n      case 'select': {\n        let {segmentSelectionState} = this;\n        if (segmentSelectionState.hasSelectedSegment) {\n          let segment = segmentSelectionState.selectedSegment;\n          let {visibleSegments} = this;\n          if (visibleSegments.has(segment)) {\n            visibleSegments.delete(segment);\n          } else {\n            visibleSegments.add(segment);\n          }\n        }\n        break;\n      }\n    }\n  }\n};\n\nclass SegmentationDropdown extends RefCounted {\n  visibleSegmentWidget = this.registerDisposer(new SegmentSetWidget(this.layer));\n  addSegmentWidget = this.registerDisposer(new Uint64EntryWidget());\n  selectedAlphaWidget = this.registerDisposer(new RangeWidget(this.layer.selectedAlpha));\n  notSelectedAlphaWidget = this.registerDisposer(new RangeWidget(this.layer.notSelectedAlpha));\n  constructor(public element: HTMLDivElement, public layer: SegmentationUserLayer) {\n    super();\n    element.classList.add('segmentation-dropdown');\n    let {selectedAlphaWidget, notSelectedAlphaWidget} = this;\n    selectedAlphaWidget.promptElement.textContent = 'Opacity (on)';\n    selectedAlphaWidget.inputElement.min = '0';\n    selectedAlphaWidget.inputElement.max = '1';\n    notSelectedAlphaWidget.promptElement.textContent = 'Opacity (off)';\n\n    element.appendChild(this.selectedAlphaWidget.element);\n    element.appendChild(this.notSelectedAlphaWidget.element);\n    this.addSegmentWidget.element.classList.add('add-segment');\n    this.addSegmentWidget.element.title = 'Add segment ID';\n    element.appendChild(this.registerDisposer(this.addSegmentWidget).element);\n    this.registerSignalBinding(this.addSegmentWidget.valueEntered.add((value: Uint64) => {\n      this.layer.visibleSegments.add(value);\n    }));\n    element.appendChild(this.registerDisposer(this.visibleSegmentWidget).element);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/segmentation_user_layer.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {HashFunction, PRIME_MODULUS} from 'neuroglancer/gpu_hash/hash_function';\nimport {ShaderBuilder, ShaderProgram} from 'neuroglancer/webgl/shader';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {glsl_uint64, glsl_hsvToRgb} from 'neuroglancer/webgl/shader_lib';\nimport {glsl_hashFunction} from 'neuroglancer/gpu_hash/shader';\nimport {Signal} from 'signals';\nimport {Uint64} from 'neuroglancer/util/uint64';\nimport {hsvToRgb} from 'neuroglancer/util/colorspace';\n\nconst NUM_COMPONENTS = 2;\n\nexport class SegmentColorShaderManager {\n  aName = this.prefix + '_a';\n  bName = this.prefix + '_b';\n\n  constructor(public prefix: string) {}\n\n  defineShader(builder: ShaderBuilder) {\n    let {aName, bName} = this;\n    builder.addUniform('highp vec4', aName, 2 * NUM_COMPONENTS);\n    builder.addUniform('highp float', bName, 2 * NUM_COMPONENTS);\n    builder.addFragmentCode(glsl_uint64);\n    builder.addFragmentCode(glsl_hashFunction);\n    builder.addFragmentCode(glsl_hsvToRgb);\n    let s = `\nvec3 ${this.prefix}(uint64_t x) {\n  vec${NUM_COMPONENTS} v;\n  float primeModulus = float(${PRIME_MODULUS});\n`;\n    for (let i = 0; i < NUM_COMPONENTS; ++i) {\n      let bIndex = 2 * i;\n      let aIndex = 2 * i;\n      s += `\n  v[${i}] = computeHash(x, ${aName}[${aIndex}], ${aName}[${aIndex + 1}], ${bName}[${bIndex}], ${bName}[${bIndex + 1}], primeModulus, 1.0 / 256.0);\n`;\n    }\n    s += `\n  vec3 hsv = vec3(v.x, 0.5 + v.y * 0.5, 1.0);\n  return hsvToRgb(hsv);\n}\n`;\n    builder.addFragmentCode(s);\n  }\n\n  enable(gl: GL, shader: ShaderProgram, segmentColorHash: SegmentColorHash) {\n    gl.uniform4fv(shader.uniform(this.aName), segmentColorHash.a_);\n    gl.uniform1fv(shader.uniform(this.bName), segmentColorHash.b_);\n  }\n};\n\nfunction fract(x: number) {\n  return x - Math.floor(x);\n}\n\nlet tempOutput = new Float32Array(NUM_COMPONENTS);\nlet tempColor = new Float32Array(3);\n\nexport class SegmentColorHash {\n  hashFunctions: HashFunction[];\n  a_ = new Float32Array(4 * 2 * NUM_COMPONENTS);\n  b_ = new Float32Array(2 * NUM_COMPONENTS);\n  changed = new Signal();\n\n  constructor(hashFunctions?: HashFunction[]) {\n    if (hashFunctions == null) {\n      this.hashFunctions = new Array(NUM_COMPONENTS);\n      this.randomize_();\n    } else {\n      this.hashFunctions = hashFunctions;\n    }\n    this.computeGPUCoefficients_();\n  }\n\n  static getDefault() {\n    return new SegmentColorHash([\n      new HashFunction(\n          Float32Array.of(609, 2364, 3749, 2289), Float32Array.of(2840, 1186, 3660, 1833), 1718,\n          1109),\n      new HashFunction(\n          Float32Array.of(3466, 3835, 3345, 2040), Float32Array.of(3382, 901, 18, 3444), 1534, 1432)\n    ]);\n  }\n\n  compute(out: Float32Array, x: Uint64) {\n    let {low, high} = x;\n    let {hashFunctions} = this;\n    for (let i = 0; i < 2; ++i) {\n      tempOutput[i] = fract(hashFunctions[i].compute(low, high) / 256.0);\n    }\n    hsvToRgb(out, tempOutput[0], 0.5 + 0.5 * tempOutput[1], 1.0);\n    return out;\n  }\n\n  computeCssColor(x: Uint64) {\n    this.compute(tempColor, x);\n    return `rgb(${tempColor[0] * 100}%,${tempColor[1] * 100}%,${tempColor[2] * 100}%)`;\n  }\n\n  debugCompute(out: Float32Array, x: Uint64) {\n    function mod(a: number, b: number) { return a % b; }\n    let {low, high} = x;\n    let b = this.b_;\n    let modulus = PRIME_MODULUS;\n    for (let i = 0; i < 2; ++i) {\n      let bIndex = 2 * i;\n      let aIndex = 2 * i;\n      let sums = new Float32Array(2);\n      for (let j = 0; j < 4; ++j) {\n        sums[0] += this.a_[aIndex * 4 + j] * (((low >> (j * 8)) & 0xFF));\n        sums[1] += this.a_[(aIndex + 1) * 4 + j] * (((high >> (j * 8)) & 0xFF));\n      }\n      let dotResult = mod(sums[0] + sums[1], modulus);\n      let dotResult2 = mod(dotResult * dotResult, modulus);\n      let y = mod(dotResult2 * b[bIndex + 1], modulus);\n      let modResult = mod(b[bIndex] + dotResult + y, modulus);\n      console.log(\n          `b = ${b[bIndex]}, sums=${sums[0]} ${sums[1]}, dotResult=${dotResult}, prod = ${dotResult * dotResult} dotResult2=${dotResult2}, y=${y}, modResult=${modResult}`);\n      out[i] = fract(modResult * (1.0 / 256.0));\n    }\n    return out;\n  }\n\n  randomize_() {\n    for (let i = 0; i < 2; ++i) {\n      this.hashFunctions[i] = HashFunction.generate();\n    }\n  }\n  randomize() {\n    this.randomize_();\n    this.computeGPUCoefficients_();\n    this.changed.dispatch();\n  }\n\n  toString() { return `new SegmentColorHash([${this.hashFunctions}])`; }\n\n  computeGPUCoefficients_() {\n    let hashFunctions = this.hashFunctions;\n    let a = this.a_;\n    let b = this.b_;\n    let aScalar = 1.0;\n    let bScalar = 1.0;\n    for (let i = 0; i < NUM_COMPONENTS; ++i) {\n      let h = hashFunctions[i];\n      let bIndex = 2 * i;\n      let aIndex = 4 * (2 * i);\n      b[bIndex] = h.b * bScalar;\n      b[bIndex + 1] = h.c * bScalar;\n      for (let j = 0; j < 4; ++j) {\n        a[aIndex + j] = h.a0[j] * aScalar;\n        a[aIndex + 4 + j] = h.a1[j] * aScalar;\n      }\n    }\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/segment_color.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PRIME_MODULUS = 4093;\n\nexport class HashFunction {\n  constructor(public a0: Float32Array, public a1: Float32Array, public b: number, public c: number) {}\n\n  computeDotProduct(low: number, high: number) {\n    let {a0, a1} = this;\n    let a0DotLow = a0[0] * (low & 0xFF) + a0[1] * ((low >> 8) & 0xFF) +\n        a0[2] * ((low >> 16) & 0xFF) + a0[3] * ((low >> 24) & 0xFF);\n    let a1DotHigh = a1[0] * (high & 0xFF) + a1[1] * ((high >> 8) & 0xFF) +\n        a1[2] * ((high >> 16) & 0xFF) + a1[3] * ((high >> 24) & 0xFF);\n    return a0DotLow + a1DotHigh;\n  }\n\n  compute(low: number, high: number) {\n    let {b, c} = this;\n    let x = this.computeDotProduct(low, high);\n    let x2 = (x * x) % PRIME_MODULUS;\n    let result = (x + x2 * c + b) % PRIME_MODULUS;\n    return result;\n  }\n\n  toString() {\n    return `new HashFunction(Float32Array.of(${this.a0}), Float32Array.of(${this.a1}), ${this.b}, ${this.c})`;\n  }\n\n  static generate() {\n    function genCoeff() { return Math.floor(Math.random() * PRIME_MODULUS); }\n    function genVector() { return Float32Array.of(genCoeff(), genCoeff(), genCoeff(), genCoeff()); }\n    return new HashFunction(genVector(), genVector(), genCoeff(), genCoeff());\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/gpu_hash/hash_function.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {HashFunction, PRIME_MODULUS} from 'neuroglancer/gpu_hash/hash_function';\nimport {HashTable, NUM_ALTERNATIVES} from 'neuroglancer/gpu_hash/hash_table';\nimport {glsl_exactDot, glsl_imod, glsl_uint64} from 'neuroglancer/webgl/shader_lib';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {setRawTextureParameters} from 'neuroglancer/webgl/texture';\nimport {ShaderBuilder, ShaderProgram} from 'neuroglancer/webgl/shader';\n\nexport const glsl_hashFunction = [\n  glsl_uint64,\n  glsl_exactDot,\n  glsl_imod, `\nfloat computeHash(uint64_t x, vec4 a0, vec4 a1, float b, float c, float modulus, float scalar) {\n  x.low *= 255.0;\n  x.high *= 255.0;\n  float dotResult = imod(exactDot(a0, x.low) + exactDot(a1, x.high), modulus);\n  float dotResult2 = imod(dotResult * dotResult, modulus);\n  float y = imod(dotResult2 * c, modulus);\n  float modResult = imod(dotResult + y + b, modulus);\n  return fract(modResult * scalar);\n}\n`\n];\n\nexport class GPUHashTable extends RefCounted {\n  a: Float32Array;\n  b: Float32Array;\n  hashFunctions: HashFunction[][] = null;\n  generation: number = null;\n  textures = new Array<WebGLTexture>();\n\n  constructor(public gl: GL, public hashTable: HashTable) {\n    super();\n    let numAlternatives = hashTable.hashFunctions.length;\n    this.a = new Float32Array(4 * (numAlternatives * 4));\n    this.b = new Float32Array(numAlternatives * 4 + 5);\n    let {textures} = this;\n    for (let i = 0; i < numAlternatives; ++i) {\n      textures[i] = gl.createTexture();\n    }\n  }\n\n  computeCoefficients() {\n    let {hashTable} = this;\n    let hashFunctions = hashTable.hashFunctions;\n    if (this.hashFunctions === hashFunctions) {\n      return;\n    }\n    this.hashFunctions = hashFunctions;\n    let {a, b} = this;\n    let numAlternatives = hashFunctions.length;\n    let {width, height} = hashTable;\n    let scalar = [1.0 / width, 1.0 / height];\n    for (let i = 0; i < 2; ++i) {\n      b[numAlternatives * 4 + i] = PRIME_MODULUS;\n      b[numAlternatives * 4 + 3 + i] = scalar[i];\n    }\n    b[numAlternatives * 4 + 2] = 1 / (2 * width);\n    for (let alt = 0; alt < numAlternatives; ++alt) {\n      let curFunctions = hashFunctions[alt];\n      for (let i = 0; i < 2; ++i) {\n        let h = curFunctions[i];\n        let bIndex = alt * 4 + 2 * i;\n        let aIndex = 4 * (alt * 4 + 2 * i);\n        // Add 0.5 to b to give maximum margin of error.\n        //\n        // For the x coordinate (i == 0), since each position is used to address two texels (for the\n        // low and high uint32 values), we only add 0.25.\n        b[bIndex] = h.b + (i === 0 ? 0.25 : 0.5);\n        b[bIndex + 1] = h.c;\n        for (let j = 0; j < 4; ++j) {\n          a[aIndex + j] = h.a0[j];\n          a[aIndex + 4 + j] = h.a1[j];\n        }\n      }\n    }\n  }\n\n\n  copyToGPU() {\n    this.computeCoefficients();\n    let {hashTable} = this;\n    let {generation} = hashTable;\n    if (this.generation === generation) {\n      return;\n    }\n    this.generation = generation;\n    let {width, height, tables} = hashTable;\n    let {gl, textures} = this;\n    let numAlternatives = textures.length;\n    gl.activeTexture(gl.TEXTURE0 + gl.tempTextureUnit);\n    for (let alt = 0; alt < numAlternatives; ++alt) {\n      gl.bindTexture(gl.TEXTURE_2D, textures[alt]);\n      gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n      setRawTextureParameters(gl);\n\n      const format = gl.RGBA;\n\n      gl.texImage2D(\n          gl.TEXTURE_2D,\n          /*level=*/0, format,\n          /*width=*/width * 2,\n          /*height=*/height,\n          /*border=*/0, format, gl.UNSIGNED_BYTE, new Uint8Array(tables[alt].buffer));\n    }\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  disposed() {\n    let {gl} = this;\n    this.textures.forEach((texture) => { gl.deleteTexture(texture); });\n    this.textures = null;\n    this.gl = null;\n    this.hashTable = null;\n    this.hashFunctions = null;\n  }\n\n  static get (gl: GL, hashTable: HashTable) {\n    return gl.memoize.get(hashTable, () => new GPUHashTable(gl, hashTable));\n  }\n};\n\nexport class HashTableShaderManager {\n  textureUnitSymbol = Symbol('gpuhashtable:' + this.prefix);\n  aName = this.prefix + '_a';\n  bName = this.prefix + '_b';\n  samplerName = this.prefix + '_sampler';\n\n  constructor(public prefix: string, public numAlternatives = NUM_ALTERNATIVES) {}\n\n  defineShader (builder: ShaderBuilder) {\n    let {aName, bName, samplerName, numAlternatives} = this;\n    builder.addUniform('highp vec4', aName, numAlternatives * 4);\n    builder.addUniform('highp float', bName, numAlternatives * 4 + 5);\n    builder.addTextureSampler2D(samplerName, this.textureUnitSymbol, numAlternatives);\n    builder.addFragmentCode(glsl_hashFunction);\n    let s = '';\n    for (let alt = 0; alt < numAlternatives; ++alt) {\n      for (let i = 0; i < 2; ++i) {\n        let bIndex = alt * 4 + 2 * i;\n        let aIndex = alt * 4 + 2 * i;\n        s += `\nfloat ${this.prefix}_computeHash_${alt}_${i}(uint64_t x) {\n  float primeModulus = ${bName}[${numAlternatives * 4 + i}];\n  float scalar = ${bName}[${numAlternatives * 4 + 3 + i}];\n  return computeHash(x, ${aName}[${aIndex}], ${aName}[${aIndex + 1}], ${bName}[${bIndex}], ${bName}[${bIndex + 1}], primeModulus, scalar);\n}\n`;\n      }\n      s += `\nvec2 ${this.prefix}_computeHash_${alt}(uint64_t x) {\n  vec2 v;\n  v[0] = ${this.prefix}_computeHash_${alt}_0(x);\n  v[1] = ${this.prefix}_computeHash_${alt}_1(x);\n  return v;\n}\n`;\n    }\n    s += `\nbool ${this.hasFunctionName}(uint64_t x) {\n  float highOffset = ${bName}[${numAlternatives * 4 + 2}];\n`;\n    for (let alt = 0; alt < numAlternatives; ++alt) {\n      s += `\n  {\n    vec2 v = ${this.prefix}_computeHash_${alt}(x);\n    vec4 lowResult = texture2D(${samplerName}[${alt}], v);\n    vec4 highResult = texture2D(${samplerName}[${alt}], vec2(v.x + highOffset, v.y));\n    if (lowResult == x.low && highResult == x.high) {\n      return true;\n    }\n  }\n`;\n    }\n    s += `\n  return false;\n}\n`;\n    builder.addFragmentCode(s);\n  }\n\n  get hasFunctionName() { return `${this.prefix}_has`; }\n\n  enable(gl: GL, shader: ShaderProgram, hashTable: GPUHashTable) {\n    let {numAlternatives} = this;\n    let {textures} = hashTable;\n    hashTable.copyToGPU();\n    let textureUnit = shader.textureUnit(this.textureUnitSymbol);\n    for (let alt = 0; alt < numAlternatives; ++alt) {\n      let unit = alt + textureUnit;\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, textures[alt]);\n    }\n    gl.uniform4fv(shader.uniform(this.aName), hashTable.a);\n    gl.uniform1fv(shader.uniform(this.bName), hashTable.b);\n  }\n\n  disable(gl: GL, shader: ShaderProgram) {\n    let {numAlternatives} = this;\n    let textureUnit = shader.textureUnit(this.textureUnitSymbol);\n    for (let alt = 0; alt < numAlternatives; ++alt) {\n      let unit = alt + textureUnit;\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/gpu_hash/shader.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {HashFunction} from 'neuroglancer/gpu_hash/hash_function';\n\nexport const NUM_ALTERNATIVES = 3;\n\nconst DEFAULT_LOAD_FACTOR = 0.9;\n\nexport class HashTable {\n  hashFunctions: HashFunction[][];\n  loadFactor = DEFAULT_LOAD_FACTOR;\n  size = 0;\n  tables: Uint32Array[];\n  growFactor = 1.2;\n  maxWidth = 4096;\n  width: number = null;\n  height: number = null;\n  maxHeight = 8192;\n  emptyLow = 4294967295;\n  emptyHigh = 4294967295;\n  maxRehashAttempts = 5;\n  maxAttempts = 5;\n  capacity: number;\n  generation = 0;\n\n  constructor(hashFunctions = HashTable.generateHashFunctions(NUM_ALTERNATIVES)) {\n    this.hashFunctions = hashFunctions;\n    this.allocate(4, 1);\n  }\n\n  private updateHashFunctions(numAlternatives: number) {\n    this.hashFunctions = HashTable.generateHashFunctions(numAlternatives);\n  }\n\n  static generateHashFunctions(numAlternatives = NUM_ALTERNATIVES) {\n    let hashFunctions: HashFunction[][] = [];\n    for (let alt = 0; alt < numAlternatives; ++alt) {\n      let curFunctions = [HashFunction.generate(), HashFunction.generate()];\n      hashFunctions.push(curFunctions);\n    }\n    return hashFunctions;\n  }\n\n  getHash(tableIndex: number, low: number, high: number) {\n    let hashes = this.hashFunctions[tableIndex];\n    let width = this.width, height = this.height;\n    let x = hashes[0].compute(low, high) % width;\n    let y = hashes[1].compute(low, high) % height;\n    return 2 * (y * this.width + x);\n  }\n\n  * [Symbol.iterator]() {\n    let tableSize = this.width * this.height;\n    let emptyLow = this.emptyLow, emptyHigh = this.emptyHigh;\n    let temp = [0, 0];\n    for (let table of this.tables) {\n      for (let i = 0; i < tableSize; ++i) {\n        let low = table[2 * i], high = table[2 * i + 1];\n        if (low !== emptyLow || high !== emptyHigh) {\n          temp[0] = low;\n          temp[1] = high;\n          yield temp;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the index of the table containing the specified element, or null if the element is not\n   * present.\n   */\n  hasWithTableIndex(low: number, high: number) {\n    let numTables = this.tables.length;\n    for (let i = 0; i < numTables; ++i) {\n      let h = this.getHash(i, low, high);\n      let table = this.tables[i];\n      if (table[h] === low && table[h + 1] === high) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * Returns true iff the specified element is present.\n   */\n  has(low: number, high: number) {\n    let numTables = this.tables.length;\n    for (let i = 0; i < numTables; ++i) {\n      let h = this.getHash(i, low, high);\n      let table = this.tables[i];\n      if (table[h] === low && table[h + 1] === high) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  delete (low: number, high: number) {\n    let numTables = this.tables.length;\n    for (let i = 0; i < numTables; ++i) {\n      let h = this.getHash(i, low, high);\n      let table = this.tables[i];\n      if (table[h] === low && table[h + 1] === high) {\n        table[h] = this.emptyLow;\n        table[h + 1] = this.emptyHigh;\n        ++this.generation;\n        this.size--;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  clear() {\n    if (this.size === 0) {\n      return false;\n    }\n    this.size = 0;\n    ++this.generation;\n    let {tables, emptyLow, emptyHigh} = this;\n    let numTables = tables.length;\n    for (let i = 0; i < numTables; ++i) {\n      let table = tables[i];\n      let tableSize = table.length;\n      for (let j = 0; j < tableSize; j += 2) {\n        table[j] = emptyLow;\n        table[j + 1] = emptyHigh;\n      }\n    }\n    return true;\n  }\n\n  private tryToInsert(low: number, high: number) {\n    let attempt = 0;\n    let {emptyLow, emptyHigh, maxAttempts, tables} = this;\n    let numTables = tables.length;\n\n    let tableIndex = Math.floor(Math.random() * numTables);\n    while (true) {\n      let h = this.getHash(tableIndex, low, high);\n      let table = tables[tableIndex];\n      let newLow = table[h], newHigh = table[h + 1];\n      table[h] = low;\n      table[h + 1] = high;\n      if (newLow === emptyLow && newHigh === emptyHigh) {\n        return null;\n      }\n      low = newLow;\n      high = newHigh;\n      if (++attempt === maxAttempts) {\n        break;\n      }\n      tableIndex = (tableIndex + Math.floor(Math.random() * (numTables - 1))) % numTables;\n    }\n    return [low, high];\n  }\n\n  private allocate(width: number, height: number) {\n    let tableSize = width * height;\n    this.width = width;\n    this.height = height;\n    let numAlternatives = this.hashFunctions.length;\n    let tables = this.tables = new Array(numAlternatives);\n    for (let i = 0; i < numAlternatives; ++i) {\n      tables[i] = new Uint32Array(tableSize * 2);\n    }\n    this.maxAttempts = tableSize;\n    let emptyLow = this.emptyLow, emptyHigh = this.emptyHigh;\n    for (let table of tables) {\n      for (let i = 0; i < tableSize; ++i) {\n        table[2 * i] = emptyLow;\n        table[2 * i + 1] = emptyHigh;\n      }\n    }\n    this.capacity = tableSize * this.tables.length * this.loadFactor;\n  }\n\n  private rehash(oldTables: Uint32Array[], width: number, height: number) {\n    this.allocate(width, height);\n    this.updateHashFunctions(oldTables.length);\n    for (let table of oldTables) {\n      let tableSize = table.length / 2;\n      for (let i = 0; i < tableSize; ++i) {\n        let h = 2 * i;\n        let low = table[h], high = table[h + 1];\n        if (low !== 0 || high !== 0) {\n          if (this.tryToInsert(low, high) !== null) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  private grow(desiredTableSize: number) {\n    let oldTables = this.tables;\n    let {width, height, maxWidth, maxHeight} = this;\n    while (true) {\n      let origTableSize = width * height;\n      width = Math.min(maxWidth, Math.ceil(desiredTableSize / this.height));\n      if (width * height < desiredTableSize) {\n        height = Math.min(maxHeight, Math.ceil(desiredTableSize / this.width));\n      }\n      let tableSize = width * height;\n      if (tableSize < desiredTableSize && tableSize === origTableSize) {\n        throw new Error('Maximum table size exceeded');\n      }\n\n      for (let rehashAttempt = 0; rehashAttempt < this.maxRehashAttempts; ++rehashAttempt) {\n        if (this.rehash(oldTables, width, height)) {\n          return;\n        }\n      }\n      desiredTableSize = Math.ceil(this.growFactor * desiredTableSize);\n    }\n  }\n\n  add(low: number, high: number) {\n    if (this.has(low, high)) {\n      return false;\n    }\n    ++this.generation;\n\n    if (++this.size > this.capacity) {\n      this.grow(Math.ceil(this.growFactor * this.width * this.height));\n    }\n\n    while (true) {\n      let result = this.tryToInsert(low, high);\n      if (result == null) {\n        return true;\n      }\n      low = result[0];\n      high = result[1];\n      this.grow(this.width * this.height);\n    }\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/gpu_hash/hash_table.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an HSV color (with h, s, v in [0,1]) to RGB (in range [0,1]).\n *\n * Based on goog/color/color.js in the Google Closure library.\n */\nexport function hsvToRgb(out: Float32Array, h: number, s: number, v: number): Float32Array {\n  h *= 6;\n  let hueIndex = Math.floor(h);\n  let remainder = h - hueIndex;\n  let val1 = v * (1 - s);\n  let val2 = v * (1 - (s * remainder));\n  let val3 = v * (1 - (s * (1 - remainder)));\n  switch (hueIndex % 6) {\n    case 0:\n      out[0] = v;\n      out[1] = val3;\n      out[2] = val1;\n      break;\n    case 1:\n      out[0] = val2;\n      out[1] = v;\n      out[2] = val1;\n      break;\n    case 2:\n      out[0] = val1;\n      out[1] = v;\n      out[2] = val3;\n      break;\n    case 3:\n      out[0] = val1;\n      out[1] = val2;\n      out[2] = v;\n      break;\n    case 4:\n      out[0] = val3;\n      out[1] = val1;\n      out[2] = v;\n      break;\n    case 5:\n      out[0] = v;\n      out[1] = val1;\n      out[2] = val2;\n      break;\n  }\n  return out;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/colorspace.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {Uint64} from 'neuroglancer/util/uint64';\nimport {SegmentationDisplayState} from 'neuroglancer/segmentation_display_state';\n\nrequire('neuroglancer/noselect.css');\nrequire('./segment_set_widget.css');\n\ntype ItemElement = HTMLButtonElement;\n\nlet temp = new Uint64();\n\nexport class SegmentSetWidget extends RefCounted implements SegmentationDisplayState {\n  element = document.createElement('div');\n  private clearButton = document.createElement('button');\n  private itemContainer = document.createElement('span');\n  private items = new Map<string, ItemElement>();\n\n  get visibleSegments() { return this.displayState.visibleSegments; }\n  get segmentColorHash() { return this.displayState.segmentColorHash; }\n  get segmentSelectionState() { return this.displayState.segmentSelectionState; }\n\n  constructor(\n    public displayState: SegmentationDisplayState) {\n    super();\n    let {element, clearButton, itemContainer} = this;\n    element.className = 'segment-set-widget noselect';\n    clearButton.className = 'clear-button';\n    clearButton.title = 'Remove all segment IDs';\n    this.registerEventListener(clearButton, 'click', () => { this.visibleSegments.clear(); });\n\n    itemContainer.className = 'item-container';\n    element.appendChild(itemContainer);\n\n    itemContainer.appendChild(clearButton);\n\n    this.registerSignalBinding(displayState.visibleSegments.changed.add(this.handleSetChanged, this));\n    this.registerSignalBinding(displayState.segmentColorHash.changed.add(this.handleColorChanged, this));\n\n    for (let x of displayState.visibleSegments) {\n      this.addElement(x.toString());\n    }\n    this.updateClearButtonVisibility();\n  }\n\n  private updateClearButtonVisibility() {\n    let {clearButton} = this;\n    clearButton.style.display = (this.displayState.visibleSegments.size > 0) ? '' : 'none';\n  }\n\n  private handleSetChanged(x: Uint64|null, added: boolean) {\n    this.updateClearButtonVisibility();\n    let {items} = this;\n    if (x === null) {\n      // Cleared.\n      let {itemContainer, clearButton} = this;\n      while (true) {\n        let lastElement = itemContainer.lastElementChild;\n        if (lastElement === clearButton) {\n          break;\n        }\n        itemContainer.removeChild(lastElement);\n      }\n      items.clear();\n    } else if (added) {\n      this.addElement(x.toString());\n    } else {\n      let s = x.toString();\n      let itemElement = items.get(s);\n      itemElement.parentElement.removeChild(itemElement);\n      items.delete(s);\n    }\n  }\n\n  private addElement(s: string) {\n    let itemElement = document.createElement('button');\n    itemElement.className = 'segment-button';\n    itemElement.textContent = s;\n    itemElement.title = `Remove segment ID ${s}`;\n    let widget = this;\n    itemElement.addEventListener('click', function(this: ItemElement) {\n      temp.parseString(this.textContent);\n      widget.visibleSegments.delete(temp);\n    });\n    itemElement.addEventListener('mouseenter', function(this: ItemElement) {\n      temp.parseString(this.textContent);\n      widget.segmentSelectionState.set(temp);\n    });\n    itemElement.addEventListener('mouseleave', function(this: ItemElement) {\n      temp.parseString(this.textContent);\n      widget.segmentSelectionState.set(null);\n    });\n    this.setItemColor(itemElement);\n    this.itemContainer.appendChild(itemElement);\n    this.items.set(s, itemElement);\n  }\n\n  private setItemColor(itemElement: ItemElement) {\n    temp.parseString(itemElement.textContent);\n    itemElement.style.backgroundColor = this.segmentColorHash.computeCssColor(temp);\n  }\n\n  private handleColorChanged() {\n    this.items.forEach(itemElement => { this.setItemColor(itemElement); });\n  }\n\n  disposed() {\n    let {element} = this;\n    let {parentElement} = element;\n    if (parentElement) {\n      parentElement.removeChild(element);\n    }\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/widget/segment_set_widget.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/widget/segment_set_widget.css\n ** module id = 101\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {Uint64} from 'neuroglancer/util/uint64';\nimport {Signal} from 'signals';\nimport {LayerSelectedValues, UserLayer} from 'neuroglancer/layer';\nimport {Uint64Set} from 'neuroglancer/uint64_set';\nimport {SegmentColorHash} from 'neuroglancer/segment_color';\n\n\nexport class SegmentSelectionState extends RefCounted {\n  selectedSegment = new Uint64();\n  hasSelectedSegment = false;\n  changed = new Signal();\n\n  set(value: Uint64|null|undefined) {\n    let hasSelectedSegment = (value != null);\n    if (!hasSelectedSegment) {\n      if (this.hasSelectedSegment) {\n        this.hasSelectedSegment = false;\n        this.changed.dispatch();\n      }\n    } else {\n      let existingValue = this.selectedSegment;\n      if (!this.hasSelectedSegment || value.low !== existingValue.low ||\n          value.high !== existingValue.high) {\n        existingValue.low = value.low;\n        existingValue.high = value.high;\n        this.hasSelectedSegment = true;\n        this.changed.dispatch();\n      }\n    }\n  }\n\n  isSelected(value: Uint64) {\n    return this.hasSelectedSegment && Uint64.equal(value, this.selectedSegment);\n  }\n\n  bindTo(layerSelectedValues: LayerSelectedValues, userLayer: UserLayer) {\n    let temp = new Uint64();\n    this.registerSignalBinding(layerSelectedValues.changed.add(() => {\n      let value = layerSelectedValues.get(userLayer);\n      if (typeof value === 'number') {\n        temp.low = value;\n        temp.high = 0;\n        value = temp;\n      }\n      this.set(value);\n    }));\n  }\n};\n\nexport interface SegmentationDisplayState {\n  segmentSelectionState: SegmentSelectionState;\n  visibleSegments: Uint64Set;\n  segmentColorHash: SegmentColorHash;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/segmentation_display_state.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RPC, SharedObjectCounterpart, registerSharedObject, registerRPC} from 'neuroglancer/worker_rpc';\nimport {HashTable} from 'neuroglancer/gpu_hash/hash_table';\nimport {Signal} from 'signals';\nimport {Uint64} from 'neuroglancer/util/uint64';\n\nexport class Uint64Set extends SharedObjectCounterpart {\n  hashTable = new HashTable();\n  changed = new Signal();\n\n  initializeCounterpart(rpc: RPC, options: any = {}) {\n    options['type'] = 'Uint64Set';\n    super.initializeCounterpart(rpc, options);\n  }\n\n  static makeWithCounterpart(rpc: RPC) {\n    let obj = new Uint64Set();\n    obj.initializeCounterpart(rpc);\n    return obj;\n  }\n\n  disposed () {\n    super.disposed();\n    this.hashTable = null;\n    this.changed = null;\n  }\n\n  add_(x: Uint64) {\n    return this.hashTable.add(x.low, x.high);\n  }\n\n  add (x: Uint64) {\n    if (this.add_(x)) {\n      let {rpc} = this;\n      if (rpc) {\n        rpc.invoke('Uint64Set.add', {'id': this.rpcId, 'value': x});\n      }\n      this.changed.dispatch(x, true);\n    }\n  }\n\n  has (x: Uint64) {\n    return this.hashTable.has(x.low, x.high);\n  }\n\n  *[Symbol.iterator]() {\n    let temp = new Uint64();\n    for (let x of this.hashTable[Symbol.iterator]()) {\n      temp.low = x[0];\n      temp.high = x[1];\n      yield temp;\n    }\n  }\n\n  delete_(x: Uint64) {\n    return this.hashTable.delete(x.low, x.high);\n  }\n\n  delete(x: Uint64) {\n    if (this.delete_(x)) {\n      let {rpc} = this;\n      if (rpc) {\n        rpc.invoke('Uint64Set.delete', {'id': this.rpcId, 'value': x});\n      }\n      this.changed.dispatch(x, false);\n    }\n  }\n\n  get size () {\n    return this.hashTable.size;\n  }\n\n  clear() {\n    if (this.hashTable.clear()) {\n      let {rpc} = this;\n      if (rpc) {\n        rpc.invoke('Uint64Set.clear', {'id': this.rpcId});\n      }\n      this.changed.dispatch(null, false);\n    }\n  }\n};\n\nregisterRPC('Uint64Set.add', function (x) {\n  let obj = this.get(x['id']);\n  if (obj.add_(x['value'])) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterRPC('Uint64Set.delete', function (x) {\n  let obj = this.get(x['id']);\n  if (obj.delete_(x['value'])) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterRPC('Uint64Set.clear', function (x) {\n  let obj = this.get(x['id']);\n  if (obj.hashTable.clear()) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterSharedObject('Uint64Set', Uint64Set);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/uint64_set.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RenderLayer} from 'neuroglancer/sliceview/renderlayer';\nimport {ChunkManager} from 'neuroglancer/chunk_manager/frontend';\nimport {SliceView, MultiscaleVolumeChunkSource} from 'neuroglancer/sliceview/frontend';\nimport {SegmentColorShaderManager} from 'neuroglancer/segment_color';\nimport {SegmentationDisplayState} from 'neuroglancer/segmentation_display_state';\nimport {GPUHashTable, HashTableShaderManager} from 'neuroglancer/gpu_hash/shader';\nimport {TrackableValue} from 'neuroglancer/trackable_value';\nimport {ShaderBuilder, ShaderProgram} from 'neuroglancer/webgl/shader';\nimport {verifyFloat01} from 'neuroglancer/util/json';\n\nexport function trackableAlphaValue(initialValue = 0.5) {\n  return new TrackableValue<number>(initialValue, verifyFloat01, initialValue);\n}\n\nexport class SegmentationRenderLayer extends RenderLayer {\n  private selectedSegmentForShader = new Float32Array(8);\n  private segmentColorShaderManager = new SegmentColorShaderManager('segmentColorHash');\n  private hashTableManager = new HashTableShaderManager('visibleSegments');\n  private gpuHashTable = GPUHashTable.get(this.gl, this.displayState.visibleSegments.hashTable);\n  constructor(\n    chunkManager: ChunkManager, multiscaleSourcePromise: Promise<MultiscaleVolumeChunkSource>,\n    public displayState: SegmentationDisplayState,\n    public selectedAlpha = trackableAlphaValue(0.5),\n    public notSelectedAlpha = trackableAlphaValue(0)) {\n    super(chunkManager, multiscaleSourcePromise);\n    this.registerSignalBinding(\n        displayState.segmentSelectionState.changed.add(this.redrawNeeded.dispatch, this));\n    this.registerSignalBinding(\n        displayState.segmentColorHash.changed.add(this.redrawNeeded.dispatch, this));\n    this.registerSignalBinding(displayState.visibleSegments.changed.add(this.redrawNeeded.dispatch, this));\n    this.registerSignalBinding(selectedAlpha.changed.add(() => { this.redrawNeeded.dispatch(); }));\n    this.registerSignalBinding(notSelectedAlpha.changed.add(() => { this.redrawNeeded.dispatch(); }));\n  }\n\n  getShaderKey() { return 'sliceview.SegmentationRenderLayer'; }\n\n  defineShader(builder: ShaderBuilder) {\n    super.defineShader(builder);\n    this.hashTableManager.defineShader(builder);\n    this.segmentColorShaderManager.defineShader(builder);\n    builder.addUniform('highp vec4', 'uSelectedSegment', 2);\n    builder.addUniform('highp float', 'uShowAllSegments');\n    builder.addUniform('highp float', 'uSelectedAlpha');\n    builder.addUniform('highp float', 'uNotSelectedAlpha');\n    builder.setFragmentMain(`\nuint64_t value = getDataValue();\n  float alpha = uSelectedAlpha;\n  float saturation = 1.0;\n  if (value.low == vec4(0,0,0,0) && value.high == vec4(0,0,0,0)) {\n    emit(vec4(vec4(0, 0, 0, 0)));\n    return;\n  }\n  bool has = uShowAllSegments > 0.0 ? true : ${this.hashTableManager.hasFunctionName}(value);\n  if (uSelectedSegment[0] == value.low && uSelectedSegment[1] == value.high) {\n    saturation = has ? 0.5 : 0.75;\n  } else if (!has) {\n    alpha = uNotSelectedAlpha;\n  }\n  vec3 rgb = segmentColorHash(value);\n  emit(vec4(mix(vec3(1.0,1.0,1.0), rgb, saturation), alpha));\n`);\n  }\n\n  beginSlice(sliceView: SliceView) {\n    let shader = super.beginSlice(sliceView);\n    let gl = this.gl;\n    let selectedSegmentForShader = this.selectedSegmentForShader;\n\n    let {displayState} = this;\n    let {segmentSelectionState, visibleSegments} = this.displayState;\n    if (!segmentSelectionState.hasSelectedSegment) {\n      selectedSegmentForShader.fill(0);\n    } else {\n      let seg = segmentSelectionState.selectedSegment;\n      let low = seg.low, high = seg.high;\n      for (let i = 0; i < 4; ++i) {\n        selectedSegmentForShader[i] = ((low >> (8 * i)) & 0xFF) / 255.0;\n        selectedSegmentForShader[4 + i] = ((high >> (8 * i)) & 0xFF) / 255.0;\n      }\n    }\n    gl.uniform1f(shader.uniform('uSelectedAlpha'), this.selectedAlpha.value);\n    gl.uniform1f(shader.uniform('uNotSelectedAlpha'), this.notSelectedAlpha.value);\n    gl.uniform4fv(shader.uniform('uSelectedSegment'), selectedSegmentForShader);\n    gl.uniform1f(\n      shader.uniform('uShowAllSegments'), visibleSegments.hashTable.size ? 0.0 : 1.0);\n    this.hashTableManager.enable(gl, shader, this.gpuHashTable);\n\n    this.segmentColorShaderManager.enable(gl, shader, displayState.segmentColorHash);\n    return shader;\n  }\n  endSlice(shader: ShaderProgram) {\n    let {gl} = this;\n    this.hashTableManager.disable(gl, shader);\n    super.endSlice(shader);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/segmentation_renderlayer.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Signal} from 'signals';\nimport {Trackable} from 'neuroglancer/url_hash_state';\n\nexport class TrackableValue<T> implements Trackable {\n  get value() { return this.value_; }\n  set value(newValue: T) {\n    if (newValue !== this.value_) {\n      this.value_ = newValue;\n      this.changed.dispatch();\n    }\n  }\n  changed = new Signal();\n  constructor(private value_: T, public validator: (value: any) => T, public defaultValue?: T) {}\n  toJSON() {\n    let {value_} = this;\n    if (value_ === this.defaultValue) {\n      return undefined;\n    }\n    return this.value_;\n  }\n  restoreState(x: any) {\n    if (x !== undefined) {\n      let {validator} = this;\n      try {\n        this.value = validator(x);\n        return;\n      } catch (ignoredError) {\n      }\n    }\n    let {defaultValue} = this;\n    if (defaultValue !== undefined) {\n      this.value = defaultValue;\n    }\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/trackable_value.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ShaderBuilder, ShaderProgram, ShaderModule} from 'neuroglancer/webgl/shader';\nimport {ChunkState} from 'neuroglancer/chunk_manager/base';\nimport {RenderLayer} from 'neuroglancer/layer';\nimport {Signal} from 'signals';\nimport {SegmentationDisplayState} from 'neuroglancer/segmentation_display_state';\nimport {ChunkManager, Chunk, ChunkSource} from 'neuroglancer/chunk_manager/frontend';\nimport {VoxelSize} from 'neuroglancer/navigation_state';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {vec3, mat4, Vec3, Mat4} from 'neuroglancer/util/geom';\nimport {PerspectiveViewRenderLayer, PerspectiveViewRenderContext, perspectivePanelEmit} from 'neuroglancer/perspective_panel';\nimport {SliceViewPanelRenderLayer, SliceViewPanelRenderContext, sliceViewPanelEmit} from 'neuroglancer/sliceview/panel';\nimport {setVec4FromUint32} from 'neuroglancer/webgl/shader_lib';\nimport {GL} from 'neuroglancer/webgl/context';\nimport {Buffer} from 'neuroglancer/webgl/buffer';\nimport {SharedObject} from 'neuroglancer/worker_rpc';\n\nclass SkeletonShaderManager {\n  private tempMat = mat4.create();\n  private tempPickID = new Float32Array(4);\n  constructor() {}\n\n  defineShader(builder: ShaderBuilder) {\n    builder.addAttribute('highp vec3', 'aVertexPosition');\n    builder.addUniform('highp vec3', 'uColor');\n    builder.addUniform('highp mat4', 'uProjection');\n    builder.addUniform('highp vec4', 'uPickID');\n    builder.setVertexMain(`gl_Position = uProjection * vec4(aVertexPosition, 1.0);`);\n    builder.setFragmentMain(`emit(vec4(uColor, 1.0), uPickID);`);\n  }\n\n  beginLayer(\n      gl: GL, shader: ShaderProgram, renderContext: SliceViewPanelRenderContext, objectToDataMatrix: Mat4) {\n    let {dataToDevice} = renderContext;\n    let mat = mat4.multiply(this.tempMat, dataToDevice, objectToDataMatrix);\n    gl.uniformMatrix4fv(shader.uniform('uProjection'), false, mat);\n  }\n\n  getShader(gl: GL, key: string, emitter: ShaderModule) {\n    return gl.memoize.get(key, () => {\n      let builder = new ShaderBuilder(gl);\n      builder.require(emitter);\n      this.defineShader(builder);\n      return builder.build();\n    });\n  }\n\n  drawSkeleton(\n      gl: GL, shader: ShaderProgram, skeletonChunk: SkeletonChunk, color: Vec3, pickID: number,\n      pickingOnly: boolean) {\n    if (!pickingOnly) {\n      gl.uniform3fv(shader.uniform('uColor'), color);\n    }\n\n    gl.uniform4fv(shader.uniform('uPickID'), setVec4FromUint32(this.tempPickID, pickID));\n\n    skeletonChunk.vertexBuffer.bindToVertexAttrib(\n        shader.attribute('aVertexPosition'),\n        /*components=*/3);\n\n    skeletonChunk.indexBuffer.bind();\n    gl.drawElements(gl.LINES, skeletonChunk.numIndices, gl.UNSIGNED_INT, 0);\n  }\n\n  endLayer(gl: GL, shader: ShaderProgram) {\n    gl.disableVertexAttribArray(shader.attribute('aVertexPosition'));\n  }\n};\n\nexport class PerspectiveViewSkeletonLayer extends PerspectiveViewRenderLayer {\n  private shader = this.base.skeletonShaderManager.getShader(\n    this.gl, 'skeleton/SkeletonShaderManager:PerspectivePanel', perspectivePanelEmit);\n\n  constructor(public base: SkeletonLayer) {\n    super();\n    this.registerDisposer(base);\n    this.registerSignalBinding(base.redrawNeeded.add(() => { this.redrawNeeded.dispatch(); }));\n    this.setReady(true);\n  }\n  get gl() { return this.base.gl; }\n\n  draw(renderContext: PerspectiveViewRenderContext, pickingOnly = false) {\n    this.base.draw(renderContext, this, this.shader, pickingOnly);\n  }\n  drawPicking(renderContext: PerspectiveViewRenderContext) {\n    this.base.draw(renderContext, this, this.shader, true);\n  }\n};\n\nexport class SliceViewPanelSkeletonLayer extends SliceViewPanelRenderLayer {\n  private shader = this.base.skeletonShaderManager.getShader(\n    this.gl, 'skeleton/SkeletonShaderManager:SliceViewPanel', sliceViewPanelEmit);\n\n  constructor(public base: SkeletonLayer) {\n    super();\n    this.registerDisposer(base);\n    this.registerSignalBinding(base.redrawNeeded.add(() => { this.redrawNeeded.dispatch(); }));\n    this.setReady(true);\n  }\n  get gl() { return this.base.gl; }\n\n  draw(renderContext: SliceViewPanelRenderContext) {\n    console.log('drawing on sliceview');\n    this.base.draw(renderContext, this, this.shader, false, 10);\n  }\n};\n\nexport class SkeletonLayer extends RefCounted {\n  private tempMat = mat4.create();\n  skeletonShaderManager = new SkeletonShaderManager();\n  redrawNeeded = new Signal();\n\n  constructor(\n      public chunkManager: ChunkManager, public source: SkeletonSource,\n      public voxelSizeObject: VoxelSize, public displayState: SegmentationDisplayState) {\n    super();\n\n    let dispatchRedrawNeeded = () => { this.redrawNeeded.dispatch(); };\n    this.registerSignalBinding(displayState.segmentColorHash.changed.add(dispatchRedrawNeeded));\n    this.registerSignalBinding(displayState.visibleSegments.changed.add(dispatchRedrawNeeded));\n    this.registerSignalBinding(\n        displayState.segmentSelectionState.changed.add(dispatchRedrawNeeded));\n\n    let sharedObject = this.registerDisposer(new SharedObject());\n    sharedObject.initializeCounterpart(chunkManager.rpc, {\n      'type': 'skeleton/SkeletonLayer',\n      'chunkManager': chunkManager.rpcId,\n      'source': source.addCounterpartRef(),\n      'visibleSegmentSet': displayState.visibleSegments.rpcId\n    });\n  }\n\n  get gl() { return this.chunkManager.chunkQueueManager.gl; }\n\n  draw(renderContext: SliceViewPanelRenderContext, layer: RenderLayer, shader: ShaderProgram, pickingOnly = false, lineWidth = pickingOnly ? 5 : 1) {\n    let {gl, skeletonShaderManager} = this;\n    shader.bind();\n\n    let objectToDataMatrix = this.tempMat;\n    mat4.identity(objectToDataMatrix);\n    mat4.scale(objectToDataMatrix, objectToDataMatrix, this.voxelSizeObject.size);\n    skeletonShaderManager.beginLayer(gl, shader, renderContext, objectToDataMatrix);\n\n    let skeletons = this.source.chunks;\n\n    let {pickIDs} = renderContext;\n\n    let color = vec3.create();\n    let {displayState} = this;\n    let {segmentColorHash, segmentSelectionState} = displayState;\n\n    gl.lineWidth(lineWidth);\n\n    for (let objectId of displayState.visibleSegments) {\n      let objectKey = `${objectId.low}:${objectId.high}`;\n      let skeleton = skeletons.get(objectKey);\n      if (skeleton === undefined || skeleton.state !== ChunkState.GPU_MEMORY) {\n        continue;\n      }\n      if (!pickingOnly) {\n        segmentColorHash.compute(color, objectId);\n        if (segmentSelectionState.isSelected(objectId)) {\n          for (let i = 0; i < 3; ++i) {\n            color[i] = color[i] * 0.5 + 0.5;\n          }\n        }\n      }\n      skeletonShaderManager.drawSkeleton(\n          gl, shader, skeleton, color, pickIDs.register(layer, objectId), pickingOnly);\n    }\n    skeletonShaderManager.endLayer(gl, shader);\n  }\n\n};\n\nexport class SkeletonChunk extends Chunk {\n  data: Uint8Array;\n  vertexBuffer: Buffer;\n  indexBuffer: Buffer;\n  numIndices: number;\n\n  constructor(source: SkeletonSource, x: any) {\n    super(source);\n    this.data = x['data'];\n  }\n\n  copyToGPU(gl: GL) {\n    super.copyToGPU(gl);\n    let {data} = this;\n    let dv = new DataView(data.buffer);\n    let numVertices = dv.getInt32(0, true);\n    let positions = new Float32Array(data.buffer, 4, numVertices * 3);\n    let indices = new Uint32Array(data.buffer, 4 * (numVertices * 3) + 4);\n\n    this.vertexBuffer = Buffer.fromData(gl, positions, gl.ARRAY_BUFFER, gl.STATIC_DRAW);\n    this.indexBuffer = Buffer.fromData(gl, indices, gl.ELEMENT_ARRAY_BUFFER, gl.STATIC_DRAW);\n    this.numIndices = indices.length;\n  }\n\n  freeGPUMemory(gl: GL) {\n    super.freeGPUMemory(gl);\n    this.vertexBuffer.dispose();\n    this.indexBuffer.dispose();\n  }\n};\n\nexport class SkeletonSource extends ChunkSource {\n  chunks: Map<string, SkeletonChunk>;\n  getChunk(x: any) { return new SkeletonChunk(this, x); }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/skeleton/frontend.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AxesLineHelper} from 'neuroglancer/axes_lines';\nimport {DisplayContext} from 'neuroglancer/display_context';\nimport {MouseSelectionState, VisibleRenderLayerTracker, RenderLayer} from 'neuroglancer/layer';\nimport {PickIDManager} from 'neuroglancer/object_picking';\nimport {RenderedDataPanel} from 'neuroglancer/rendered_data_panel';\nimport {SliceView, SliceViewRenderHelper} from 'neuroglancer/sliceview/frontend';\nimport {TrackableBoolean, ElementVisibilityFromTrackableBoolean} from 'neuroglancer/trackable_boolean';\nimport {mat4, vec3, vec4, Mat4, identityMat4} from 'neuroglancer/util/geom';\nimport {startRelativeMouseDrag} from 'neuroglancer/util/mouse_drag';\nimport {ViewerState} from 'neuroglancer/viewer_state';\nimport {OffscreenFramebuffer, OffscreenCopyHelper} from 'neuroglancer/webgl/offscreen';\nimport {ShaderBuilder} from 'neuroglancer/webgl/shader';\nimport {ScaleBarWidget} from 'neuroglancer/widget/scale_bar';\nimport {Signal} from 'signals';\n\nexport interface SliceViewerState extends ViewerState { showScaleBar: TrackableBoolean; }\n\nexport enum OffscreenTextures {\n  COLOR,\n  PICK,\n  NUM_TEXTURES\n}\n\nexport function sliceViewPanelEmit(builder: ShaderBuilder) {\n  builder.addFragmentExtension('GL_EXT_draw_buffers');\n  builder.addFragmentCode(`\nvoid emit(vec4 color, vec4 pickId) {\n  gl_FragData[${OffscreenTextures.COLOR}] = color;\n  gl_FragData[${OffscreenTextures.PICK}] = pickId;\n}\n`);\n}\n\nexport interface SliceViewPanelRenderContext {\n  dataToDevice: Mat4;\n  pickIDs: PickIDManager;\n}\n\nexport class SliceViewPanelRenderLayer extends RenderLayer {\n  redrawNeeded = new Signal();\n  draw(renderContext: SliceViewPanelRenderContext) {\n    // Must be overriden by subclass.\n  }\n};\n\nexport class SliceViewPanel extends RenderedDataPanel {\n  private axesLineHelper = AxesLineHelper.get(this.gl);\n  private sliceViewRenderHelper =\n      SliceViewRenderHelper.get(this.gl, 'SliceViewRenderHelper', sliceViewPanelEmit);\n  private colorFactor = vec4.fromValues(1, 1, 1, 1);\n  private backgroundColor = vec4.fromValues(0.5, 0.5, 0.5, 1.0);\n  private pickIDs = new PickIDManager();\n\n  private visibleLayerTracker =\n      this.registerDisposer(new VisibleRenderLayerTracker<SliceViewPanelRenderLayer>(\n          this.viewer.layerManager, SliceViewPanelRenderLayer,\n          layer => {\n            layer.redrawNeeded.add(this.scheduleRedraw, this);\n            this.scheduleRedraw();\n          },\n          layer => {\n            layer.redrawNeeded.remove(this.scheduleRedraw, this);\n            this.scheduleRedraw();\n          }));\n\n  private offscreenFramebuffer =\n      new OffscreenFramebuffer(this.gl, {numDataBuffers: OffscreenTextures.NUM_TEXTURES});\n\n  private offscreenCopyHelper = OffscreenCopyHelper.get(this.gl);\n\n  private scaleBarWidget = this.registerDisposer(new ScaleBarWidget());\n\n  get navigationState() {\n    return this.sliceView.navigationState;\n  }\n\n  constructor(\n      context: DisplayContext, element: HTMLElement, public sliceView: SliceView,\n      viewer: SliceViewerState) {\n    super(context, element, viewer);\n\n    this.registerDisposer(sliceView);\n    this.registerSignalBinding(sliceView.viewChanged.add(context.scheduleRedraw, context));\n    this.registerSignalBinding(viewer.showAxisLines.changed.add(() => { this.scheduleRedraw(); }));\n\n    {\n      let scaleBar = this.scaleBarWidget.element;\n      this.registerDisposer(new ElementVisibilityFromTrackableBoolean(viewer.showScaleBar, scaleBar));\n      this.element.appendChild(scaleBar);\n    }\n  }\n\n  draw() {\n    let {sliceView} = this;\n    if (!sliceView.hasValidViewport) {\n      return;\n    }\n    sliceView.updateRendering();\n\n    let {gl} = this;\n\n    let {width, height, dataToDevice} = sliceView;\n    this.offscreenFramebuffer.bind(width, height);\n    gl.disable(gl.SCISSOR_TEST);\n    this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    // Draw axes lines.\n    // FIXME: avoid use of temporary matrix\n    let mat = mat4.create();\n\n    this.sliceViewRenderHelper.draw(\n        sliceView.offscreenFramebuffer.dataTextures[0], identityMat4, this.colorFactor,\n        this.backgroundColor, 0, 0, 1, 1);\n\n    let visibleLayers = this.visibleLayerTracker.getVisibleLayers();\n    let {pickIDs} = this;\n    pickIDs.clear();\n    let renderContext = {dataToDevice: sliceView.dataToDevice, pickIDs: pickIDs};\n\n    for (let renderLayer of visibleLayers) {\n      renderLayer.draw(renderContext);\n    }\n\n    if (this.viewer.showAxisLines.value) {\n      // Construct matrix that maps [-1, +1] x/y range to the full viewport data\n      // coordinates.\n      mat4.copy(mat, dataToDevice);\n      for (let i = 0; i < 3; ++i) {\n        mat[12 + i] = 0;\n      }\n\n      for (let i = 0; i < 4; ++i) {\n        mat[2 + 4 * i] = 0;\n      }\n\n\n      let axisLength = Math.min(width, height) / 4 * 1.5;\n      let pixelSize = sliceView.pixelSize;\n      for (let i = 0; i < 12; ++i) {\n        // pixelSize is nm / pixel\n        //\n        mat[i] *= axisLength * pixelSize;\n      }\n      gl.WEBGL_draw_buffers.drawBuffersWEBGL([gl.WEBGL_draw_buffers.COLOR_ATTACHMENT0_WEBGL]);\n      this.axesLineHelper.draw(mat);\n    }\n\n    this.offscreenFramebuffer.unbind();\n\n    // Draw the texture over the whole viewport.\n    this.setGLViewport();\n    this.offscreenCopyHelper.draw(this.offscreenFramebuffer.dataTextures[OffscreenTextures.COLOR]);\n\n    // Update the scale bar if needed.\n    {\n      let {scaleBarWidget} = this;\n      let {dimensions} = scaleBarWidget;\n      dimensions.targetLengthInPixels = Math.min(width / 4, 100);\n      dimensions.nanometersPerPixel = sliceView.pixelSize;\n      scaleBarWidget.update();\n    }\n  }\n\n  onResize() {\n    this.sliceView.setViewportSize(this.element.clientWidth, this.element.clientHeight);\n  }\n\n  updateMouseState(mouseState: MouseSelectionState) {\n    mouseState.pickedRenderLayer = null;\n    let sliceView = this.sliceView;\n    if (!sliceView.hasValidViewport) {\n      return false;\n    }\n    let {width, height} = sliceView;\n    let {offscreenFramebuffer} = this;\n    if (!offscreenFramebuffer.hasSize(width, height)) {\n      return false;\n    }\n    let out = mouseState.position;\n    let glWindowX = this.mouseX;\n    let y = this.mouseY;\n    vec3.set(out, glWindowX - width / 2, y - height / 2, 0);\n    vec3.transformMat4(out, out, sliceView.viewportToData);\n\n    let glWindowY = height - y;\n    this.pickIDs.setMouseState(\n        mouseState,\n        offscreenFramebuffer.readPixelAsUint32(OffscreenTextures.PICK, glWindowX, glWindowY));\n    return true;\n  }\n\n  onMousedown(e: MouseEvent) {\n    if (event.target !== this.element) {\n      return;\n    }\n    super.onMousedown(e);\n    if (!this.sliceView.hasValidViewport) {\n      return;\n    }\n    if (e.button === 0) {\n      let {mouseState} = this.viewer;\n      if (mouseState.updateUnconditionally()) {\n        let initialPosition = vec3.clone(this.viewer.mouseState.position);\n        startRelativeMouseDrag(e, (event, deltaX, deltaY) => {\n          let {position} = this.viewer.navigationState;\n          if (event.shiftKey) {\n            let {viewportAxes} = this.sliceView;\n            this.viewer.navigationState.pose.rotateAbsolute(\n              viewportAxes[1], deltaX / 4.0 * Math.PI / 180.0, initialPosition);\n            this.viewer.navigationState.pose.rotateAbsolute(\n              viewportAxes[0], deltaY / 4.0 * Math.PI / 180.0, initialPosition);\n          } else {\n            let pos = position.spatialCoordinates;\n            vec3.set(pos, deltaX, deltaY, 0);\n            vec3.transformMat4(pos, pos, this.sliceView.viewportToData);\n            position.changed.dispatch();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Zooms by the specified factor, maintaining the data position that projects to the current mouse position.\n   */\n  zoomByMouse(factor: number) {\n    let {navigationState} = this;\n    if (!navigationState.valid) {\n      return;\n    }\n    let {sliceView} = this;\n    let {width, height} = sliceView;\n    let {mouseX, mouseY} = this;\n    mouseX -= width / 2;\n    mouseY -= height / 2;\n    let oldZoom = this.navigationState.zoomFactor.value;\n    // oldPosition + (mouseX * viewportAxes[0] + mouseY * viewportAxes[1]) * oldZoom\n    //     === newPosition + (mouseX * viewportAxes[0] + mouseY * viewportAxes[1]) * newZoom\n\n    // Therefore, we compute newPosition by:\n    // newPosition = oldPosition + (viewportAxes[0] * mouseX +\n    //                              viewportAxes[1] * mouseY) * (oldZoom - newZoom).\n    navigationState.zoomBy(factor);\n    let newZoom = navigationState.zoomFactor.value;\n\n    let {spatialCoordinates} = navigationState.position;\n    vec3.scaleAndAdd(\n        spatialCoordinates, spatialCoordinates, sliceView.viewportAxes[0],\n        mouseX * (oldZoom - newZoom));\n    vec3.scaleAndAdd(\n        spatialCoordinates, spatialCoordinates, sliceView.viewportAxes[1],\n        mouseY * (oldZoom - newZoom));\n    navigationState.position.changed.dispatch();\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/panel.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Facility for drawing a scale bar to indicate pixel size in physical length units.\n *\n * The physical length with which the scale bar is labeled will be of the form:\n *\n *   significand * 10^exponent\n *\n * Any exponent may be used, but the significand in the range [1, 10] will be equal to one of a\n * discrete set of allowed significand values, in order to ensure that the scale bar is easy to\n * understand.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {removeFromParent} from 'neuroglancer/util/dom';\n\nrequire('./scale_bar.css');\n\n/**\n * Default set of allowed significand values.  1 is implicitly part of the set.\n */\nconst DEFAULT_ALLOWED_SIGNIFICANDS = [\n  1.5, 2, 3, 5, 7.5, 10,\n];\n\ninterface LengthUnit {\n  unit: string;\n  lengthInNanometers: number;\n}\n\nconst ALLOWED_UNITS: LengthUnit[] = [\n  {unit: 'km', lengthInNanometers: 1e12},\n  {unit: 'm', lengthInNanometers: 1e9},\n  {unit: 'mm', lengthInNanometers: 1e6},\n  {unit: 'µm', lengthInNanometers: 1e3},\n  {unit: 'nm', lengthInNanometers: 1},\n  {unit: 'pm', lengthInNanometers: 1e-3},\n];\n\nexport class ScaleBarDimensions {\n  /**\n   * Allowed significand values.  1 is not included, but is always considered part of the set.\n   */\n  allowedSignificands = DEFAULT_ALLOWED_SIGNIFICANDS;\n\n  /**\n   * The target length in pixels.  The closest \n   */\n  targetLengthInPixels: number;\n\n  /**\n   * Pixel size in nanometers.\n   */\n  nanometersPerPixel: number;\n\n  // The following three fields are computed from the previous three fields.\n\n  /**\n   * Length that scale bar should be drawn, in pixels.\n   */\n  lengthInPixels: number;\n\n  /**\n   * Physical length with which to label the scale bar.\n   */\n  physicalLength: number;\n  physicalUnit: string;\n\n  prevNanometersPerPixel: number = 0;\n  prevTargetLengthInPixels: number = 0;\n\n  /**\n   * Updates physicalLength, physicalUnit, and lengthInPixels to be the optimal values corresponding\n   * to targetLengthInPixels and nanometersPerPixel.\n   *\n   * @returns true if the scale bar has changed, false if it is unchanged.\n   */\n  update () {\n    let {nanometersPerPixel, targetLengthInPixels} = this;\n    if (this.prevNanometersPerPixel === nanometersPerPixel && this.prevTargetLengthInPixels === targetLengthInPixels) {\n      return false;\n    }\n    this.prevNanometersPerPixel = nanometersPerPixel;\n    this.prevTargetLengthInPixels = targetLengthInPixels;\n    const targetNanometers = targetLengthInPixels * nanometersPerPixel;\n    const exponent = Math.floor(Math.log(targetNanometers) / Math.LN10);\n    const tenToThePowerExponent = Math.pow(10, exponent);\n    const targetSignificand = targetNanometers / tenToThePowerExponent;\n\n    // Determine significand value in this.allowedSignificands that is closest to targetSignificand.\n    let bestSignificand = 1;\n    let {allowedSignificands} = this;\n    for (let allowedSignificand of this.allowedSignificands) {\n      if (Math.abs(allowedSignificand - targetSignificand) < Math.abs(bestSignificand - targetSignificand)) {\n        bestSignificand = allowedSignificand;\n      } else {\n        // If distance did not decrease, then it can only increase from here.\n        break;\n      }\n    }\n\n    const physicalNanometers = bestSignificand * tenToThePowerExponent;\n    const numAllowedUnits = ALLOWED_UNITS.length;\n    let unit = ALLOWED_UNITS[numAllowedUnits - 1];\n    for (let i = 0; i < numAllowedUnits; ++i) {\n      const allowedUnit = ALLOWED_UNITS[i];\n      if (physicalNanometers >= allowedUnit.lengthInNanometers) {\n        unit = allowedUnit;\n        break;\n      }\n    }\n\n    this.lengthInPixels = Math.round(physicalNanometers / nanometersPerPixel);\n    this.physicalUnit = unit.unit;\n    this.physicalLength = physicalNanometers / unit.lengthInNanometers;\n    return true;\n  }\n};\n\nexport class ScaleBarWidget extends RefCounted {\n  element = document.createElement('div');\n  textNode = document.createTextNode('');\n  barElement = document.createElement('div');\n  constructor (public dimensions = new ScaleBarDimensions()) {\n    super();\n    let {element, textNode, barElement} = this;\n    element.className = 'scale-bar-container';\n    element.appendChild(textNode);\n    element.appendChild(barElement);\n    barElement.className = 'scale-bar';\n  }\n\n  update () {\n    let {dimensions} = this;\n    if (dimensions.update()) {\n      this.textNode.textContent = `${dimensions.physicalLength} ${dimensions.physicalUnit}`;\n      this.barElement.style.width = `${dimensions.lengthInPixels}px`;\n    }\n  }\n\n  disposed () {\n    removeFromParent(this.element);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/widget/scale_bar.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/widget/scale_bar.css\n ** module id = 109\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {removeFromParent} from 'neuroglancer/util/dom';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {Uint64} from 'neuroglancer/util/uint64';\nimport {Signal} from 'signals';\n\nrequire('neuroglancer/noselect.css');\nrequire('./uint64_entry_widget.css');\n\nexport class Uint64EntryWidget extends RefCounted {\n  element = document.createElement('form');\n  label = document.createElement('label');\n  input = document.createElement('input');\n  value = new Uint64();\n  valueEntered = new Signal();\n\n  constructor () {\n    super();\n    let {element, label, input} = this;\n    element.className = 'uint64-entry noselect';\n    element.appendChild(label);\n    label.appendChild(input);\n    this.registerEventListener(element, 'submit', (event: Event) => {\n      event.preventDefault();\n      if (this.validateInput()) {\n        this.input.value = '';\n        this.input.classList.remove('valid-input', 'invalid-input');\n        this.valueEntered.dispatch(this.value);\n      }\n    });\n    this.registerEventListener(element, 'input', () => {\n      if (this.input.value === '') {\n        this.input.classList.remove('valid-input', 'invalid-input');\n        return;\n      }\n      if (this.validateInput()) {\n        this.input.classList.remove('invalid-input');\n      } else {\n        this.input.classList.add('invalid-input');\n      }\n    });\n  }\n\n  validateInput () {\n    return this.value.parseString(this.input.value);\n  }\n\n  disposed () {\n    removeFromParent(this.element);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/widget/uint64_entry_widget.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/widget/uint64_entry_widget.css\n ** module id = 111\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {removeFromParent} from 'neuroglancer/util/dom';\nimport {TrackableValue} from 'neuroglancer/trackable_value';\n\nrequire('./range.css');\n\nexport class RangeWidget extends RefCounted {\n  element = document.createElement('label');\n  promptElement = document.createElement('span');\n  inputElement = document.createElement('input');\n\n  constructor(public value: TrackableValue<number>, {min = 0, max = 1, step = 0.01} = {}) {\n    super();\n    let {element, promptElement, inputElement} = this;\n    element.className = 'range-slider';\n    promptElement.className = 'range-prompt';\n    inputElement.type = 'range';\n    inputElement.min = '' + min;\n    inputElement.max = '' + max;\n    inputElement.step = '' + step;\n    inputElement.valueAsNumber = this.value.value;\n    element.appendChild(promptElement);\n    element.appendChild(inputElement);\n    const inputValueChanged = () => { this.value.value = this.inputElement.valueAsNumber; };\n    this.registerEventListener(inputElement, 'change', inputValueChanged);\n    this.registerEventListener(inputElement, 'input', inputValueChanged);\n    this.registerEventListener(inputElement, 'wheel', (event: WheelEvent) => {\n      let {deltaY} = event;\n      if (deltaY > 0) {\n        this.inputElement.stepUp();\n        inputValueChanged();\n      } else if (deltaY < 0) {\n        this.inputElement.stepDown();\n        inputValueChanged();\n      }\n    });\n    value.changed.add(() => { this.inputElement.valueAsNumber = this.value.value; });\n  }\n  disposed() {\n    removeFromParent(this.element);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/widget/range.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/widget/range.css\n ** module id = 113\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/segmentation_user_layer.css\n ** module id = 114\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {UserLayer} from 'neuroglancer/layer';\nimport {LayerListSpecification} from 'neuroglancer/layer_specification';\nimport {ImageRenderLayer} from 'neuroglancer/sliceview/image_renderlayer';\nimport {getVolumeWithStatusMessage} from 'neuroglancer/layer_specification';\n\nexport class ImageUserLayer extends UserLayer {\n  volumePath: string;\n  constructor (manager: LayerListSpecification, x: any) {\n    let volumePath = x['source'];\n    if (typeof volumePath !== 'string') {\n      throw new Error('Invalid image layer specification');\n    }\n    super([]);\n    this.volumePath = volumePath;\n    this.addRenderLayer(\n        new ImageRenderLayer(manager.chunkManager, getVolumeWithStatusMessage(volumePath)));\n  }\n  toJSON () {\n    let x: any = {'type': 'image'};\n    x['source'] = this.volumePath;\n    return x;\n  }\n  makeDropdown(element: HTMLDivElement): null {\n    return null;\n  }\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/image_user_layer.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RenderLayer } from 'neuroglancer/sliceview/renderlayer';\nimport { ShaderBuilder } from 'neuroglancer/webgl/shader';\n\nexport class ImageRenderLayer extends RenderLayer {\n  getShaderKey() {\n    return 'sliceview.ImageRenderLayer';\n  }\n\n  defineShader (builder: ShaderBuilder) {\n    super.defineShader(builder);\n    builder.setFragmentMain(`\nfloat value = getDataValue();\nemit(vec4(value, value, value, 0.7));\n`);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/sliceview/image_renderlayer.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as debounce from 'lodash/debounce';\nimport {Completion, CompletionWithDescription, BasicCompletionResult} from 'neuroglancer/util/completion';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {removeFromParent, removeChildren} from 'neuroglancer/util/dom';\nimport {positionDropdown} from 'neuroglancer/util/dropdown';\nimport {KeyboardShortcutHandler, KeySequenceMap} from 'neuroglancer/util/keyboard_shortcut_handler';\nimport {longestCommonPrefix} from 'neuroglancer/util/longest_common_prefix';\nimport {cancelPromise, CancellablePromise} from 'neuroglancer/util/promise';\nimport {scrollIntoViewIfNeeded} from 'neuroglancer/util/scroll_into_view';\nimport {associateLabelWithElement} from 'neuroglancer/widget/associate_label';\nimport {Signal} from 'signals';\n\nexport {Completion, CompletionWithDescription} from 'neuroglancer/util/completion';\n\nrequire('./autocomplete.css');\n\nconst ACTIVE_COMPLETION_CLASS_NAME = 'autocomplete-completion-active';\n\nconst AUTOCOMPLETE_INDEX_SYMBOL = Symbol('autocompleteIndex');\n\nexport interface CompletionResult extends BasicCompletionResult {\n  showSingleResult?: boolean;\n  makeElement?: (completion: Completion) => HTMLElement;\n}\n\nexport function makeDefaultCompletionElement(completion: Completion) {\n  let element = document.createElement('div');\n  element.textContent = completion.value;\n  return element;\n}\n\nexport function makeCompletionElementWithDescription(completion: CompletionWithDescription) {\n  let element = document.createElement('div');\n  element.className = 'autocomplete-completion-with-description';\n  element.textContent = completion.value;\n  let descriptionElement = document.createElement('div');\n  descriptionElement.className = 'autocomplete-completion-description';\n  descriptionElement.textContent = completion.description || '';\n  element.appendChild(descriptionElement);\n  return element;\n}\n\nconst KEY_MAP = new KeySequenceMap({\n  'arrowdown': 'cycle-next-active-completion',\n  'arrowup': 'cycle-prev-active-completion',\n  'tab': 'choose-active-completion-or-prefix',\n  'enter': 'choose-active-completion',\n});\n\nconst KEY_COMMANDS = new Map<string, (this: AutocompleteTextInput) => boolean>([\n  [\n    'cycle-next-active-completion',\n    function() {\n      this.cycleActiveCompletion(+1);\n      return true;\n    }\n  ],\n  [\n    'cycle-prev-active-completion',\n    function() {\n      this.cycleActiveCompletion(-1);\n      return true;\n    }\n  ],\n  [\n    'choose-active-completion-or-prefix',\n    function() { return this.selectActiveCompletion(/*allowPrefix=*/true); }\n  ],\n  [\n    'choose-active-completion',\n    function() { return this.selectActiveCompletion(/*allowPrefix=*/false); }\n  ],\n]);\n\nexport type Completer = (value: string) => CancellablePromise<CompletionResult>| null;\n\nconst DEFAULT_COMPLETION_DELAY = 200;  // milliseconds\n\nexport class AutocompleteTextInput extends RefCounted {\n  element: HTMLDivElement;\n  promptElement: HTMLLabelElement;\n  inputWrapperElement: HTMLDivElement;\n  inputElement: HTMLInputElement;\n  hintElement: HTMLInputElement;\n  dropdownElement: HTMLDivElement;\n  inputChanged = new Signal();\n  private prevInputValue = '';\n  private completionsVisible = false;\n  private activeCompletionPromise: CancellablePromise<CompletionResult>|null = null;\n  private hasFocus = false;\n  private completionResult: CompletionResult|null = null;\n  private dropdownContentsStale = true;\n  private updateHintScrollPositionTimer: number|null = null;\n  private keyboardHandler: KeyboardShortcutHandler;\n  private completionElements: HTMLElement[]|null = null;\n  private hasResultForDropdown = false;\n  private commonPrefix = '';\n\n  /**\n   * Index of the active completion.  The active completion is displayed as the hint text and is\n   * highlighted in the dropdown.\n   */\n  private activeIndex = -1;\n\n  private dropdownStyleStale = true;\n\n  private scheduleUpdateCompletions: () => void;\n  completer: Completer;\n\n  constructor(options: {completer: Completer, delay?: number}) {\n    super();\n    this.completer = options.completer;\n    let {delay = DEFAULT_COMPLETION_DELAY} = options;\n\n    let debouncedCompleter = this.scheduleUpdateCompletions = debounce(() => {\n      let activeCompletionPromise = this.activeCompletionPromise = this.completer(this.value);\n      if (activeCompletionPromise !== null) {\n        activeCompletionPromise.then(completionResult => {\n          if (this.activeCompletionPromise === activeCompletionPromise) {\n            this.setCompletions(completionResult);\n            this.activeCompletionPromise = null;\n          }\n        });\n      }\n    }, delay);\n    this.registerDisposer(() => { debouncedCompleter.cancel(); });\n\n    let element = this.element = document.createElement('div');\n    element.className = 'autocomplete';\n\n    let dropdownAndInputWrapper = document.createElement('div');\n    dropdownAndInputWrapper.className = 'autocomplete-dropdown-wrapper';\n\n    let dropdownElement = this.dropdownElement = document.createElement('div');\n    dropdownElement.className = 'autocomplete-dropdown';\n\n    let promptElement = this.promptElement = document.createElement('label');\n    promptElement.className = 'autocomplete-prompt';\n\n    let inputWrapperElement = this.inputWrapperElement = document.createElement('div');\n    inputWrapperElement.className = 'autocomplete-input-wrapper';\n\n    element.appendChild(promptElement);\n\n    let inputElement = this.inputElement = document.createElement('input');\n    inputElement.type = 'text';\n    inputElement.autocomplete = 'off';\n    inputElement.spellcheck = false;\n    inputElement.className = 'autocomplete-input';\n    associateLabelWithElement(promptElement, inputElement);\n\n    let hintElement = this.hintElement = document.createElement('input');\n    hintElement.type = 'text';\n    hintElement.spellcheck = false;\n    hintElement.className = 'autocomplete-hint';\n    hintElement.disabled = true;\n    inputWrapperElement.appendChild(hintElement);\n    inputWrapperElement.appendChild(inputElement);\n\n    dropdownAndInputWrapper.appendChild(inputWrapperElement);\n    dropdownAndInputWrapper.appendChild(dropdownElement);\n    element.appendChild(dropdownAndInputWrapper);\n\n    this.registerInputHandler();\n    this.handleInputChanged('');\n\n    this.registerEventListener(this.inputElement, 'focus', () => {\n      if (!this.hasFocus) {\n        this.hasFocus = true;\n        this.dropdownStyleStale = true;\n        this.updateDropdown();\n      }\n    });\n    this.registerEventListener(this.inputElement, 'blur', () => {\n      if (this.hasFocus) {\n        this.hasFocus = false;\n        this.updateDropdown();\n      }\n    });\n    this.registerEventListener(\n        element.ownerDocument.defaultView, 'resize', () => { this.dropdownStyleStale = true; });\n\n    this.registerEventListener(\n        element.ownerDocument.defaultView, 'scroll', () => { this.dropdownStyleStale = true; });\n\n    this.registerEventListener(\n      this.dropdownElement, 'mousedown', this.handleDropdownMousedown.bind(this));\n\n    this.registerEventListener(\n      this.inputElement, 'keydown', () => {\n        // User may have used a keyboard shortcut to scroll the input.\n        this.hintScrollPositionMayBeStale();\n      });\n\n    this.registerEventListener(\n      this.inputElement, 'mousemove', (event: MouseEvent) => {\n        if (event.buttons !== 0) {\n          // May be dragging the text, which could cause scrolling.  This is not perfect, because we\n          // don't detect mouse movements outside of the input box.\n          this.hintScrollPositionMayBeStale();\n        }\n      });\n\n    let keyboardHandler = this.keyboardHandler = this.registerDisposer(\n        new KeyboardShortcutHandler(inputElement, KEY_MAP, this.handleKeyCommand.bind(this)));\n    keyboardHandler.allShortcutsAreGlobal = true;\n  }\n\n  private hintScrollPositionMayBeStale() {\n    if (this.hintElement.value !== '') {\n      this.scheduleUpdateHintScrollPosition();\n    }\n  }\n\n  get disabled () {\n    return this.inputElement.disabled;\n  }\n\n  set disabled(value: boolean) {\n    this.inputElement.disabled = value;\n  }\n\n  private handleDropdownMousedown(event: MouseEvent) {\n    this.inputElement.focus();\n    let {dropdownElement} = this;\n    for (let target = event.target; target instanceof HTMLElement; target = target.parentElement) {\n      let index = (<any>target)[AUTOCOMPLETE_INDEX_SYMBOL];\n      if (index !== undefined) {\n        this.selectCompletion(index);\n        break;\n      }\n      if (target === dropdownElement) {\n        break;\n      }\n    }\n    event.preventDefault();\n  }\n\n  cycleActiveCompletion(delta: number) {\n    if (this.completionResult === null) {\n      return;\n    }\n    let {activeIndex} = this;\n    let numCompletions = this.completionResult.completions.length;\n    if (activeIndex === -1) {\n      if (delta > 0) {\n        activeIndex = 0;\n      } else {\n        activeIndex = numCompletions - 1;\n      }\n    } else {\n      activeIndex = (activeIndex + delta + numCompletions) % numCompletions;\n    }\n    this.setActiveIndex(activeIndex);\n  }\n\n  private handleKeyCommand(action: string) { return KEY_COMMANDS.get(action).call(this); }\n\n  private registerInputHandler() {\n    const handler = (event: Event) => {\n      let value = this.inputElement.value;\n      if (value !== this.prevInputValue) {\n        this.prevInputValue = value;\n        this.handleInputChanged(value);\n      }\n    };\n    for (let eventType of ['input']) {\n      this.registerEventListener(this.inputElement, eventType, handler, /*useCapture=*/false);\n    }\n  }\n\n  private shouldShowDropdown() {\n    let {completionResult} = this;\n    if (completionResult === null || !this.hasFocus) {\n      return false;\n    }\n    return this.hasResultForDropdown;\n  }\n\n  private updateDropdownStyle() {\n    let {element, dropdownElement, inputElement} = this;\n    positionDropdown(dropdownElement, inputElement,\n                     {horizontal: false});\n    this.dropdownStyleStale = false;\n  }\n\n  private updateDropdown() {\n    if (this.shouldShowDropdown()) {\n      let {dropdownElement} = this;\n      let {activeIndex} = this;\n      if (this.dropdownContentsStale) {\n        let {completionResult} = this;\n        let {makeElement = makeDefaultCompletionElement} = completionResult;\n        this.completionElements = completionResult.completions.map((completion, index) => {\n          let completionElement = makeElement.call(completionResult, completion);\n          (<any>completionElement)[AUTOCOMPLETE_INDEX_SYMBOL] = index;\n          completionElement.classList.add('autocomplete-completion');\n          if (activeIndex === index) {\n            completionElement.classList.add(ACTIVE_COMPLETION_CLASS_NAME);\n          }\n          dropdownElement.appendChild(completionElement);\n          return completionElement;\n        });\n        this.dropdownContentsStale = false;\n      }\n      if (this.dropdownStyleStale) {\n        this.updateDropdownStyle();\n      }\n      if (!this.completionsVisible) {\n        dropdownElement.style.display = 'block';\n        this.completionsVisible = true;\n      }\n      if (activeIndex !== -1) {\n        let completionElement = this.completionElements[activeIndex];\n        scrollIntoViewIfNeeded(completionElement);\n      }\n    } else if (this.completionsVisible) {\n      this.dropdownElement.style.display = 'none';\n      this.completionsVisible = false;\n    }\n  }\n\n  private setCompletions(completionResult: CompletionResult) {\n    this.clearCompletions();\n    let {completions} = completionResult;\n    if (completions.length === 0) {\n      return;\n    }\n    this.completionResult = completionResult;\n\n    if (completions.length === 1) {\n      let completion = completions[0];\n      if (completionResult.showSingleResult) {\n        this.hasResultForDropdown = true;\n      } else {\n        let value = this.prevInputValue;\n        if (!completion.value.startsWith(value)) {\n          this.hasResultForDropdown = true;\n        } else {\n          this.hasResultForDropdown = false;\n        }\n      }\n      this.setActiveIndex(0);\n    } else {\n      this.hasResultForDropdown = true;\n      // Check for a common prefix.\n      let commonResultPrefix = longestCommonPrefix(function* () {\n        for (let completion of completionResult.completions) {\n          yield completion.value;\n        }\n      }());\n      let commonPrefix = this.getCompletedValue(commonResultPrefix);\n      let value = this.prevInputValue;\n      if (commonPrefix.startsWith(value)) {\n        this.commonPrefix = commonPrefix;\n        this.setHintValue(commonPrefix);\n      }\n    }\n    this.updateDropdown();\n  }\n\n  private scheduleUpdateHintScrollPosition() {\n    if (this.updateHintScrollPositionTimer === null) {\n      this.updateHintScrollPositionTimer =\n          setTimeout(() => { this.updateHintScrollPosition(); }, 0);\n    }\n  }\n\n  setHintValue(hintValue: string) {\n    let value = this.prevInputValue;\n    if (hintValue === value || !hintValue.startsWith(value)) {\n      // If the hint value is identical to the current value, there is no need to show it.  Also,\n      // if it is not a prefix of the current value, then we cannot show it either.\n      hintValue = '';\n    }\n    this.hintElement.value = hintValue;\n    this.scheduleUpdateHintScrollPosition();\n  }\n\n  /**\n   * This sets the active completion, which causes it to be highlighted and displayed as the hint.\n   * Additionally, if the user hits tab then it is chosen.\n   */\n  private setActiveIndex(index?: number) {\n    if (!this.dropdownContentsStale) {\n      let {activeIndex} = this;\n      if (activeIndex !== -1) {\n        this.completionElements[activeIndex].classList.remove(ACTIVE_COMPLETION_CLASS_NAME);\n      }\n      if (index !== -1) {\n        let completionElement = this.completionElements[index];\n        completionElement.classList.add(ACTIVE_COMPLETION_CLASS_NAME);\n        scrollIntoViewIfNeeded(completionElement);\n      }\n    }\n    if (index !== -1) {\n      this.setHintValue(this.getCompletedValueByIndex(index));\n    }\n    this.activeIndex = index;\n  }\n\n  private getCompletedValueByIndex(index: number) {\n    return this.getCompletedValue(this.completionResult.completions[index].value);\n  }\n\n  private getCompletedValue(completionValue: string) {\n    let {completionResult} = this;\n    let value = this.prevInputValue;\n    return value.substring(0, completionResult.offset) + completionValue;\n  }\n\n  selectActiveCompletion(allowPrefix: boolean) {\n    let {activeIndex} = this;\n    if (activeIndex === -1) {\n      if (!allowPrefix) {\n        return false;\n      }\n      let {commonPrefix} = this;\n      if (commonPrefix.length > this.value.length) {\n        this.value = commonPrefix;\n        return true;\n      }\n      return false;\n    }\n    let newValue = this.getCompletedValueByIndex(activeIndex);\n    if (this.value === newValue) {\n      return false;\n    }\n    this.value = newValue;\n    return true;\n  }\n\n  selectCompletion(index: number) { this.value = this.getCompletedValueByIndex(index); }\n\n  /**\n   * Updates the hintElement scroll position to match the scroll position of inputElement.\n   *\n   * This is called asynchronously after the input changes because automatic scrolling appears to\n   * take place after the 'input' event fires.\n   */\n  private updateHintScrollPosition() {\n    this.updateHintScrollPositionTimer = null;\n    this.hintElement.scrollLeft = this.inputElement.scrollLeft;\n  }\n\n  private cancelActiveCompletion() {\n    cancelPromise(this.activeCompletionPromise);\n    this.activeCompletionPromise = null;\n  }\n\n  private handleInputChanged(value: string) {\n    this.cancelActiveCompletion();\n    this.hintElement.value = '';\n    this.clearCompletions();\n    this.inputChanged.dispatch(value);\n    this.scheduleUpdateCompletions();\n  }\n\n  private clearCompletions() {\n    if (this.completionResult !== null) {\n      this.activeIndex = -1;\n      this.completionResult = null;\n      this.completionElements = null;\n      this.dropdownContentsStale = true;\n      this.dropdownStyleStale = true;\n      this.commonPrefix = '';\n      removeChildren(this.dropdownElement);\n      this.updateDropdown();\n    }\n  }\n\n  get value() { return this.prevInputValue; }\n\n  set value(value: string) {\n    if (value !== this.prevInputValue) {\n      this.inputElement.value = value;\n      this.prevInputValue = value;\n      this.handleInputChanged(value);\n    }\n  }\n\n  disposed() {\n    removeFromParent(this.element);\n    this.cancelActiveCompletion();\n    if (this.updateHintScrollPositionTimer !== null) {\n      clearTimeout(this.updateHintScrollPositionTimer);\n      this.updateHintScrollPositionTimer = null;\n    }\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/widget/autocomplete.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Utilities for positioning dropdown menus.\n */\n\nexport function positionDropdown(\n    dropdownElement: HTMLElement, associatedElement: HTMLElement,\n    {horizontal = false, vertical = true, topMargin = 6, bottomMargin = 6, leftMargin = 6,\n     rightMargin = 6, maxHeight = true, maxWidth = true} = {}) {\n  let rect = associatedElement.getBoundingClientRect();\n\n  if (horizontal) {\n    let viewportWidth = dropdownElement.ownerDocument.documentElement.clientHeight;\n    let distanceLeft = rect.right;\n    let distanceRight = viewportWidth - rect.left;\n    if (distanceLeft > distanceRight) {\n      dropdownElement.style.left = '';\n      dropdownElement.style.right = '0';\n      if (maxWidth) {\n        dropdownElement.style.maxWidth = (distanceLeft - leftMargin) + 'px';\n      }\n    } else {\n      dropdownElement.style.right = '';\n      dropdownElement.style.left = '0';\n      if (maxWidth) {\n        dropdownElement.style.maxWidth = (distanceRight - rightMargin) + 'px';\n      }\n    }\n  }\n\n  if (vertical) {\n    let viewportHeight = dropdownElement.ownerDocument.documentElement.clientHeight;\n    let distanceToTop = rect.top - topMargin;\n    let distanceToBottom = viewportHeight - rect.bottom - bottomMargin;\n    if (distanceToTop > distanceToBottom * 3) {\n      dropdownElement.style.top = '';\n      dropdownElement.style.bottom = '100%';\n      if (maxHeight) {\n        dropdownElement.style.maxHeight = distanceToTop + 'px';\n      }\n    } else {\n      dropdownElement.style.top = '100%';\n      dropdownElement.style.bottom = '';\n      if (maxHeight) {\n        dropdownElement.style.maxHeight = distanceToBottom + 'px';\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/dropdown.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the longest common prefix of a sequence of strings.\n *\n * Returns '' if the sequence of strings is empty.\n */\nexport function longestCommonPrefix(strings: Iterable<string>) {\n  let it = strings[Symbol.iterator]();\n  let {value: firstValue, done: noValues} = it.next();\n  if (noValues) {\n    // The sequence of strings is empty.\n    return '';\n  }\n  let commonPrefixLength = firstValue.length;\n  while (commonPrefixLength > 0) {\n    let {value, done} = it.next();\n    if (done) {\n      break;\n    }\n    let i = 0;\n    for (; i < commonPrefixLength; ++i) {\n      if (firstValue.charCodeAt(i) !== value.charCodeAt(i)) {\n        break;\n      }\n    }\n    commonPrefixLength = i;\n  }\n  return firstValue.substring(0, commonPrefixLength);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/longest_common_prefix.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function scrollIntoViewIfNeeded(element: HTMLElement) {\n  const parent = element.parentElement;\n  const elementLeft = element.offsetLeft - parent.clientLeft;\n  const elementTop = element.offsetTop - parent.clientTop;\n  const elementRight = elementLeft + element.offsetWidth;\n  const elementBottom = elementTop + element.offsetHeight;\n  const parentWidth = parent.clientWidth;\n  const parentHeight = parent.clientHeight;\n  const viewportLeft = parent.scrollLeft;\n  const viewportRight = viewportLeft + parentWidth;\n  const viewportTop = parent.scrollTop;\n  const viewportBottom = viewportTop + parentHeight;\n\n  const scrollLeftDelta = Math.max(0.0, elementRight - viewportRight) || Math.min(0.0, elementLeft - viewportLeft);\n  const scrollTopDelta = Math.max(0.0, elementBottom - viewportBottom) || Math.min(0.0, elementTop - viewportTop);\n\n  parent.scrollLeft += scrollLeftDelta;\n  parent.scrollTop += scrollTopDelta;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/util/scroll_into_view.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet nextElementId = 0;\n\nexport function associateLabelWithElement(label: HTMLLabelElement, element: HTMLInputElement) {\n  if (element.id === '') {\n    element.id = `unique-id-for-association-${nextElementId++}`;\n  }\n  label.setAttribute('for', element.id);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/widget/associate_label.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/widget/autocomplete.css\n ** module id = 122\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This creates a form submit button that is not displayed, in order that the form may be submitted\n * using the enter key.\n */\nexport function makeHiddenSubmitButton() {\n  let element = document.createElement('button');\n  element.type = 'submit';\n  element.className = 'hidden-submit-button';\n  // We apply these styles directly to the element rather than by styling the class in order to\n  // avoid them being overridden accidentally.\n  element.style.margin = '0';\n  element.style.border = '0';\n  element.style.padding = '0';\n  element.style.width = '0';\n  element.style.height = '0';\n  element.style.overflow = 'hidden';\n  element.tabIndex = -1;\n  return element;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/widget/hidden_submit_button.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/layer_dialog.css\n ** module id = 124\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ManagedUserLayer, UserLayer} from 'neuroglancer/layer';\nimport {LayerListSpecification, ManagedUserLayerWithSpecification} from 'neuroglancer/layer_specification';\nimport {Disposable, RefCounted} from 'neuroglancer/util/disposable';\nimport {removeChildren} from 'neuroglancer/util/dom';\nimport {positionDropdown} from 'neuroglancer/util/dropdown';\nimport {Sortable} from 'neuroglancer/util/sortablejs_es6';\nimport {LayerDialog} from 'neuroglancer/layer_dialog';\n\nrequire('neuroglancer/noselect.css');\nrequire('./layer_panel.css');\n\nclass LayerWidget extends RefCounted {\n  element: HTMLSpanElement;\n  widgetElement: HTMLSpanElement;\n  layerNumberElement: HTMLSpanElement;\n  labelElement: HTMLSpanElement;\n  valueElement: HTMLSpanElement;\n  dropdownElement: HTMLDivElement;\n  dropdown: Disposable;\n  userLayer: UserLayer;\n  hovering: boolean;\n\n  constructor(public layer: ManagedUserLayer, public panel: LayerPanel) {\n    super();\n    let element = this.element = document.createElement('span');\n    element.className = 'layer-item-parent noselect';\n    let widgetElement = this.widgetElement = document.createElement('span');\n    widgetElement.className = 'layer-item noselect';\n    element.appendChild(widgetElement);\n    let labelElement = this.labelElement = document.createElement('span');\n    labelElement.className = 'layer-item-label';\n    let layerNumberElement = this.layerNumberElement = document.createElement('span');\n    layerNumberElement.className = 'layer-item-number';\n    let valueElement = this.valueElement = document.createElement('span');\n    valueElement.className = 'layer-item-value';\n    let closeElement = document.createElement('span');\n    closeElement.title = 'Delete layer';\n    closeElement.className = 'layer-item-close';\n    this.registerEventListener(\n      closeElement, 'click', (event: MouseEvent) => {\n        this.panel.layerManager.removeManagedLayer(this.layer);\n      });\n    widgetElement.appendChild(layerNumberElement);\n    widgetElement.appendChild(labelElement);\n    widgetElement.appendChild(valueElement);\n    widgetElement.appendChild(closeElement);\n    this.registerEventListener(\n      widgetElement, 'click', (event: MouseEvent) => { layer.setVisible(!layer.visible); });\n\n    // Hide the dropdown menu while dragging.  We can't wait until the onStart handler from\n    // Sortablejs fires because it occurs too late to affect what is shown while dragging.\n    this.registerEventListener(element, 'mousedown', (event: MouseEvent) => {\n      if (event.button === 0) {\n        this.panel.setDragging(true);\n      }\n    });\n    this.registerEventListener(element, 'mouseup', (event: MouseEvent) => {\n      if (event.button === 0) {\n        this.panel.setDragging(false);\n      }\n    });\n\n    this.registerEventListener(widgetElement, 'dblclick', (event: MouseEvent) => {\n      if (layer instanceof ManagedUserLayerWithSpecification) {\n        new LayerDialog(this.panel.manager, layer);\n      }\n    });\n    let dropdownElement = this.dropdownElement = document.createElement('div');\n    this.registerEventListener(dropdownElement, 'mousedown', (event: MouseEvent) => {\n      // Prevent clicks on the dropdown from triggering dragging.\n      event.stopPropagation();\n    });\n    this.setupDropdownElement();\n    this.handleLayerChanged();\n    this.registerSignalBinding(layer.layerChanged.add(this.handleLayerChanged, this));\n    element.appendChild(dropdownElement);\n\n    this.registerEventListener(element, 'mouseenter', () => {\n      this.hovering = true;\n      this.updateDropdownState();\n    });\n    this.registerEventListener(element, 'mouseleave', (event: MouseEvent) => {\n      this.hovering = false;\n      this.updateDropdownState();\n    });\n  }\n\n  updateDropdownState() {\n    if (this.hovering && !this.panel.dragging && this.dropdownElement.childElementCount > 0) {\n      this.dropdownElement.style.display = 'flex';\n      positionDropdown(this.dropdownElement, this.widgetElement);\n    } else {\n      this.dropdownElement.style.display = 'none';\n    }\n  }\n\n  setupDropdownElement () {\n    this.dropdownElement.className = 'layer-dropdown';\n  }\n\n  update() {\n    let {layer} = this;\n    this.labelElement.textContent = layer.name;\n    this.widgetElement.setAttribute('layer-visible', layer.visible.toString());\n  }\n\n  private handleLayerChanged() {\n    let {layer} = this;\n    let userLayer = layer.layer;\n    if (userLayer !== this.userLayer) {\n      if (this.dropdown) {\n        this.dropdown.dispose();\n        removeChildren(this.dropdownElement);\n        this.setupDropdownElement();\n      }\n      this.userLayer = userLayer;\n      if (userLayer) {\n        this.dropdown = userLayer.makeDropdown(this.dropdownElement);\n      } else {\n        this.dropdown = null;\n      }\n    }\n  }\n\n  disposed() {\n    if (this.dropdown) {\n      this.dropdown.dispose();\n    }\n    this.element.parentElement.removeChild(this.element);\n  }\n}\n\nexport class LayerPanel extends RefCounted {\n  private layerWidgets = new Map<ManagedUserLayer, LayerWidget>();\n  private layerUpdateNeeded = true;\n  private valueUpdateNeeded = false;\n  private addButton: HTMLButtonElement;\n  dragging = false;\n\n  get layerManager() { return this.manager.layerManager; }\n\n  constructor(\n      public element: HTMLElement, public manager: LayerListSpecification) {\n    super();\n    element.className = 'layer-panel';\n    this.registerSignalBinding(\n      manager.layerSelectedValues.changed.add(this.handleLayerValuesChanged, this));\n    this.registerSignalBinding(manager.layerManager.layersChanged.add(this.handleLayersChanged, this));\n    let addButton = this.addButton = document.createElement('button');\n    addButton.className = 'layer-add-button';\n    addButton.title = 'Add layer';\n    this.registerEventListener(addButton, 'click', () => { this.addLayerMenu(); });\n    element.appendChild(addButton);\n    this.update();\n    let sortable = new Sortable(this.element, {\n      draggable: '.layer-item-parent',\n      onStart: (evt) => {\n        this.setDragging(true);\n        this.element.classList.add('sorting-in-progress');\n      },\n      onEnd: (evt) => {\n        this.setDragging(false);\n        this.element.classList.remove('sorting-in-progress');\n        this.layerManager.reorderManagedLayer(evt.oldIndex, evt.newIndex);\n      },\n      onMove: evt => { return (evt.related !== this.addButton); },\n    });\n    this.registerDisposer(() => { sortable.destroy(); });\n  }\n\n  setDragging(value: boolean) {\n    this.dragging = value;\n    for (let widget of this.layerWidgets.values()) {\n      widget.updateDropdownState();\n    }\n  }\n\n  dispose() {\n    this.layerWidgets.forEach(x => x.dispose());\n    this.layerWidgets = null;\n  }\n\n  handleLayersChanged() {\n    this.layerUpdateNeeded = true;\n    this.handleLayerValuesChanged();\n  }\n\n  handleLayerValuesChanged() {\n    if (!this.valueUpdateNeeded) {\n      this.valueUpdateNeeded = true;\n      requestAnimationFrame(this.update.bind(this));\n    }\n  }\n\n  update() {\n    this.valueUpdateNeeded = false;\n    this.updateLayers();\n    let values = this.manager.layerSelectedValues;\n    for (let [layer, widget] of this.layerWidgets) {\n      let value = values.get(layer.layer);\n      let text = '';\n      if (value !== undefined) {\n        text = '' + value;\n      }\n      widget.valueElement.textContent = text;\n    }\n  }\n\n  updateLayers() {\n    if (!this.layerUpdateNeeded) {\n      return;\n    }\n    this.layerUpdateNeeded = false;\n    let container = this.element;\n    let layers = new Set();\n    let nextChild = container.firstElementChild;\n    this.manager.layerManager.managedLayers.forEach((layer, layerIndex) => {\n      layers.add(layer);\n      let widget = this.layerWidgets.get(layer);\n      if (widget === undefined) {\n        widget = new LayerWidget(layer, this);\n        this.layerWidgets.set(layer, widget);\n      }\n      widget.layerNumberElement.textContent = '' + (1 + layerIndex);\n      widget.update();\n      let {element} = widget;\n      if (element !== nextChild) {\n        container.insertBefore(widget.element, this.addButton);\n      }\n    });\n    for (let [layer, widget] of this.layerWidgets) {\n      if (!layers.has(layer)) {\n        this.layerWidgets.delete(layer);\n        widget.dispose();\n      }\n    }\n  }\n\n  addLayerMenu() {\n    // Automatically destroys itself when it exits.\n    new LayerDialog(this.manager);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/layer_panel.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a simple wrapper of sortablejs that is compatible with ES6 modules.\n */\nexports.Sortable = require('sortablejs');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/util/sortablejs_es6.js\n ** module id = 126\n ** module chunks = 0\n **/","/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n\n(function (factory) {\n\t\"use strict\";\n\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(factory);\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse if (typeof Package !== \"undefined\") {\n\t\tSortable = factory();  // export for Meteor.js\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function () {\n\t\"use strict\";\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tRSPACE = /\\s+/g,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tslice = [].slice,\n\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar el,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + vx * speed, win.pageYOffset + vy * speed);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvy && (el.scrollTop += vy * speed);\n\t\t\t\t\t\t\t\tvx && (el.scrollLeft += vx * speed);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tvar group = options.group;\n\n\t\t\tif (!group || typeof group != 'object') {\n\t\t\t\tgroup = options.group = {name: group};\n\t\t\t}\n\n\t\t\t['pull', 'put'].forEach(function (key) {\n\t\t\t\tif (!(key in group)) {\n\t\t\t\t\tgroup[key] = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\toptions.groups = ' ' + group.name + (group.put.join ? ' ' + group.put.join(' ') : '') + ' ';\n\t\t}\n\t;\n\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = target,\n\t\t\t\tfilter = options.filter;\n\n\n\t\t\tif (type === 'mousedown' && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// get the index of the dragged element within its parent\n\t\t\toldIndex = _index(target);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, oldIndex);\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, oldIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tactiveGroup = options.group;\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = true;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, _this.options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(touch);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Touch */touch) {\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, true);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\tgroupName = ' ' + this.options.group.name + '',\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando] && parent[expando].options.groups.indexOf(groupName) > -1) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tvar touch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = touch.clientX - tapEvt.clientX,\n\t\t\t\t\tdy = touch.clientY - tapEvt.clientY,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.pull == 'clone') {\n\t\t\t\tcloneEl = dragEl.cloneNode(true);\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t}\n\n\t\t\tif (useFallback) {\n\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tgroupPut = group.put,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeGroup && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: activeGroup.pull && groupPut && (\n\t\t\t\t\t\t(activeGroup.name === group.name) || // by Name\n\t\t\t\t\t\t(groupPut.indexOf && ~groupPut.indexOf(activeGroup.name)) // by Array\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(true);\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (target = _ghostIsLast(el, evt))\n\t\t\t\t) {\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\n\t\t\t\t\tvar targetRect = target.getBoundingClientRect(),\n\t\t\t\t\t\twidth = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = /left|right|inline/.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tmoveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect),\n\t\t\t\t\t\tafter\n\t\t\t\t\t;\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(isOwner);\n\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (floating) {\n\t\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Remove clone\n\t\t\t\t\t\tcloneEl && cloneEl.parentNode.removeChild(cloneEl);\n\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\tif (newIndex === null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Nulling\n\t\t\t\trootEl =\n\t\t\t\tdragEl =\n\t\t\t\tparentEl =\n\t\t\t\tghostEl =\n\t\t\t\tnextEl =\n\t\t\t\tcloneEl =\n\n\t\t\t\tscrollEl =\n\t\t\t\tscrollParentEl =\n\n\t\t\t\ttapEvt =\n\t\t\t\ttouchEvt =\n\n\t\t\t\tmoved =\n\t\t\t\tnewIndex =\n\n\t\t\t\tlastEl =\n\t\t\t\tlastCSS =\n\n\t\t\t\tactiveGroup =\n\t\t\t\tSortable.active = null;\n\t\t\t}\n\t\t},\n\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tvar type = evt.type;\n\n\t\t\tif (type === 'dragover' || type === 'dragenter') {\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type === 'drop' || type === 'dragend') {\n\t\t\t\tthis._onDrop(evt);\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(state) {\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\t\t\t!state && cloneEl.state && rootEl.insertBefore(cloneEl, dragEl);\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\tdo {\n\t\t\t\tif (\n\t\t\t\t\t(tag === '>*' && el.parentNode === ctx) || (\n\t\t\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (el !== ctx && (el = el.parentNode));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, false);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, false);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(RSPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(RSPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = (sortable || rootEl[expando]).options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\treturn ((evt.clientY - (rect.top + rect.height) > 5) || (evt.clientX - (rect.right + rect.width) > 5)) && lastEl; // min delta\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent\n\t * @param  {HTMLElement} el\n\t * @return {number}\n\t */\n\tfunction _index(el) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif (el.nodeName.toUpperCase() !== 'TEMPLATE') {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.4.2';\n\treturn Sortable;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sortablejs/Sortable.js\n ** module id = 127\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/layer_panel.css\n ** module id = 128\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface Handler {\n  (element: HTMLElement): void;\n}\n\nexport function withFlex(value: any, handler: Handler) {\n  return (element: HTMLElement) => {\n    element.style.flex = value;\n    handler(element);\n  };\n}\nexport function withStyle(style: {}, handler: Handler) {\n  return (element: HTMLElement) => {\n    Object.assign(element.style, style);\n    handler(element);\n  };\n}\n\nexport function withAttributes(attributes: {}, handler: Handler) {\n  return (element: HTMLElement) => {\n    Object.assign(element, attributes);\n    handler(element);\n  };\n};\n\nexport function box(flexDirection: string, spec: Handler[]) {\n  return (container: HTMLElement) => {\n    container.style.display = 'flex';\n    container.style.flexDirection = flexDirection;\n    for (let handler of spec) {\n      let element = container.ownerDocument.createElement('div');\n      container.appendChild(element);\n      handler(element);\n    }\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/layout.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {Vec3, Quat, Mat4, mat3, vec3, quat, mat4} from 'neuroglancer/util/geom';\nimport {parseFiniteVec} from 'neuroglancer/util/json';\nimport {Signal} from 'signals';\n\nexport class VoxelSize extends RefCounted {\n  size: Vec3;\n  valid: boolean;\n  changed = new Signal();\n  constructor(voxelSize?: Vec3) {\n    super();\n    let valid = true;\n    if (voxelSize == null) {\n      voxelSize = vec3.create();\n      valid = false;\n    }\n    this.size = voxelSize;\n    this.valid = valid;\n  }\n\n  reset() {\n    this.valid = false;\n    this.changed.dispatch();\n  }\n\n  /**\n   * This should be called after setting the voxel size initially.  The voxel\n   * size should not be changed once it is valid.\n   */\n  setValid() {\n    if (!this.valid) {\n      this.valid = true;\n      this.changed.dispatch();\n    }\n  }\n\n  toJSON() {\n    if (!this.valid) {\n      return undefined;\n    }\n    return Array.prototype.slice.call(this.size);\n  }\n\n  restoreState(obj: any) {\n    try {\n      parseFiniteVec(this.size, obj);\n      this.setValid();\n    } catch (e) {\n      this.valid = false;\n    }\n  }\n\n  toString() {\n    if (!this.valid) {\n      return null;\n    }\n    return this.size.toString();\n  }\n\n  voxelFromSpatial(voxel: Vec3, spatial: Vec3) { vec3.divide(voxel, spatial, this.size); }\n\n  spatialFromVoxel(spatial: Vec3, voxel: Vec3) { vec3.multiply(spatial, voxel, this.size); }\n};\n\nconst tempVec3 = vec3.create();\nconst tempQuat = quat.create();\n\nexport class SpatialPosition extends RefCounted {\n  voxelSize: VoxelSize;\n  spatialCoordinates: Vec3;\n  spatialCoordinatesValid: boolean;\n  private voxelCoordinates: Vec3 = null;\n  changed = new Signal();\n  constructor(voxelSize?: VoxelSize, spatialCoordinates?: Vec3) {\n    super();\n    if (voxelSize == null) {\n      voxelSize = new VoxelSize();\n    }\n    this.voxelSize = voxelSize;\n\n    let spatialCoordinatesValid = true;\n    if (spatialCoordinates == null) {\n      spatialCoordinates = vec3.create();\n      spatialCoordinatesValid = false;\n    }\n    this.spatialCoordinates = spatialCoordinates;\n    this.spatialCoordinatesValid = spatialCoordinatesValid;\n\n    this.registerDisposer(voxelSize);\n    this.registerSignalBinding(voxelSize.changed.add(this.handleVoxelSizeChanged, this));\n  }\n\n  get valid() { return this.spatialCoordinatesValid && this.voxelSize.valid; }\n\n  get voxelCoordinatesValid() { return this.valid || this.voxelCoordinates != null; }\n\n  reset() {\n    this.spatialCoordinatesValid = false;\n    this.voxelCoordinates = null;\n    this.changed.dispatch();\n  }\n\n  getVoxelCoordinates(out: Vec3) {\n    let {voxelCoordinates} = this;\n    if (voxelCoordinates) {\n      vec3.copy(out, voxelCoordinates);\n    } else if (this.valid) {\n      this.voxelSize.voxelFromSpatial(out, this.spatialCoordinates);\n    } else {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Sets this position to the spatial coordinats corresponding to the specified\n   * voxelPosition.  If this.voxelSize.valid == false, then this position won't\n   * be set until it is.\n   */\n  setVoxelCoordinates(voxelCoordinates: Vec3) {\n    let voxelSize = this.voxelSize;\n    if (voxelSize.valid) {\n      voxelSize.spatialFromVoxel(this.spatialCoordinates, voxelCoordinates);\n      this.markSpatialCoordinatesChanged();\n    } else {\n      let voxelCoordinates_ = this.voxelCoordinates;\n      if (!voxelCoordinates_) {\n        this.voxelCoordinates = voxelCoordinates_ = vec3.clone(voxelCoordinates);\n      } else {\n        vec3.copy(voxelCoordinates_, voxelCoordinates);\n      }\n    }\n    this.changed.dispatch();\n  }\n\n  markSpatialCoordinatesChanged() {\n    this.spatialCoordinatesValid = true;\n    this.voxelCoordinates = null;\n    this.changed.dispatch();\n  }\n\n  private handleVoxelSizeChanged() {\n    if (this.voxelCoordinates != null && !this.spatialCoordinatesValid) {\n      this.voxelSize.spatialFromVoxel(this.spatialCoordinates, this.voxelCoordinates);\n      this.spatialCoordinatesValid = true;\n    }\n    this.voxelCoordinates = null;\n    this.changed.dispatch();\n  }\n\n  toJSON() {\n    let empty = true;\n    let voxelSizeJson = this.voxelSize.toJSON();\n    let obj: any = {};\n    if (voxelSizeJson !== undefined) {\n      empty = false;\n      obj['voxelSize'] = voxelSizeJson;\n    }\n    if (this.voxelCoordinatesValid) {\n      let voxelCoordinates = tempVec3;\n      this.getVoxelCoordinates(voxelCoordinates);\n      obj['voxelCoordinates'] = Array.prototype.slice.call(voxelCoordinates);\n      empty = false;\n    } else if (this.spatialCoordinatesValid) {\n      obj['spatialCoordinates'] = Array.prototype.slice.call(this.spatialCoordinates);\n      empty = false;\n    }\n    if (empty) {\n      return undefined;\n    }\n    return obj;\n  }\n\n  restoreState(obj: any) {\n    this.voxelSize.restoreState(obj['voxelSize']);\n    this.spatialCoordinatesValid = false;\n    if (obj.hasOwnProperty('voxelCoordinates')) {\n      try {\n        let voxelCoordinates = vec3.create();\n        parseFiniteVec(voxelCoordinates, obj['voxelCoordinates']);\n        this.setVoxelCoordinates(voxelCoordinates);\n      } catch (e) {\n      }\n    }\n    try {\n      parseFiniteVec(this.spatialCoordinates, obj['spatialCoordinates']);\n      this.markSpatialCoordinatesChanged();\n    } catch (e) {\n    }\n  }\n\n  snapToVoxel() {\n    if (!this.valid) {\n      let {voxelCoordinates} = this;\n      if (voxelCoordinates != null) {\n        for (let i = 0; i < 3; ++i) {\n          voxelCoordinates[i] = Math.round(voxelCoordinates[i]);\n        }\n        this.changed.dispatch();\n      }\n    } else {\n      let spatialCoordinates = this.spatialCoordinates;\n      let voxelSize = this.voxelSize.size;\n      for (let i = 0; i < 3; ++i) {\n        let voxelSizeValue = voxelSize[i];\n        spatialCoordinates[i] = Math.round(spatialCoordinates[i] / voxelSizeValue) * voxelSizeValue;\n      }\n      this.changed.dispatch();\n    }\n  }\n};\n\nfunction quaternionIsIdentity(quat: Quat) {\n  return quat[0] === 0 && quat[1] === 0 && quat[2] === 0 && quat[3] === 1;\n}\n\nexport class OrientationState extends RefCounted {\n  orientation: Quat;\n  changed = new Signal();\n\n  constructor(orientation?: Quat) {\n    super();\n    if (orientation == null) {\n      orientation = quat.create();\n    }\n    this.orientation = orientation;\n  }\n  toJSON() {\n    let {orientation} = this;\n    if (quaternionIsIdentity(orientation)) {\n      return undefined;\n    }\n    return Array.prototype.slice.call(this.orientation);\n  }\n  restoreState(obj: any) {\n    try {\n      parseFiniteVec(this.orientation, obj);\n      quat.normalize(this.orientation, this.orientation);\n    } catch (ignoredError) {\n      quat.identity(this.orientation);\n    }\n    this.changed.dispatch();\n  }\n\n  reset() {\n    quat.identity(this.orientation);\n    this.changed.dispatch();\n  }\n\n  snap() {\n    let mat = mat3.create();\n    mat3.fromQuat(mat, this.orientation);\n    // console.log(mat);\n    let usedAxes = [false, false, false];\n    for (let i = 0; i < 3; ++i) {\n      let maxComponent = 0;\n      let argmaxComponent = 0;\n      for (let j = 0; j < 3; ++j) {\n        let value = mat[i * 3 + j];\n        mat[i * 3 + j] = 0;\n        if (usedAxes[j]) {\n          continue;\n        }\n        if (Math.abs(value) > Math.abs(maxComponent)) {\n          maxComponent = value;\n          argmaxComponent = j;\n        }\n      }\n      mat[i * 3 + argmaxComponent] = Math.sign(maxComponent);\n      usedAxes[argmaxComponent] = true;\n    }\n    // console.log(mat);\n    quat.fromMat3(this.orientation, mat);\n    this.changed.dispatch();\n  }\n\n  /**\n   * Returns a new OrientationState with orientation fixed to peerToSelf * peer.orientation.  Any\n   * changes to the returned OrientationState will cause a corresponding change in peer, and vice\n   * versa.\n   */\n  static makeRelative(peer: OrientationState, peerToSelf: Quat) {\n    let self = new OrientationState(quat.multiply(quat.create(), peer.orientation, peerToSelf));\n    let updatingPeer = false;\n    self.registerSignalBinding(peer.changed.add(() => {\n      if (!updatingPeer) {\n        updatingSelf = true;\n        quat.multiply(self.orientation, peer.orientation, peerToSelf);\n        self.changed.dispatch();\n        updatingSelf = false;\n      }\n    }));\n    let updatingSelf = false;\n    const selfToPeer = quat.invert(quat.create(), peerToSelf);\n    self.registerSignalBinding(self.changed.add(() => {\n      if (!updatingSelf) {\n        updatingPeer = true;\n        quat.multiply(peer.orientation, self.orientation, selfToPeer);\n        peer.changed.dispatch();\n        updatingPeer = false;\n      }\n    }));\n    return self;\n  }\n};\n\nexport class Pose extends RefCounted {\n  position: SpatialPosition;\n  orientation: OrientationState;\n  changed = new Signal();\n  constructor(position?: SpatialPosition, orientation?: OrientationState) {\n    super();\n    if (position == null) {\n      position = new SpatialPosition();\n    }\n    this.position = position;\n    if (orientation == null) {\n      orientation = new OrientationState();\n    }\n    this.orientation = orientation;\n    this.registerDisposer(this.position);\n    this.registerDisposer(this.orientation);\n    this.registerSignalBinding(this.position.changed.add(this.changed.dispatch, this.changed));\n    this.registerSignalBinding(this.orientation.changed.add(this.changed.dispatch, this.changed));\n  }\n\n  get valid() { return this.position.valid; }\n\n  /**\n   * Resets everything except voxelSize.\n   */\n  reset() {\n    this.position.reset();\n    this.orientation.reset();\n  }\n\n  dispose() { this.position.changed.remove(this.changed.dispatch, this.changed); }\n\n  toMat4(mat: Mat4) {\n    mat4.fromRotationTranslation(\n        mat, this.orientation.orientation, this.position.spatialCoordinates);\n  }\n\n  toJSON() {\n    let positionJson = this.position.toJSON();\n    let orientationJson = this.orientation.toJSON();\n    if (positionJson === undefined && orientationJson === undefined) {\n      return undefined;\n    }\n    return {'position': positionJson, 'orientation': orientationJson};\n  }\n\n  restoreState(obj: any) {\n    this.position.restoreState(obj['position']);\n    this.orientation.restoreState(obj['orientation']);\n  }\n\n  /**\n   * Snaps the orientation to the nearest axis-aligned orientation, and\n   * snaps the position to the nearest voxel.\n   */\n  snap() {\n    this.orientation.snap();\n    this.position.snapToVoxel();\n    this.changed.dispatch();\n  }\n  translateAbsolute(translation: Vec3) {\n    vec3.add(this.position.spatialCoordinates, this.position.spatialCoordinates, translation);\n    this.position.changed.dispatch();\n  }\n  translateRelative(translation: Vec3) {\n    if (!this.valid) {\n      return;\n    }\n    var temp = vec3.create();\n    vec3.transformQuat(temp, translation, this.orientation.orientation);\n    vec3.add(this.position.spatialCoordinates, this.position.spatialCoordinates, temp);\n    this.position.changed.dispatch();\n  }\n  translateVoxelsRelative(translation: Vec3) {\n    if (!this.valid) {\n      return;\n    }\n    var temp = vec3.create();\n    vec3.transformQuat(temp, translation, this.orientation.orientation);\n    vec3.multiply(temp, temp, this.position.voxelSize.size);\n    vec3.add(this.position.spatialCoordinates, this.position.spatialCoordinates, temp);\n    this.position.changed.dispatch();\n  }\n  rotateRelative(axis: Vec3, angle: number) {\n    var temp = quat.create();\n    quat.setAxisAngle(temp, axis, angle);\n    var orientation = this.orientation.orientation;\n    quat.multiply(orientation, orientation, temp);\n    this.orientation.changed.dispatch();\n  }\n\n  rotateAbsolute(axis: Vec3, angle: number, fixedPoint?: Vec3) {\n    var temp = quat.create();\n    quat.setAxisAngle(temp, axis, angle);\n    var orientation = this.orientation.orientation;\n    if (fixedPoint !== undefined) {\n      // We want the coordinates in the transformed coordinate frame of the fixed point to remain\n      // the same after the rotation.\n\n      // We have the invariants:\n      // oldOrienation * fixedPointLocal + oldPosition == fixedPoint.\n      // newOrientation * fixedPointLocal + newPosition == fixedPoint.\n\n      // Therefore, we compute fixedPointLocal by:\n      // fixedPointLocal == inverse(oldOrientation) * (fixedPoint - oldPosition).\n      let {spatialCoordinates} = this.position;\n      let fixedPointLocal = vec3.subtract(tempVec3, fixedPoint, spatialCoordinates);\n      let invOrientation = quat.invert(tempQuat, orientation);\n      vec3.transformQuat(fixedPointLocal, fixedPointLocal, invOrientation);\n\n      // We then compute the newPosition by:\n      // newPosition := fixedPoint - newOrientation * fixedPointLocal.\n      quat.multiply(orientation, temp, orientation);\n      vec3.transformQuat(spatialCoordinates, fixedPointLocal, orientation);\n      vec3.subtract(spatialCoordinates, fixedPoint, spatialCoordinates);\n\n      this.position.changed.dispatch();\n    } else {\n      quat.multiply(orientation, temp, orientation);\n    }\n    this.orientation.changed.dispatch();\n  }\n};\n\nexport class TrackableZoomState {\n  constructor(private value_ = Number.NaN, public defaultValue = value_) {}\n  get value() { return this.value_; }\n  set value(newValue: number) {\n    if (newValue !== this.value_) {\n      this.value_ = newValue;\n      this.changed.dispatch();\n    }\n  }\n  changed = new Signal();\n\n  toJSON () {\n    let {value_, defaultValue} = this;\n    if (Number.isNaN(value_) === Number.isNaN(defaultValue) || value_ === defaultValue) {\n      return undefined;\n    }\n    return value_;\n  }\n\n  restoreState(obj: any) {\n    if (typeof obj === 'number' && Number.isFinite(obj) && obj > 0) {\n      this.value = obj;\n    } else {\n      this.value = this.defaultValue;\n    }\n  }\n\n  reset() {\n    this.value = this.defaultValue;\n  }\n\n  zoomBy(factor: number) {\n    let {value_} = this;\n    if (Number.isNaN(value_)) {\n      return;\n    }\n    this.value = value_ * factor;\n  }\n};\n\nexport class NavigationState extends RefCounted {\n  changed = new Signal();\n  zoomFactor: TrackableZoomState;\n\n  constructor(public pose = new Pose(), zoomFactor: number|TrackableZoomState = Number.NaN) {\n    super();\n    if (typeof zoomFactor === 'number') {\n      this.zoomFactor = new TrackableZoomState(zoomFactor);\n    } else {\n      this.zoomFactor = zoomFactor;\n    }\n    this.registerDisposer(pose);\n    this.registerSignalBinding(this.pose.changed.add(() => { this.changed.dispatch(); }));\n    this.registerSignalBinding(this.zoomFactor.changed.add(() => { this.changed.dispatch(); }));\n    this.registerSignalBinding(this.voxelSize.changed.add(() => { this.handleVoxelSizeChanged(); }));\n    this.handleVoxelSizeChanged();\n  }\n  get voxelSize() { return this.pose.position.voxelSize; }\n\n  /**\n   * Resets everything except voxelSize.\n   */\n  reset() {\n    this.pose.reset();\n    this.zoomFactor.reset();\n  }\n\n  private setZoomFactorFromVoxelSize() {\n    let {voxelSize} = this;\n    if (voxelSize.valid) {\n      this.zoomFactor.value = Math.min.apply(null, this.voxelSize.size);\n    }\n  }\n\n  /**\n   * Sets the zoomFactor to the minimum voxelSize if it is not already set.\n   */\n  private handleVoxelSizeChanged() {\n    if (Number.isNaN(this.zoomFactor.value)) {\n      this.setZoomFactorFromVoxelSize();\n    }\n  }\n  get position() { return this.pose.position; }\n  toMat4(mat: Mat4) {\n    this.pose.toMat4(mat);\n    let zoom = this.zoomFactor.value;\n    mat4.scale(mat, mat, vec3.fromValues(zoom, zoom, zoom));\n  };\n\n  get valid() { return this.pose.valid; }\n\n  toJSON() {\n    let poseJson = this.pose.toJSON();\n    let zoomFactorJson = this.zoomFactor.toJSON();\n    if (poseJson === undefined && zoomFactorJson === undefined) {\n      return undefined;\n    }\n    return {'pose': poseJson, 'zoomFactor': zoomFactorJson};\n  }\n\n  restoreState(obj: any) {\n    if (!obj || typeof obj !== 'object') {\n      return;\n    }\n    this.pose.restoreState(obj['pose']);\n    this.zoomFactor.restoreState(obj['zoomFactor']);\n    this.handleVoxelSizeChanged();\n    this.changed.dispatch();\n  }\n\n  zoomBy(factor: number) {\n    this.zoomFactor.zoomBy(factor);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/navigation_state.ts\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ViewerPositionState} from 'neuroglancer/viewer_state';\nimport {RefCounted} from 'neuroglancer/util/disposable';\nimport {vec3, AXES_NAMES} from 'neuroglancer/util/geom';\n\nrequire('./position_status_panel.css');\n\nexport class PositionStatusPanel extends RefCounted {\n  private positionElements = new Array<HTMLInputElement>();\n  private mouseElement: HTMLSpanElement;\n  private needsUpdate: number = null;\n  private tempPosition = vec3.create();\n\n  constructor(public element: HTMLElement, public viewer: ViewerPositionState) {\n    super();\n    element.setAttribute('class', 'position-status-panel');\n    let {positionElements} = this;\n    for (let i = 0; i < 3; ++i) {\n      let label = element.ownerDocument.createElement('label');\n      label.className = 'position-status-coord';\n      let input = element.ownerDocument.createElement('input');\n      input.type = 'number';\n      input.className = 'position-status-coord';\n      label.textContent = AXES_NAMES[i];\n      label.appendChild(input);\n      element.appendChild(label);\n      positionElements.push(input);\n      let nextInputIsChange = false;\n      this.registerEventListener(\n          input, 'change', (event: Event) => { this.handleCoordinateChange(); });\n      this.registerEventListener(input, 'input', (event: Event) => {\n        if (nextInputIsChange) {\n          this.handleCoordinateChange();\n          nextInputIsChange = false;\n        }\n        return true;\n      });\n      this.registerEventListener(input, 'wheel', (event: WheelEvent) => {\n        nextInputIsChange = true;\n        input.focus();\n        return true;\n      });\n      this.registerEventListener(input, 'keydown', (event: MouseEvent) => {\n        nextInputIsChange = false;\n        return true;\n      });\n      this.registerEventListener(input, 'mousedown', (event: MouseEvent) => {\n        nextInputIsChange = true;\n        return true;\n      });\n      this.registerEventListener(input, 'click', (event: MouseEvent) => { return true; });\n      this.registerEventListener(input, 'blur', (event: MouseEvent) => {\n        nextInputIsChange = false;\n        return true;\n      });\n    }\n    let mouseElement = this.mouseElement = document.createElement('span');\n    mouseElement.className = 'position-status-mouse';\n    element.appendChild(mouseElement);\n\n    let {navigationState, mouseState} = viewer;\n\n    this.registerSignalBinding(navigationState.pose.changed.add(this.handleChange, this));\n    this.registerSignalBinding(mouseState.changed.add(this.handleChange, this));\n    this.handleChange();\n  }\n\n  handleChange() {\n    if (this.needsUpdate == null) {\n      this.needsUpdate = requestAnimationFrame(this.update.bind(this));\n      // console.log(`Requested animation frame at ${Date.now()}`);\n    }\n  }\n\n  handleCoordinateChange() {\n    let positionElements = this.positionElements;\n    let position = this.viewer.navigationState.pose.position;\n    let voxelPosition = this.tempPosition;\n    if (!position.voxelCoordinatesValid) {\n      return;\n    }\n    position.getVoxelCoordinates(voxelPosition);\n    for (let i = 0; i < 3; ++i) {\n      let value = parseFloat(positionElements[i].value);\n      if (!Number.isNaN(value)) {\n        voxelPosition[i] = value;\n      }\n    }\n    position.setVoxelCoordinates(voxelPosition);\n  }\n\n  update() {\n    this.needsUpdate = null;\n    let {navigationState, mouseState} = this.viewer;\n    let voxelPosition = this.tempPosition;\n    let position = navigationState.pose.position;\n    // console.log(\"updating position view\", this.navigationState.position.voxelCoordinatesValid);\n    if (position.getVoxelCoordinates(voxelPosition)) {\n      // console.log(\"got new position: \" + voxelPosition);\n      let positionElements = this.positionElements;\n      for (let i = 0; i < 3; ++i) {\n        let value = voxelPosition[i];\n        positionElements[i].value = '' + Math.floor(value);\n      }\n    }\n\n    let voxelSize = position.voxelSize;\n\n    {\n      let text = '';\n      if (mouseState.active) {\n        voxelSize.voxelFromSpatial(voxelPosition, mouseState.position);\n        let p = voxelPosition;\n        text = `x ${Math.round(p[0])}  y ${Math.round(p[1])}  z ${Math.round(p[2])}`;\n      }\n      this.mouseElement.textContent = text;\n    }\n  }\n\n  disposed() {\n    for (let x of this.positionElements) {\n      this.element.removeChild(x);\n    }\n    this.positionElements = null;\n    this.element = null;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/position_status_panel.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/position_status_panel.css\n ** module id = 132\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Facility for storing global state in the url hash.\n\nimport {Signal} from 'signals';\nimport {urlSafeStringify, urlSafeParse} from 'neuroglancer/util/json';\n\n// Maps keys to objects.\nlet trackedKeys = new Map<string, Trackable>();\n// Maps objects to keys.\nlet trackedObjects = new Map<Trackable, string>();\n\nlet currentHashState: any = {};\nlet updatingObject: Trackable = null;\nlet updatedObjects = new Set<Trackable>();\nlet lastHash: string = null;\nlet pendingUpdate: number = null;\n\nconst UPDATE_DELAY = 500;\n\nexport interface Trackable {\n  restoreState: (x: any) => void;\n  changed: Signal;\n  toJSON: () => any;\n}\n\nfunction updateTrackedObjectsFromHash() {\n  // console.log(\"updateTrackedObjectsFromHash called\");\n  try {\n    let s = location.href.replace(/^[^#]+/, '');\n    // console.log(`hash str: ${s}`);\n    if (s === '' || s === '#' || s === '#!') {\n      s = '#!{}';\n    }\n    if (s.startsWith('#!')) {\n      s = s.slice(2);\n      // Firefox always %-encodes the URL even if it is not typed that way.\n      s = decodeURI(s);\n      if (s === lastHash) {\n        // We caused this update.\n        return;\n      }\n      lastHash = s;\n      let state = urlSafeParse(s);\n      if (typeof state === 'object') {\n        updateTrackedObjects(state);\n      }\n    } else {\n      lastHash = null;\n    }\n  } catch (e) {\n    // Failed to parse hash, ignore.\n    console.log(e);\n  }\n}\n\nfunction restoreObjectState(key: string, obj: Trackable) {\n  try {\n    updatingObject = obj;\n    obj.restoreState(currentHashState[key]);\n  } catch (e) {\n    console.log(`Failed to restore ${key} state: ${e}`);\n  } finally {\n    updatingObject = null;\n  }\n}\n\nfunction updateTrackedObjects(newState: any) {\n  currentHashState = newState;\n  for (let key of Object.keys(currentHashState)) {\n    let obj = trackedKeys.get(key);\n    if (obj !== undefined) {\n      restoreObjectState(key, obj);\n    }\n  }\n}\n\nfunction scheduleUpdate() {\n  // Wait another UPDATE_DELAY ms before updating hash.\n  if (pendingUpdate != null) {\n    clearTimeout(pendingUpdate);\n  }\n  pendingUpdate = setTimeout(updateHash, UPDATE_DELAY);\n}\n\nexport function delayHashUpdate() {\n  if (pendingUpdate != null) {\n    scheduleUpdate();\n  }\n}\n\nfunction updateHash() {\n  pendingUpdate = null;\n  // console.log(`updateHash at ${Date.now()}`);\n  let updated = false;\n  for (let obj of updatedObjects) {\n    let key = trackedObjects.get(obj);\n    if (key === undefined) {\n      if (currentHashState.hasOwnProperty(key)) {\n        updated = true;\n      }\n      // Object may have been unregistered after update event.\n      continue;\n    }\n    updated = true;\n    currentHashState[key] = obj.toJSON();\n  }\n  updatedObjects.clear();\n  if (updated) {\n    let newHash = urlSafeStringify(currentHashState);\n    if (newHash !== lastHash) {\n      lastHash = newHash;\n      // console.log(`replaceState at ${Date.now()}`);\n      if (lastHash === '{}') {\n        history.replaceState(null, null, '#');\n      } else {\n        history.replaceState(null, null, '#!' + lastHash);\n      }\n      // console.log(`replaceState done at ${Date.now()}`);\n    }\n    // window.location.hash = lastHash;\n  }\n}\n\naddEventListener('hashchange', updateTrackedObjectsFromHash);\n\n// Called with this == the object.\nfunction handleObjectUpdate(this: Trackable) {\n  let obj = this;\n  if (updatingObject === obj) {\n    // We caused this event, so ignore it.\n    return;\n  }\n  updatedObjects.add(obj);\n  scheduleUpdate();\n}\n\nexport function registerTrackable(key: string, obj: Trackable) {\n  if (trackedKeys.has(key)) {\n    throw new Error(`Key ${JSON.stringify(key)} already registered.`);\n  }\n  if (trackedObjects.has(obj)) {\n    throw new Error(`Object already registered.`);\n  }\n  trackedKeys.set(key, obj);\n  trackedObjects.set(obj, key);\n  if (currentHashState.hasOwnProperty(key)) {\n    // console.log(`registering ${key} which has existing state`);\n    obj.restoreState(currentHashState[key]);\n    // console.log(obj);\n  }\n  obj.changed.add(handleObjectUpdate, obj);\n  handleObjectUpdate.call(obj);\n};\n\nexport function unregisterTrackable(keyOrObject: string | Trackable) {\n  let obj = trackedKeys.get(<string>keyOrObject);\n  let key: string;\n  if (obj !== undefined) {\n    key = <string>keyOrObject;\n  } else {\n    key = trackedObjects.get(<Trackable>keyOrObject);\n    if (key === undefined) {\n      throw new Error('Key or object not registered.');\n    }\n    obj = <Trackable>keyOrObject;\n  }\n  trackedKeys.delete(key);\n  trackedObjects.delete(obj);\n  obj.changed.remove(handleObjectUpdate, obj);\n  handleObjectUpdate.call(obj);\n};\n\n// Initialize currentHashState.\nupdateTrackedObjectsFromHash();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/url_hash_state.ts\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/neuroglancer/viewer.css\n ** module id = 134\n ** module chunks = 0\n **/","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {KeySequenceMap} from 'neuroglancer/util/keyboard_shortcut_handler';\n\n/**\n * This binds the default set of viewer key bindings.\n */\nexport function makeDefaultKeyBindings(keyMap: KeySequenceMap) {\n  keyMap.bind('arrowleft', 'x-');\n  keyMap.bind('arrowright', 'x+');\n  keyMap.bind('arrowup', 'y-');\n  keyMap.bind('arrowdown', 'y+');\n  keyMap.bind('comma', 'z-');\n  keyMap.bind('period', 'z+');\n  keyMap.bind('keyz', 'snap');\n  keyMap.bind('control+equal', 'zoom-in');\n  keyMap.bind('control+shift+equal', 'zoom-in');\n  keyMap.bind('control+minus', 'zoom-out');\n  keyMap.bind('keyr', 'rotate-relative-z-');\n  keyMap.bind('keye', 'rotate-relative-z+');\n  keyMap.bind('shift+arrowdown', 'rotate-relative-x-');\n  keyMap.bind('shift+arrowup', 'rotate-relative-x+');\n  keyMap.bind('shift+arrowleft', 'rotate-relative-y-');\n  keyMap.bind('shift+arrowright', 'rotate-relative-y+');\n  keyMap.bind('keyl', 'recolor');\n  keyMap.bind('keyx', 'clear-segments');\n  keyMap.bind('keys', 'toggle-show-slices');\n  keyMap.bind('keyb', 'toggle-scale-bar');\n  keyMap.bind('keya', 'toggle-axis-lines');\n\n  for (let i = 1; i <= 9; ++i) {\n    keyMap.bind('digit' + i, 'toggle-layer-' + i);\n  }\n\n  keyMap.bind('keyn', 'add-layer');\n  keyMap.bind('keyh', 'help');\n\n  keyMap.bind('space', 'toggle-layout');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/neuroglancer/default_key_bindings.ts\n **/"],"sourceRoot":""}